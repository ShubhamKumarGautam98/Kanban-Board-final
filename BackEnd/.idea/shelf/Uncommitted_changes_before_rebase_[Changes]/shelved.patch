Index: .idea/shelf/Uncommitted_changes_before_Update_at_26-03-2024_12_11__Changes_1.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_26-03-2024_12_11__Changes_1.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_26-03-2024_12_11__Changes_1.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_26-03-2024_12_11__Changes_1.xml	(revision b69f49a111fee2115c6c717c8827c23af62d88ab)
+++ /dev/null	(revision b69f49a111fee2115c6c717c8827c23af62d88ab)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_26-03-2024_12_11_[Changes]1" date="1711435325024" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26-03-2024_12_11_[Changes]1/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 26-03-2024 12:11 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_26-03-2024_12_11_[Changes]1/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_26-03-2024_12_11_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_26-03-2024_12_11_[Changes]1/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_26-03-2024_12_11_[Changes]1/shelved.patch	(revision b69f49a111fee2115c6c717c8827c23af62d88ab)
+++ /dev/null	(revision b69f49a111fee2115c6c717c8827c23af62d88ab)
@@ -1,2798 +0,0 @@
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_2_25_2024_11_00_PM__Changes_1.xml
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2_25_2024_11_00_PM__Changes_1.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_2_25_2024_11_00_PM__Changes_1.xml
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_2_25_2024_11_00_PM__Changes_1.xml	
-+++ /dev/null	
-@@ -1,4 +0,0 @@
--<changelist name="Uncommitted_changes_before_Update_at_2_25_2024_11_00_PM_[Changes]1" date="1708882270819" recycled="true" deleted="true">
--  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2_25_2024_11_00_PM_[Changes]1/shelved.patch" />
--  <option name="DESCRIPTION" value="Uncommitted changes before Update at 2/25/2024 11:00 PM [Changes]" />
--</changelist>
-\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_27-02-2024_23_08__Changes_1.xml
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_27-02-2024_23_08__Changes_1.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_27-02-2024_23_08__Changes_1.xml
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_27-02-2024_23_08__Changes_1.xml	
-+++ /dev/null	
-@@ -1,4 +0,0 @@
--<changelist name="Uncommitted_changes_before_Update_at_27-02-2024_23_08_[Changes]1" date="1709055523851" recycled="true" deleted="true">
--  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_27-02-2024_23_08_[Changes]1/shelved.patch" />
--  <option name="DESCRIPTION" value="Uncommitted changes before Update at 27-02-2024 23:08 [Changes]" />
--</changelist>
-\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_01-03-2024_22_16__Changes_1.xml
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_01-03-2024_22_16__Changes_1.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_01-03-2024_22_16__Changes_1.xml
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_01-03-2024_22_16__Changes_1.xml	
-+++ /dev/null	
-@@ -1,4 +0,0 @@
--<changelist name="Uncommitted_changes_before_Update_at_01-03-2024_22_16_[Changes]1" date="1709311612880" recycled="true" deleted="true">
--  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_01-03-2024_22_16_[Changes]1/shelved.patch" />
--  <option name="DESCRIPTION" value="Uncommitted changes before Update at 01-03-2024 22:16 [Changes]" />
--</changelist>
-\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_25-02-2024_23_04_[Changes]/shelved.patch
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_25-02-2024_23_04_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_25-02-2024_23_04_[Changes]/shelved.patch
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_25-02-2024_23_04_[Changes]/shelved.patch	
-+++ /dev/null	
-@@ -1,52 +0,0 @@
--Index: .idea/workspace.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"3accaff2-95c0-4f5b-bacb-4249d94e92aa\" name=\"Changes\" comment=\"controller updated\">\r\n      <change beforePath=\"$PROJECT_DIR$/apigateway/src/main/java/com/niit/project/apigateway/configuration/Config.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/apigateway/src/main/java/com/niit/project/apigateway/configuration/Config.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"file://$PROJECT_DIR$/eurekaserver/pom.xml\" root0=\"SKIP_INSPECTION\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 4\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2cdYqHUix98h8sfJfDmmjGw5Lw0\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <OptionsSetting value=\"false\" id=\"Update\" />\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.lookFeel&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\" selected=\"Application.ApiGatewayApplication\">\r\n    <configuration name=\"ApiGatewayApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.niit.project.apigateway.ApiGatewayApplication\" />\r\n      <module name=\"apigateway\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.niit.project.apigateway.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"BoardTaskServiceApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.niit.project.boardtaskservice.BoardTaskServiceApplication\" />\r\n      <module name=\"boardtaskservice\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.niit.project.boardtaskservice.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"EurekaServerApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.niit.project.eurekaserver.EurekaServerApplication\" />\r\n      <module name=\"eurekaserver\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.niit.project.eurekaserver.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserAuthenticationServiceApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.niit.project.userauthenticationservice.UserAuthenticationServiceApplication\" />\r\n      <module name=\"userauthenticationservice\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.niit.project.userauthenticationservice.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserControllerTest (1)\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"userauthenticationservice\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.niit.project.userauthenticationservice.controller.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"com.niit.project.userauthenticationservice.controller\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.niit.project.userauthenticationservice.controller.UserControllerTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"JetRunConfigurationType\">\r\n      <module name=\"Kanban Board\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"KotlinStandaloneScriptRunConfigurationType\">\r\n      <module name=\"Kanban Board\" />\r\n      <option name=\"filePath\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.ApiGatewayApplication\" />\r\n        <item itemvalue=\"Application.BoardTaskServiceApplication\" />\r\n        <item itemvalue=\"Application.UserAuthenticationServiceApplication\" />\r\n        <item itemvalue=\"Application.EurekaServerApplication\" />\r\n        <item itemvalue=\"JUnit.UserControllerTest (1)\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"3accaff2-95c0-4f5b-bacb-4249d94e92aa\" name=\"Changes\" comment=\"\" />\r\n      <created>1708420669437</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1708420669437</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"started\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708421271711</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708421271711</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"started\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708423070225</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708423070225</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"updated UserService\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708443467339</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708443467339</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"security is created\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708495653761</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708495653761</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"security checking\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708495846412</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708495846412</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"security package is created\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708495897559</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708495897559</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"jwt security updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708498293469</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708498293469</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Application properties updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708498937269</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708498937269</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"jwt token security updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708500192558</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708500192558</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"IRepository updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708603781826</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708603781826</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"ITaskService And Proxy updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708609359280</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708609359280</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"register,savetask,updated task implemented\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708621466516</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708621466516</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"testing service layer login success and fail are updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708625633406</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708625633406</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"getUserName,getAllUser,getUserRole methods are updated in taskservice\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708626050836</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708626050836</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"userauth repository test case is updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708626533067</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708626533067</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"service interface changes are updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708668428842</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708668428842</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"JWTFilter updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708670581884</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708670581884</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"usercontroller layer updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708672581325</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708672581325</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"taskcontroller layer updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708673655848</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708673655848</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"taskcontroller layer methods updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708679464725</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708679464725</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"apigateway updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708680759507</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708680759507</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"apigateway updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708681307335</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708681307335</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"apigateway updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708681837287</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708681837287</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\"updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708685745360</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708685745360</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00025\" summary=\"Annotations and Application.properties updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708705904757</created>\r\n      <option name=\"number\" value=\"00025\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708705904757</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00026\" summary=\"controller for (save task to user,get one task,get all task) service testing\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708871376856</created>\r\n      <option name=\"number\" value=\"00026\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708871376856</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00027\" summary=\"controller for (save task to user,get one task,get all task) service testing\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708871413309</created>\r\n      <option name=\"number\" value=\"00027\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708871413309</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00028\" summary=\"delete user is updated inn= service and controller\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708877706216</created>\r\n      <option name=\"number\" value=\"00028\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708877706216</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00029\" summary=\"controller updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708881214067</created>\r\n      <option name=\"number\" value=\"00029\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00029\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708881214067</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"30\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"security is created\" />\r\n    <MESSAGE value=\"security checking\" />\r\n    <MESSAGE value=\"security package is created\" />\r\n    <MESSAGE value=\"jwt security updated\" />\r\n    <MESSAGE value=\"Application properties updated\" />\r\n    <MESSAGE value=\"jwt token security updated\" />\r\n    <MESSAGE value=\"IRepository updated\" />\r\n    <MESSAGE value=\"IRepository AND PROXY updated\" />\r\n    <MESSAGE value=\"ITaskService And Proxy updated\" />\r\n    <MESSAGE value=\"register,savetask,updated task implemented\" />\r\n    <MESSAGE value=\"testing service layer login success and fail are updated\" />\r\n    <MESSAGE value=\"getUserName,getAllUser,getUserRole methods are updated in taskservice\" />\r\n    <MESSAGE value=\"userauth repository test case is updated\" />\r\n    <MESSAGE value=\"service interface changes are updated\" />\r\n    <MESSAGE value=\"JWTFilter updated\" />\r\n    <MESSAGE value=\"usercontroller layer updated\" />\r\n    <MESSAGE value=\"taskcontroller layer updated\" />\r\n    <MESSAGE value=\"taskcontroller layer methods updated\" />\r\n    <MESSAGE value=\"apigateway updated\" />\r\n    <MESSAGE value=\"updated\" />\r\n    <MESSAGE value=\"an\" />\r\n    <MESSAGE value=\"Annotations and Application.properties updated\" />\r\n    <MESSAGE value=\"controller for (save task to user,get one task,get all task) service testing\" />\r\n    <MESSAGE value=\"delete user is updated inn= service and controller\" />\r\n    <MESSAGE value=\"controller updated\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"controller updated\" />\r\n  </component>\r\n</project>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/.idea/workspace.xml b/.idea/workspace.xml
----- a/.idea/workspace.xml	(revision 9b37985fef5a6858a461b9a9f6c521372b5ba546)
--+++ b/.idea/workspace.xml	(date 1708882453246)
--@@ -4,8 +4,8 @@
--     <option name="autoReloadType" value="SELECTIVE" />
--   </component>
--   <component name="ChangeListManager">
---    <list default="true" id="3accaff2-95c0-4f5b-bacb-4249d94e92aa" name="Changes" comment="controller updated">
---      <change beforePath="$PROJECT_DIR$/apigateway/src/main/java/com/niit/project/apigateway/configuration/Config.java" beforeDir="false" afterPath="$PROJECT_DIR$/apigateway/src/main/java/com/niit/project/apigateway/configuration/Config.java" afterDir="false" />
--+    <list default="true" id="3accaff2-95c0-4f5b-bacb-4249d94e92aa" name="Changes" comment="api gateway is updated">
--+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
--     </list>
--     <option name="SHOW_DIALOG" value="false" />
--     <option name="HIGHLIGHT_CONFLICTS" value="true" />
--@@ -386,11 +386,18 @@
--       <option name="project" value="LOCAL" />
--       <updated>1708881214067</updated>
--     </task>
---    <option name="localTasksCounter" value="30" />
--+    <task id="LOCAL-00030" summary="api gateway is updated">
--+      <option name="closed" value="true" />
--+      <created>1708881820173</created>
--+      <option name="number" value="00030" />
--+      <option name="presentableId" value="LOCAL-00030" />
--+      <option name="project" value="LOCAL" />
--+      <updated>1708881820174</updated>
--+    </task>
--+    <option name="localTasksCounter" value="31" />
--     <servers />
--   </component>
--   <component name="VcsManagerConfiguration">
---    <MESSAGE value="security is created" />
--     <MESSAGE value="security checking" />
--     <MESSAGE value="security package is created" />
--     <MESSAGE value="jwt security updated" />
--@@ -415,6 +422,7 @@
--     <MESSAGE value="controller for (save task to user,get one task,get all task) service testing" />
--     <MESSAGE value="delete user is updated inn= service and controller" />
--     <MESSAGE value="controller updated" />
---    <option name="LAST_COMMIT_MESSAGE" value="controller updated" />
--+    <MESSAGE value="api gateway is updated" />
--+    <option name="LAST_COMMIT_MESSAGE" value="api gateway is updated" />
--   </component>
-- </project>
--\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_3_1_2024_10_18_PM_[Changes]1/shelved.patch
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_3_1_2024_10_18_PM_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_3_1_2024_10_18_PM_[Changes]1/shelved.patch
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_3_1_2024_10_18_PM_[Changes]1/shelved.patch	
-+++ /dev/null	
-@@ -1,654 +0,0 @@
--Index: userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/controller/UserController.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.niit.project.userauthenticationservice.controller;\r\n\r\nimport com.niit.project.userauthenticationservice.domain.UserDetails;\r\nimport com.niit.project.userauthenticationservice.exception.UserAlreadyExistsException;\r\nimport com.niit.project.userauthenticationservice.exception.UserLoginException;\r\nimport com.niit.project.userauthenticationservice.security.ISecurityTokenGenerator;\r\nimport com.niit.project.userauthenticationservice.services.IUserService;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.*;\r\n\r\nimport java.util.Map;\r\n\r\n@RestController\r\n@RequestMapping(\"/api/v1\")\r\npublic class UserController {\r\n    private final IUserService userService;\r\n    private final ISecurityTokenGenerator tokenGenerator;\r\n\r\n    @Autowired\r\n    public UserController(IUserService userService, ISecurityTokenGenerator tokenGenerator) {\r\n        this.userService = userService;\r\n        this.tokenGenerator = tokenGenerator;\r\n    }\r\n\r\n    @PostMapping(\"/saveUser\")\r\n    public ResponseEntity<?> registerUser(@RequestBody UserDetails user) {\r\n        ResponseEntity responseEntity;\r\n        try {\r\n            UserDetails saveduser = userService.registerUser(user);\r\n            responseEntity = new ResponseEntity<>(saveduser, HttpStatus.ACCEPTED);\r\n        } catch (UserAlreadyExistsException exception) {\r\n            responseEntity = new ResponseEntity<>(exception.getMessage(), HttpStatus.CONFLICT);\r\n        }\r\n        return responseEntity;\r\n    }\r\n    @PostMapping(\"/login\")\r\n    public ResponseEntity<?> loginUser(@RequestBody UserDetails user){\r\n        ResponseEntity responseEntity;\r\n        try{\r\n            UserDetails fetchedUser=userService.loginUser(user);\r\n            Map<String,String> token=tokenGenerator.generateToken(fetchedUser);\r\n            responseEntity=new ResponseEntity<>(token, HttpStatus.FOUND);\r\n        }catch (UserLoginException exception){\r\n            responseEntity=new ResponseEntity<>(exception.getMessage(),HttpStatus.CONFLICT);\r\n        }\r\n        return responseEntity;\r\n    }\r\n    @PutMapping(\"/passwordChange\")\r\n    public ResponseEntity<?> updatePassword(@RequestBody UserDetails user){\r\n        ResponseEntity responseEntity;\r\n        try{\r\n            UserDetails changedPassword=userService.updatePassword(user);\r\n            responseEntity=new ResponseEntity<>(changedPassword, HttpStatus.CREATED);\r\n        }catch (UserLoginException exception){\r\n            responseEntity=new ResponseEntity<>(exception.getMessage(),HttpStatus.CONFLICT);\r\n        }\r\n        return responseEntity;\r\n    }\r\n}
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/controller/UserController.java b/userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/controller/UserController.java
----- a/userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/controller/UserController.java	
--+++ b/userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/controller/UserController.java	
--@@ -40,13 +40,15 @@
--         ResponseEntity responseEntity;
--         try{
--             UserDetails fetchedUser=userService.loginUser(user);
---            Map<String,String> token=tokenGenerator.generateToken(fetchedUser);
--+           Map<String,String> token=tokenGenerator.generateToken(fetchedUser);
--+
--             responseEntity=new ResponseEntity<>(token, HttpStatus.FOUND);
--         }catch (UserLoginException exception){
--             responseEntity=new ResponseEntity<>(exception.getMessage(),HttpStatus.CONFLICT);
--         }
--         return responseEntity;
--     }
--+
--     @PutMapping("/passwordChange")
--     public ResponseEntity<?> updatePassword(@RequestBody UserDetails user){
--         ResponseEntity responseEntity;
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_14_41_[Changes]1/shelved.patch
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_14_41_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_14_41_[Changes]1/shelved.patch
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_14_41_[Changes]1/shelved.patch	
--+++ /dev/null	
--@@ -1,40 +0,0 @@
---Index: boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/TaskServiceImpl.java
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+>package com.niit.project.boardtaskservice.services;\r\n\r\nimport com.niit.project.boardtaskservice.domain.Task;\r\nimport com.niit.project.boardtaskservice.domain.UserDetails;\r\nimport com.niit.project.boardtaskservice.exceptions.TaskAlreadyExistsException;\r\nimport com.niit.project.boardtaskservice.exceptions.TaskNotFoundException;\r\nimport com.niit.project.boardtaskservice.exceptions.UserAlreadyExistsException;\r\nimport com.niit.project.boardtaskservice.exceptions.UserNotFoundException;\r\nimport com.niit.project.boardtaskservice.proxy.TaskProxy;\r\nimport com.niit.project.boardtaskservice.repository.ITaskRepository;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\nimport java.util.Optional;\r\n@Service\r\npublic class TaskServiceImpl implements ITaskService{\r\n    private final ITaskRepository taskRepository;\r\n    private final TaskProxy taskProxy;\r\n@Autowired\r\n    public TaskServiceImpl(ITaskRepository taskRepository, TaskProxy taskProxy) {\r\n        this.taskRepository = taskRepository;\r\n        this.taskProxy = taskProxy;\r\n    }\r\n    @Override\r\n    public UserDetails registerUser(UserDetails userdetails)throws UserAlreadyExistsException {\r\n        if(taskRepository.findById(userdetails.getEmailId()).isPresent()){\r\n            throw new UserAlreadyExistsException(\"UserAlreadyExists\");\r\n        }\r\n        else{\r\n            UserDetails insertedUser=taskRepository.save(userdetails);\r\n            taskProxy.registerUser(insertedUser);\r\n            return insertedUser;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public UserDetails saveTaskToUser(Task task, String userEmail) throws TaskAlreadyExistsException,UserAlreadyExistsException {\r\n        Optional<UserDetails> userOptional=taskRepository.findById(userEmail);\r\n        if(userOptional.isPresent()){\r\n            UserDetails fetchedUser=userOptional.get();\r\n            List<Task> taskList=fetchedUser.getTaskList();\r\n            if(taskList==null){\r\n                fetchedUser.setTaskList(Arrays.asList(task));\r\n            }\r\n            else{\r\n                boolean taskpresent=false;\r\n                for(Task searchTask:taskList){\r\n                    if(searchTask.getTaskName().equals(task.getTaskName())){\r\n                        taskpresent=true;\r\n                        break;\r\n                    }\r\n                }\r\n                if(taskpresent){\r\n                    throw new TaskAlreadyExistsException(\"Task already present in given emailid\");\r\n                }\r\n                else{\r\n                    taskList.add(task);\r\n                    fetchedUser.setTaskList(taskList);\r\n                }\r\n            }\r\n            return  taskRepository.save(fetchedUser);\r\n\r\n        }\r\n        else{\r\n            throw new UserAlreadyExistsException(\"user already exist in given emailid\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public UserDetails updateTaskToUser(Task task, String userEmail) throws TaskNotFoundException,UserNotFoundException {\r\n        Optional<UserDetails> userOptional=taskRepository.findById(userEmail);\r\n        if(userOptional.isPresent()){\r\n            UserDetails fetchedUser=userOptional.get();\r\n            List<Task> taskList=fetchedUser.getTaskList();\r\n            if(taskList==null || taskList.isEmpty() ) {\r\n                throw new TaskNotFoundException(\"TaskList with Specified Id is not Found  \");\r\n            }\r\n            else{\r\n                boolean taskPresent=false;\r\n                for(Task updateTask:taskList) {\r\n                    if (updateTask.getTaskId() == task.getTaskId()) {\r\n                        int index = 0;\r\n                        updateTask.setTaskName(task.getTaskName());\r\n                        updateTask.setTaskDescription(task.getTaskDescription());\r\n                        updateTask.setAssignTo(task.getAssignTo());\r\n                        updateTask.setDueDate(task.getDueDate());\r\n                        updateTask.setStatus(task.getStatus());\r\n                        index = taskList.indexOf(updateTask);\r\n                        fetchedUser.setTaskList(taskList);\r\n                        taskPresent = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if(taskPresent==false){\r\n                    throw new TaskNotFoundException(\"Task with Specified Id is not Found \");\r\n\r\n                }\r\n            }\r\n            return taskRepository.save(fetchedUser);\r\n        }\r\n        else {\r\n            throw new UserNotFoundException(\"user with the specified Id not found\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public UserDetails deleteTask(Task task, String UserEmailId) throws TaskNotFoundException{\r\n        Optional<UserDetails> userOptional=taskRepository.findById(UserEmailId);\r\n        if(userOptional.isPresent()){\r\n            UserDetails fetchedUser=userOptional.get();\r\n            List<Task> taskList=fetchedUser.getTaskList();\r\n            if(taskList==null || taskList.isEmpty() ) {\r\n                throw new TaskNotFoundException(\"TaskList with Specified Id is not Found\");\r\n            }\r\n            else{\r\n                boolean taskPresent=false;\r\n                for(Task existingTask:taskList) {\r\n                    if (existingTask.getTaskId() == task.getTaskId()) {\r\n                        taskList.remove(existingTask);\r\n                        fetchedUser.setTaskList(taskList);\r\n                        taskPresent = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if(taskPresent==false){\r\n                    throw new TaskNotFoundException(\"Task with Specified Id is not Found \");\r\n\r\n                }\r\n            }\r\n            return taskRepository.save(fetchedUser);\r\n        }\r\n        else {\r\n            throw new UserNotFoundException(\"user with the specified Id not found\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public List<Task> getAllTaskFromUser(String UserEmailId)throws TaskNotFoundException,UserNotFoundException {\r\n        Optional<UserDetails> userOptional=taskRepository.findById(UserEmailId);\r\n        if(userOptional.isPresent()){\r\n            UserDetails fetchedUser=userOptional.get();\r\n            List<Task> taskList=fetchedUser.getTaskList();\r\n            if(taskList==null || taskList.isEmpty() ) {\r\n                throw new TaskNotFoundException(\"TaskList with Specified Id is not Found  \");\r\n            }\r\n            else{\r\n                return taskList;\r\n\r\n            }\r\n        }\r\n        else {\r\n            throw new UserNotFoundException(\"user with the specified Id not found\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public Task getOneTaskById(Task task, String EmailId) throws TaskNotFoundException,UserNotFoundException{\r\n        Optional<UserDetails >userOptional=taskRepository.findById(EmailId);\r\n        if (userOptional.isPresent()) {\r\n            UserDetails fetchedUser=userOptional.get();\r\n            List<Task> taskList=fetchedUser.getTaskList();\r\n            if(taskList==null || taskList.isEmpty() ) {\r\n                throw new TaskNotFoundException(\"TaskList with Specified Id is not Found  \");\r\n            }\r\n            else{\r\n                for(Task onetask:taskList){\r\n                    if(onetask.getTaskName().equals(task.getTaskName())){\r\n                        return onetask;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        throw new UserNotFoundException(\"user with the specified Id not found\");\r\n    }\r\n\r\n    @Override\r\n    public String getUserName(String emailID)throws UserNotFoundException {\r\n        Optional<UserDetails >fetchedUser=taskRepository.findById(emailID);\r\n        if (fetchedUser.isEmpty()) {\r\n            throw new UserNotFoundException(\"user with the specified Id not found\");\r\n        }\r\n        return fetchedUser.get().getUserName();\r\n    }\r\n    @Override\r\n    public List<UserDetails> getAllUser(String emailId) throws UserNotFoundException{\r\n        Optional<UserDetails >fetchedUser=taskRepository.findById(emailId);\r\n        if (fetchedUser.isEmpty()) {\r\n            throw new UserNotFoundException(\"user with the specified Id not found\");\r\n        }\r\n        return taskRepository.findAll();\r\n    }\r\n\r\n    @Override\r\n    public String getUserRole(String emailId)throws UserNotFoundException {\r\n        if (taskRepository.findById(emailId).isEmpty()) {\r\n            throw new UserNotFoundException(\"user with the specified Id not found\");\r\n        }\r\n        return taskRepository.findById(emailId).get().getRole();\r\n    }\r\n}\r\n
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/TaskServiceImpl.java b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/TaskServiceImpl.java
------ a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/TaskServiceImpl.java	
---+++ b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/TaskServiceImpl.java	
---@@ -156,8 +156,8 @@
---     }
--- 
---     @Override
----    public Task getOneTaskById(Task task, String EmailId) throws TaskNotFoundException,UserNotFoundException{
----        Optional<UserDetails >userOptional=taskRepository.findById(EmailId);
---+    public Task getOneTaskById(Task task, String userEmailId) throws TaskNotFoundException,UserNotFoundException{
---+        Optional<UserDetails >userOptional=taskRepository.findById(userEmailId);
---         if (userOptional.isPresent()) {
---             UserDetails fetchedUser=userOptional.get();
---             List<Task> taskList=fetchedUser.getTaskList();
---Index: boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/ITaskService.java
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+>package com.niit.project.boardtaskservice.services;\r\n\r\nimport com.niit.project.boardtaskservice.domain.Task;\r\nimport com.niit.project.boardtaskservice.domain.UserDetails;\r\nimport com.niit.project.boardtaskservice.exceptions.TaskAlreadyExistsException;\r\nimport com.niit.project.boardtaskservice.exceptions.TaskNotFoundException;\r\nimport com.niit.project.boardtaskservice.exceptions.UserAlreadyExistsException;\r\nimport com.niit.project.boardtaskservice.exceptions.UserNotFoundException;\r\n\r\nimport java.util.List;\r\n\r\npublic interface ITaskService {\r\n    UserDetails registerUser (UserDetails userdetails)throws UserAlreadyExistsException;\r\n    UserDetails saveTaskToUser(Task task, String userEmail) throws TaskAlreadyExistsException,UserAlreadyExistsException;\r\n    UserDetails updateTaskToUser(Task task, String userEmail)throws TaskNotFoundException, UserNotFoundException;\r\n\r\n    UserDetails deleteTask(Task task, String UserEmailId)throws TaskNotFoundException;\r\n    List<Task> getAllTaskFromUser(String UserEmailId)throws TaskNotFoundException,UserNotFoundException ;\r\n    Task getOneTaskById(Task task , String EmailId)throws TaskNotFoundException,UserNotFoundException;\r\n\r\n    String getUserName(String emailId)throws UserNotFoundException;\r\n    List<UserDetails> getAllUser(String emailId) throws UserNotFoundException;\r\n    String getUserRole(String emailId) throws UserNotFoundException;\r\n}\r\n
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/ITaskService.java b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/ITaskService.java
------ a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/ITaskService.java	
---+++ b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/ITaskService.java	
---@@ -16,7 +16,7 @@
--- 
---     UserDetails deleteTask(Task task, String UserEmailId)throws TaskNotFoundException;
---     List<Task> getAllTaskFromUser(String UserEmailId)throws TaskNotFoundException,UserNotFoundException ;
----    Task getOneTaskById(Task task , String EmailId)throws TaskNotFoundException,UserNotFoundException;
---+    Task getOneTaskById(Task task , String UserEmailId)throws TaskNotFoundException,UserNotFoundException;
--- 
---     String getUserName(String emailId)throws UserNotFoundException;
---     List<UserDetails> getAllUser(String emailId) throws UserNotFoundException;
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_17_01__Changes_1.xml
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_17_01__Changes_1.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_17_01__Changes_1.xml
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_17_01__Changes_1.xml	
--+++ /dev/null	
--@@ -1,4 +0,0 @@
---<changelist name="Uncommitted_changes_before_Update_at_23-02-2024_17_01_[Changes]1" date="1708687885675" recycled="true" deleted="true">
---  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_17_01_[Changes]1/shelved.patch" />
---  <option name="DESCRIPTION" value="Uncommitted changes before Update at 23-02-2024 17:01 [Changes]" />
---</changelist>
--\ No newline at end of file
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_17_01_[Changes]1/shelved.patch
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_17_01_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_17_01_[Changes]1/shelved.patch
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_17_01_[Changes]1/shelved.patch	
--+++ /dev/null	
--@@ -1,125 +0,0 @@
---Index: userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/UserAuthenticationServiceApplication.java
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+>package com.niit.project.userauthenticationservice;\r\n\r\nimport org.springframework.boot.SpringApplication;\r\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\r\n\r\n@SpringBootApplication\r\npublic class UserAuthenticationServiceApplication {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tSpringApplication.run(UserAuthenticationServiceApplication.class, args);\r\n\t}\r\n\r\n}\r\n
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/UserAuthenticationServiceApplication.java b/userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/UserAuthenticationServiceApplication.java
------ a/userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/UserAuthenticationServiceApplication.java	
---+++ b/userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/UserAuthenticationServiceApplication.java	
---@@ -2,8 +2,10 @@
--- 
--- import org.springframework.boot.SpringApplication;
--- import org.springframework.boot.autoconfigure.SpringBootApplication;
---+import org.springframework.cloud.netflix.eureka.EnableEurekaClient;
--- 
--- @SpringBootApplication
---+@EnableEurekaClient
--- public class UserAuthenticationServiceApplication {
--- 
--- 	public static void main(String[] args) {
---Index: boardtaskservice/src/main/java/com/niit/project/boardtaskservice/BoardTaskServiceApplication.java
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+>package com.niit.project.boardtaskservice;\r\n\r\nimport com.niit.project.boardtaskservice.filter.JWTFilter;\r\nimport org.springframework.boot.SpringApplication;\r\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\r\nimport org.springframework.boot.web.servlet.FilterRegistrationBean;\r\nimport org.springframework.cloud.openfeign.EnableFeignClients;\r\nimport org.springframework.context.annotation.Bean;\r\n\r\n@SpringBootApplication\r\n@EnableFeignClients\r\npublic class BoardTaskServiceApplication {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tSpringApplication.run(BoardTaskServiceApplication.class, args);\r\n\t}\r\n\t@Bean\r\n\tpublic FilterRegistrationBean jwtFilterBean(){\r\n\t\tFilterRegistrationBean filterRegistrationBean = new FilterRegistrationBean();\r\n\r\n\t\tfilterRegistrationBean.addUrlPatterns(\"/api/v2/*\");\r\n\t\tfilterRegistrationBean.setFilter(new JWTFilter());\r\n\t\treturn filterRegistrationBean;\r\n\t}\r\n\r\n}\r\n
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/BoardTaskServiceApplication.java b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/BoardTaskServiceApplication.java
------ a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/BoardTaskServiceApplication.java	
---+++ b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/BoardTaskServiceApplication.java	
---@@ -4,11 +4,13 @@
--- import org.springframework.boot.SpringApplication;
--- import org.springframework.boot.autoconfigure.SpringBootApplication;
--- import org.springframework.boot.web.servlet.FilterRegistrationBean;
---+
--- import org.springframework.cloud.openfeign.EnableFeignClients;
--- import org.springframework.context.annotation.Bean;
--- 
--- @SpringBootApplication
--- @EnableFeignClients
---+
--- public class BoardTaskServiceApplication {
--- 
--- 	public static void main(String[] args) {
---Index: apigateway/src/main/java/com/niit/project/apigateway/ApiGatewayApplication.java
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+>package com.niit.project.apigateway;\r\n\r\nimport org.springframework.boot.SpringApplication;\r\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\r\nimport org.springframework.context.annotation.Bean;\r\nimport org.springframework.context.annotation.Configuration;\r\n\r\n@SpringBootApplication\r\npublic class ApiGatewayApplication {\r\n\tpublic static void main(String[] args) {\r\n\t\tSpringApplication.run(ApiGatewayApplication.class, args);\r\n\t}\r\n\r\n\r\n\r\n}\r\n
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/apigateway/src/main/java/com/niit/project/apigateway/ApiGatewayApplication.java b/apigateway/src/main/java/com/niit/project/apigateway/ApiGatewayApplication.java
------ a/apigateway/src/main/java/com/niit/project/apigateway/ApiGatewayApplication.java	
---+++ b/apigateway/src/main/java/com/niit/project/apigateway/ApiGatewayApplication.java	
---@@ -6,6 +6,7 @@
--- import org.springframework.context.annotation.Configuration;
--- 
--- @SpringBootApplication
---+
--- public class ApiGatewayApplication {
--- 	public static void main(String[] args) {
--- 		SpringApplication.run(ApiGatewayApplication.class, args);
---Index: userauthenticationservice/src/main/resources/application.properties
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+>spring.datasource.url=jdbc:mysql://localhost:3306/kanbanuserdb?createDatabaseIfNotExist=true\r\nspring.datasource.username=root\r\nspring.datasource.password=27a05b2000A@K\r\nspring.jpa.hibernate.ddl-auto=update\r\nspring.jpa.show-sql=true\r\neureka.client.serviceUrl.defaultZone=htttp://localhost:8761/eureka\r\neureka.client.fetchRegistry=true\r\neureka.client.registerWithEureka=true\r\nspring.application.name=userauthservice\r\neureka.instance.hostname=localhost\r\nserver.port=8081\r\n
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/userauthenticationservice/src/main/resources/application.properties b/userauthenticationservice/src/main/resources/application.properties
------ a/userauthenticationservice/src/main/resources/application.properties	
---+++ b/userauthenticationservice/src/main/resources/application.properties	
---@@ -1,6 +1,6 @@
--- spring.datasource.url=jdbc:mysql://localhost:3306/kanbanuserdb?createDatabaseIfNotExist=true
--- spring.datasource.username=root
----spring.datasource.password=27a05b2000A@K
---+spring.datasource.password=124751
--- spring.jpa.hibernate.ddl-auto=update
--- spring.jpa.show-sql=true
--- eureka.client.serviceUrl.defaultZone=htttp://localhost:8761/eureka
---Index: apigateway/src/main/java/com/niit/project/apigateway/configuration/Config.java
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+>package com.niit.project.apigateway.configuration;\r\n\r\nimport org.springframework.context.annotation.Bean;\r\nimport org.springframework.context.annotation.Configuration;\r\nimport org.springframework.cloud.gateway.route.RouteLocator;\r\nimport org.springframework.cloud.gateway.route.builder.RouteLocatorBuilder;\r\n\r\n@Configuration\r\npublic class Config {\r\n    @Bean\r\n    public RouteLocator myRoutes(RouteLocatorBuilder builder){\r\n        return builder.routes().route(p -> p.path(\"/api/v1/**\").uri(\"lb://userauthservice\"))\r\n                .route(p -> p.path(\"/api/v2/**\",\"/api/v3/**\").uri(\"lb://boardtaskservice\"))\r\n                .build();\r\n    }\r\n}\r\n
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/apigateway/src/main/java/com/niit/project/apigateway/configuration/Config.java b/apigateway/src/main/java/com/niit/project/apigateway/configuration/Config.java
------ a/apigateway/src/main/java/com/niit/project/apigateway/configuration/Config.java	
---+++ b/apigateway/src/main/java/com/niit/project/apigateway/configuration/Config.java	
---@@ -6,11 +6,12 @@
--- import org.springframework.cloud.gateway.route.builder.RouteLocatorBuilder;
--- 
--- @Configuration
---+
--- public class Config {
---     @Bean
---     public RouteLocator myRoutes(RouteLocatorBuilder builder){
----        return builder.routes().route(p -> p.path("/api/v1/**").uri("lb://userauthservice"))
----                .route(p -> p.path("/api/v2/**","/api/v3/**").uri("lb://boardtaskservice"))
---+        return builder.routes().route(p -> p.path("/api/v1/*").uri("http://localhost:8081/"))
---+                .route(p -> p.path("/api/v2/**","/api/v3/*").uri("http://localhost:8087/"))
---                 .build();
---     }
--- }
---Index: boardtaskservice/src/main/java/com/niit/project/boardtaskservice/proxy/TaskProxy.java
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+>package com.niit.project.boardtaskservice.proxy;\r\n\r\n\r\nimport com.niit.project.boardtaskservice.domain.UserDetails;\r\n\r\nimport org.springframework.cloud.openfeign.FeignClient;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.RequestBody;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\n\r\n@FeignClient(name=\"userauthservice\",url=\"localhost:8081\")\r\npublic interface TaskProxy {\r\n    @RequestMapping(\"/api/v1/saveUser\")\r\n    public ResponseEntity<?> registerUser(@RequestBody UserDetails user);\r\n\r\n}\r\n
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/proxy/TaskProxy.java b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/proxy/TaskProxy.java
------ a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/proxy/TaskProxy.java	
---+++ b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/proxy/TaskProxy.java	
---@@ -8,7 +8,7 @@
--- import org.springframework.web.bind.annotation.RequestBody;
--- import org.springframework.web.bind.annotation.RequestMapping;
--- 
----@FeignClient(name="userauthservice",url="localhost:8081")
---+@FeignClient(name="user-auth-service",url="localhost:8081")
--- public interface TaskProxy {
---     @RequestMapping("/api/v1/saveUser")
---     public ResponseEntity<?> registerUser(@RequestBody UserDetails user);
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_12_14__Changes_1.xml
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_12_14__Changes_1.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_12_14__Changes_1.xml
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_12_14__Changes_1.xml	
--+++ /dev/null	
--@@ -1,4 +0,0 @@
---<changelist name="Uncommitted_changes_before_Update_at_23-02-2024_12_14_[Changes]1" date="1708670686510" recycled="true" deleted="true">
---  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_12_14_[Changes]1/shelved.patch" />
---  <option name="DESCRIPTION" value="Uncommitted changes before Update at 23-02-2024 12:14 [Changes]" />
---</changelist>
--\ No newline at end of file
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_2_22_2024_11_57_PM_[Changes]/shelved.patch
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2_22_2024_11_57_PM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_2_22_2024_11_57_PM_[Changes]/shelved.patch
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_2_22_2024_11_57_PM_[Changes]/shelved.patch	
--+++ /dev/null	
--@@ -1,46 +0,0 @@
---Index: .idea/workspace.xml
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"3accaff2-95c0-4f5b-bacb-4249d94e92aa\" name=\"Changes\" comment=\"testing service layer login success and fail are updated\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 4\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2cdYqHUix98h8sfJfDmmjGw5Lw0\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <OptionsSetting value=\"false\" id=\"Update\" />\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\" selected=\"JUnit.UserServiceTest.givenUserLoginFailureThrowUserLoginException\">\r\n    <configuration name=\"UserControllerTest (1)\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"userauthenticationservice\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.niit.project.userauthenticationservice.controller.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"com.niit.project.userauthenticationservice.controller\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.niit.project.userauthenticationservice.controller.UserControllerTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserControllerTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"userauthenticationservice\" />\r\n      <option name=\"PACKAGE_NAME\" value=\"\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"UserControllerTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserControllerTest.givenUserToSaveReturnUserFailure\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"userauthenticationservice\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.niit.project.userauthenticationservice.controller.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"com.niit.project.userauthenticationservice.controller\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.niit.project.userauthenticationservice.controller.UserControllerTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"givenUserToSaveReturnUserFailure\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserControllerTest.testLoginUser_InvalidCredentials\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"userauthenticationservice\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.niit.project.userauthenticationservice.controller.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"com.niit.project.userauthenticationservice.controller\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.niit.project.userauthenticationservice.controller.UserControllerTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"testLoginUser_InvalidCredentials\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserServiceTest.givenUserLoginFailureThrowUserLoginException\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"userauthenticationservice\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.niit.project.userauthenticationservice.service.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"com.niit.project.userauthenticationservice.service\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.niit.project.userauthenticationservice.service.UserServiceTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"givenUserLoginFailureThrowUserLoginException\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"JetRunConfigurationType\">\r\n      <module name=\"Kanban Board\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"KotlinStandaloneScriptRunConfigurationType\">\r\n      <module name=\"Kanban Board\" />\r\n      <option name=\"filePath\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"JUnit.UserServiceTest.givenUserLoginFailureThrowUserLoginException\" />\r\n        <item itemvalue=\"JUnit.UserControllerTest.testLoginUser_InvalidCredentials\" />\r\n        <item itemvalue=\"JUnit.UserControllerTest.givenUserToSaveReturnUserFailure\" />\r\n        <item itemvalue=\"JUnit.UserControllerTest (1)\" />\r\n        <item itemvalue=\"JUnit.UserControllerTest\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"3accaff2-95c0-4f5b-bacb-4249d94e92aa\" name=\"Changes\" comment=\"\" />\r\n      <created>1708420669437</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1708420669437</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"started\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708421271711</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708421271711</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"started\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708423070225</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708423070225</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"updated UserService\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708443467339</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708443467339</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"security is created\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708495653761</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708495653761</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"security checking\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708495846412</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708495846412</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"security package is created\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708495897559</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708495897559</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"jwt security updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708498293469</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708498293469</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Application properties updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708498937269</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708498937269</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"jwt token security updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708500192558</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708500192558</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"IRepository updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708603781826</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708603781826</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"ITaskService And Proxy updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708609359280</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708609359280</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"register,savetask,updated task implemented\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708621466516</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708621466516</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"testing service layer login success and fail are updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708625633406</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708625633406</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"14\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"started\" />\r\n    <MESSAGE value=\"updated UserService\" />\r\n    <MESSAGE value=\"security is created\" />\r\n    <MESSAGE value=\"security checking\" />\r\n    <MESSAGE value=\"security package is created\" />\r\n    <MESSAGE value=\"jwt security updated\" />\r\n    <MESSAGE value=\"Application properties updated\" />\r\n    <MESSAGE value=\"jwt token security updated\" />\r\n    <MESSAGE value=\"IRepository updated\" />\r\n    <MESSAGE value=\"IRepository AND PROXY updated\" />\r\n    <MESSAGE value=\"ITaskService And Proxy updated\" />\r\n    <MESSAGE value=\"register,savetask,updated task implemented\" />\r\n    <MESSAGE value=\"testing service layer login success and fail are updated\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"testing service layer login success and fail are updated\" />\r\n  </component>\r\n</project>
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/.idea/workspace.xml b/.idea/workspace.xml
------ a/.idea/workspace.xml	(revision ed169f8624c43c8e1cf8819ed0cad0d25e5668ea)
---+++ b/.idea/workspace.xml	(date 1708626361821)
---@@ -4,7 +4,7 @@
---     <option name="autoReloadType" value="SELECTIVE" />
---   </component>
---   <component name="ChangeListManager">
----    <list default="true" id="3accaff2-95c0-4f5b-bacb-4249d94e92aa" name="Changes" comment="testing service layer login success and fail are updated" />
---+    <list default="true" id="3accaff2-95c0-4f5b-bacb-4249d94e92aa" name="Changes" comment="getUserName,getAllUser,getUserRole methods are updated in taskservice" />
---     <option name="SHOW_DIALOG" value="false" />
---     <option name="HIGHLIGHT_CONFLICTS" value="true" />
---     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
---@@ -257,7 +257,15 @@
---       <option name="project" value="LOCAL" />
---       <updated>1708625633406</updated>
---     </task>
----    <option name="localTasksCounter" value="14" />
---+    <task id="LOCAL-00014" summary="getUserName,getAllUser,getUserRole methods are updated in taskservice">
---+      <option name="closed" value="true" />
---+      <created>1708626050836</created>
---+      <option name="number" value="00014" />
---+      <option name="presentableId" value="LOCAL-00014" />
---+      <option name="project" value="LOCAL" />
---+      <updated>1708626050836</updated>
---+    </task>
---+    <option name="localTasksCounter" value="15" />
---     <servers />
---   </component>
---   <component name="VcsManagerConfiguration">
---@@ -274,6 +282,7 @@
---     <MESSAGE value="ITaskService And Proxy updated" />
---     <MESSAGE value="register,savetask,updated task implemented" />
---     <MESSAGE value="testing service layer login success and fail are updated" />
----    <option name="LAST_COMMIT_MESSAGE" value="testing service layer login success and fail are updated" />
---+    <MESSAGE value="getUserName,getAllUser,getUserRole methods are updated in taskservice" />
---+    <option name="LAST_COMMIT_MESSAGE" value="getUserName,getAllUser,getUserRole methods are updated in taskservice" />
---   </component>
--- </project>
---\ No newline at end of file
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_2_23_2024_11_32_AM_[Changes]/shelved.patch
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2_23_2024_11_32_AM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_2_23_2024_11_32_AM_[Changes]/shelved.patch
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_2_23_2024_11_32_AM_[Changes]/shelved.patch	
--+++ /dev/null	
--@@ -1,48 +0,0 @@
---Index: .idea/workspace.xml
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"3accaff2-95c0-4f5b-bacb-4249d94e92aa\" name=\"Changes\" comment=\"getUserName,getAllUser,getUserRole methods are updated in taskservice\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 4\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2cdYqHUix98h8sfJfDmmjGw5Lw0\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <OptionsSetting value=\"false\" id=\"Update\" />\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\" selected=\"JUnit.IUserRepositoryTest\">\r\n    <configuration name=\"IUserRepositoryTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"userauthenticationservice\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.niit.project.userauthenticationservice.repository.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"com.niit.project.userauthenticationservice.repository\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.niit.project.userauthenticationservice.repository.IUserRepositoryTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserControllerTest (1)\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"userauthenticationservice\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.niit.project.userauthenticationservice.controller.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"com.niit.project.userauthenticationservice.controller\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.niit.project.userauthenticationservice.controller.UserControllerTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserControllerTest.givenUserToSaveReturnUserFailure\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"userauthenticationservice\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.niit.project.userauthenticationservice.controller.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"com.niit.project.userauthenticationservice.controller\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.niit.project.userauthenticationservice.controller.UserControllerTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"givenUserToSaveReturnUserFailure\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserControllerTest.testLoginUser_InvalidCredentials\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"userauthenticationservice\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.niit.project.userauthenticationservice.controller.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"com.niit.project.userauthenticationservice.controller\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.niit.project.userauthenticationservice.controller.UserControllerTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"testLoginUser_InvalidCredentials\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserServiceTest.givenUserLoginFailureThrowUserLoginException\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"userauthenticationservice\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.niit.project.userauthenticationservice.service.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"com.niit.project.userauthenticationservice.service\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.niit.project.userauthenticationservice.service.UserServiceTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"givenUserLoginFailureThrowUserLoginException\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"JetRunConfigurationType\">\r\n      <module name=\"Kanban Board\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"KotlinStandaloneScriptRunConfigurationType\">\r\n      <module name=\"Kanban Board\" />\r\n      <option name=\"filePath\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"JUnit.IUserRepositoryTest\" />\r\n        <item itemvalue=\"JUnit.UserControllerTest (1)\" />\r\n        <item itemvalue=\"JUnit.UserServiceTest.givenUserLoginFailureThrowUserLoginException\" />\r\n        <item itemvalue=\"JUnit.UserControllerTest.testLoginUser_InvalidCredentials\" />\r\n        <item itemvalue=\"JUnit.UserControllerTest.givenUserToSaveReturnUserFailure\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"3accaff2-95c0-4f5b-bacb-4249d94e92aa\" name=\"Changes\" comment=\"\" />\r\n      <created>1708420669437</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1708420669437</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"started\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708421271711</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708421271711</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"started\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708423070225</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708423070225</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"updated UserService\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708443467339</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708443467339</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"security is created\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708495653761</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708495653761</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"security checking\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708495846412</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708495846412</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"security package is created\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708495897559</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708495897559</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"jwt security updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708498293469</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708498293469</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Application properties updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708498937269</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708498937269</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"jwt token security updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708500192558</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708500192558</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"IRepository updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708603781826</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708603781826</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"ITaskService And Proxy updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708609359280</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708609359280</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"register,savetask,updated task implemented\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708621466516</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708621466516</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"testing service layer login success and fail are updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708625633406</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708625633406</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"getUserName,getAllUser,getUserRole methods are updated in taskservice\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708626050836</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708626050836</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"15\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"started\" />\r\n    <MESSAGE value=\"updated UserService\" />\r\n    <MESSAGE value=\"security is created\" />\r\n    <MESSAGE value=\"security checking\" />\r\n    <MESSAGE value=\"security package is created\" />\r\n    <MESSAGE value=\"jwt security updated\" />\r\n    <MESSAGE value=\"Application properties updated\" />\r\n    <MESSAGE value=\"jwt token security updated\" />\r\n    <MESSAGE value=\"IRepository updated\" />\r\n    <MESSAGE value=\"IRepository AND PROXY updated\" />\r\n    <MESSAGE value=\"ITaskService And Proxy updated\" />\r\n    <MESSAGE value=\"register,savetask,updated task implemented\" />\r\n    <MESSAGE value=\"testing service layer login success and fail are updated\" />\r\n    <MESSAGE value=\"getUserName,getAllUser,getUserRole methods are updated in taskservice\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"getUserName,getAllUser,getUserRole methods are updated in taskservice\" />\r\n  </component>\r\n</project>
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/.idea/workspace.xml b/.idea/workspace.xml
------ a/.idea/workspace.xml	(revision 0128f01fe345a766ec3c948c9a21584de4e4a8ba)
---+++ b/.idea/workspace.xml	(date 1708627119582)
---@@ -4,7 +4,9 @@
---     <option name="autoReloadType" value="SELECTIVE" />
---   </component>
---   <component name="ChangeListManager">
----    <list default="true" id="3accaff2-95c0-4f5b-bacb-4249d94e92aa" name="Changes" comment="getUserName,getAllUser,getUserRole methods are updated in taskservice" />
---+    <list default="true" id="3accaff2-95c0-4f5b-bacb-4249d94e92aa" name="Changes" comment="userauth repository test case is updated">
---+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
---+    </list>
---     <option name="SHOW_DIALOG" value="false" />
---     <option name="HIGHLIGHT_CONFLICTS" value="true" />
---     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
---@@ -271,7 +273,15 @@
---       <option name="project" value="LOCAL" />
---       <updated>1708626050836</updated>
---     </task>
----    <option name="localTasksCounter" value="15" />
---+    <task id="LOCAL-00015" summary="userauth repository test case is updated">
---+      <option name="closed" value="true" />
---+      <created>1708626533067</created>
---+      <option name="number" value="00015" />
---+      <option name="presentableId" value="LOCAL-00015" />
---+      <option name="project" value="LOCAL" />
---+      <updated>1708626533067</updated>
---+    </task>
---+    <option name="localTasksCounter" value="16" />
---     <servers />
---   </component>
---   <component name="VcsManagerConfiguration">
---@@ -289,6 +299,7 @@
---     <MESSAGE value="register,savetask,updated task implemented" />
---     <MESSAGE value="testing service layer login success and fail are updated" />
---     <MESSAGE value="getUserName,getAllUser,getUserRole methods are updated in taskservice" />
----    <option name="LAST_COMMIT_MESSAGE" value="getUserName,getAllUser,getUserRole methods are updated in taskservice" />
---+    <MESSAGE value="userauth repository test case is updated" />
---+    <option name="LAST_COMMIT_MESSAGE" value="userauth repository test case is updated" />
---   </component>
--- </project>
---\ No newline at end of file
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_14_41__Changes_1.xml
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_14_41__Changes_1.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_14_41__Changes_1.xml
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_14_41__Changes_1.xml	
--+++ /dev/null	
--@@ -1,4 +0,0 @@
---<changelist name="Uncommitted_changes_before_Update_at_23-02-2024_14_41_[Changes]1" date="1708679503798" recycled="true" deleted="true">
---  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_14_41_[Changes]1/shelved.patch" />
---  <option name="DESCRIPTION" value="Uncommitted changes before Update at 23-02-2024 14:41 [Changes]" />
---</changelist>
--\ No newline at end of file
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_16_26__Changes_1.xml
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_16_26__Changes_1.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_16_26__Changes_1.xml
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_16_26__Changes_1.xml	
--+++ /dev/null	
--@@ -1,4 +0,0 @@
---<changelist name="Uncommitted_changes_before_Update_at_23-02-2024_16_26_[Changes]1" date="1708685834225" recycled="true" deleted="true">
---  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_16_26_[Changes]1/shelved.patch" />
---  <option name="DESCRIPTION" value="Uncommitted changes before Update at 23-02-2024 16:26 [Changes]" />
---</changelist>
--\ No newline at end of file
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_2_23_2024_11_32_AM__Changes_.xml
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2_23_2024_11_32_AM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_2_23_2024_11_32_AM__Changes_.xml
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_2_23_2024_11_32_AM__Changes_.xml	
--+++ /dev/null	
--@@ -1,4 +0,0 @@
---<changelist name="Uncommitted_changes_before_Update_at_2_23_2024_11_32_AM_[Changes]" date="1708668153521" recycled="true" deleted="true">
---  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2_23_2024_11_32_AM_[Changes]/shelved.patch" />
---  <option name="DESCRIPTION" value="Uncommitted changes before Update at 2/23/2024 11:32 AM [Changes]" />
---</changelist>
--\ No newline at end of file
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_22-02-2024_17_02__Changes_1.xml
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_22-02-2024_17_02__Changes_1.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_22-02-2024_17_02__Changes_1.xml
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_22-02-2024_17_02__Changes_1.xml	
--+++ /dev/null	
--@@ -1,4 +0,0 @@
---<changelist name="Uncommitted_changes_before_Update_at_22-02-2024_17_02_[Changes]1" date="1708601558937" recycled="true" deleted="true">
---  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_22-02-2024_17_02_[Changes]1/shelved.patch" />
---  <option name="DESCRIPTION" value="Uncommitted changes before Update at 22-02-2024 17:02 [Changes]" />
---</changelist>
--\ No newline at end of file
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_22-02-2024_17_02_[Changes]1/shelved.patch
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_22-02-2024_17_02_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_22-02-2024_17_02_[Changes]1/shelved.patch
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_22-02-2024_17_02_[Changes]1/shelved.patch	
--+++ /dev/null	
--@@ -1,46 +0,0 @@
---Index: boardtaskservice/pom.xml
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n\t<modelVersion>4.0.0</modelVersion>\r\n\t<parent>\r\n\t\t<groupId>com.niit.project</groupId>\r\n\t\t<artifactId>kanbanboard</artifactId>\r\n\t\t<version>1.0-SNAPSHOT</version>\r\n\t\t<relativePath/> <!-- lookup parent from repository -->\r\n\t</parent>\r\n\t<groupId>com.niit.project</groupId>\r\n\t<artifactId>boardtaskservice</artifactId>\r\n\t<version>0.0.1-SNAPSHOT</version>\r\n\t<name>BoardTaskService</name>\r\n\t<description>Demo project for Spring Boot</description>\r\n\t<properties>\r\n\t\t<java.version>17</java.version>\r\n\t\t<spring-cloud.version>2023.0.0</spring-cloud.version>\r\n\t</properties>\r\n\t<dependencies>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-data-mongodb</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.cloud</groupId>\r\n\t\t\t<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>io.jsonwebtoken</groupId>\r\n\t\t\t<artifactId>jjwt</artifactId>\r\n\t\t\t<version>0.9.1</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.glassfish.jaxb</groupId>\r\n\t\t\t<artifactId>jaxb-runtime</artifactId>\r\n\t\t\t<version>2.3.1</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-test</artifactId>\r\n\t\t\t<scope>test</scope>\r\n\t\t</dependency>\r\n\t</dependencies>\r\n\t<dependencyManagement>\r\n\t\t<dependencies>\r\n\t\t\t<dependency>\r\n\t\t\t\t<groupId>org.springframework.cloud</groupId>\r\n\t\t\t\t<artifactId>spring-cloud-dependencies</artifactId>\r\n\t\t\t\t<version>${spring-cloud.version}</version>\r\n\t\t\t\t<type>pom</type>\r\n\t\t\t\t<scope>import</scope>\r\n\t\t\t</dependency>\r\n\t\t</dependencies>\r\n\t</dependencyManagement>\r\n\r\n\t<build>\r\n\t\t<plugins>\r\n\t\t\t<plugin>\r\n\t\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\r\n\t\t\t</plugin>\r\n\t\t</plugins>\r\n\t</build>\r\n\r\n</project>\r\n
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/boardtaskservice/pom.xml b/boardtaskservice/pom.xml
------ a/boardtaskservice/pom.xml	
---+++ b/boardtaskservice/pom.xml	
---@@ -15,7 +15,7 @@
--- 	<description>Demo project for Spring Boot</description>
--- 	<properties>
--- 		<java.version>17</java.version>
----		<spring-cloud.version>2023.0.0</spring-cloud.version>
---+		<spring-cloud.version>2021.0.4</spring-cloud.version>
--- 	</properties>
--- 	<dependencies>
--- 		<dependency>
---Index: boardtaskservice/src/test/java/com/niit/project/boardtaskservice/services/ITaskService.java
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/boardtaskservice/src/test/java/com/niit/project/boardtaskservice/services/ITaskService.java b/boardtaskservice/src/test/java/com/niit/project/boardtaskservice/services/ITaskService.java
---new file mode 100644
------ /dev/null	
---+++ b/boardtaskservice/src/test/java/com/niit/project/boardtaskservice/services/ITaskService.java	
---@@ -0,0 +1,17 @@
---+package com.niit.project.boardtaskservice.services;
---+
---+import java.util.List;
---+
---+public interface ITaskService {
---+    UserDetails registerUser (UserDetails userdetails)throws UserAlreadyExistsException;
---+    UserDetails saveTaskToUser(Task task, String userEmail)throws TaskAlreadyExistsException,UserAlreadyExistsException;
---+    UserDetails updateTaskToUser(Task task, String userEmail)throws TaskNotFoundException, UserNotFoundException;
---+
---+    UserDetails deleteTask(Task task, String UserEmailId)throws TaskNotFoundException;
---+    List<Task> getAllTaskFromUser(String UserEmailId)throws TaskNotFoundException,UserNotFoundException;
---+    Task getOneTaskById(Task task , String EmailId)throws TaskNotFoundException,UserNotFoundException;
---+
---+    String getUserName(UserDetails userdetails)throws UserNotFoundException;
---+    List<UserDetails> getAllUser(String emailId)throws UserNotFoundException;
---+    String getUserRole(String emailId)throws UserNotFoundException ;
---+}
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_12_14_[Changes]1/shelved.patch
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_12_14_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_12_14_[Changes]1/shelved.patch
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_12_14_[Changes]1/shelved.patch	
--+++ /dev/null	
--@@ -1,51 +0,0 @@
---Index: boardtaskservice/pom.xml
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n\t<modelVersion>4.0.0</modelVersion>\r\n\t<parent>\r\n\t\t<groupId>com.niit.project</groupId>\r\n\t\t<artifactId>kanbanboard</artifactId>\r\n\t\t<version>1.0-SNAPSHOT</version>\r\n\t\t<relativePath/> <!-- lookup parent from repository -->\r\n\t</parent>\r\n\t<groupId>com.niit.project</groupId>\r\n\t<artifactId>boardtaskservice</artifactId>\r\n\t<version>0.0.1-SNAPSHOT</version>\r\n\t<name>BoardTaskService</name>\r\n\t<description>Demo project for Spring Boot</description>\r\n\t<properties>\r\n\t\t<java.version>17</java.version>\r\n\t\t<spring-cloud.version>2021.0.4</spring-cloud.version>\r\n\t</properties>\r\n\t<dependencies>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-data-mongodb</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.cloud</groupId>\r\n\t\t\t<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>io.jsonwebtoken</groupId>\r\n\t\t\t<artifactId>jjwt</artifactId>\r\n\t\t\t<version>0.9.1</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.glassfish.jaxb</groupId>\r\n\t\t\t<artifactId>jaxb-runtime</artifactId>\r\n\t\t\t<version>2.3.1</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.cloud</groupId>\r\n\t\t\t<artifactId>spring-cloud-starter-openfeign</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-test</artifactId>\r\n\t\t\t<scope>test</scope>\r\n\t\t</dependency>\r\n\t</dependencies>\r\n\t<dependencyManagement>\r\n\t\t<dependencies>\r\n\t\t\t<dependency>\r\n\t\t\t\t<groupId>org.springframework.cloud</groupId>\r\n\t\t\t\t<artifactId>spring-cloud-dependencies</artifactId>\r\n\t\t\t\t<version>${spring-cloud.version}</version>\r\n\t\t\t\t<type>pom</type>\r\n\t\t\t\t<scope>import</scope>\r\n\t\t\t</dependency>\r\n\t\t</dependencies>\r\n\t</dependencyManagement>\r\n\r\n\t<build>\r\n\t\t<plugins>\r\n\t\t\t<plugin>\r\n\t\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\r\n\t\t\t</plugin>\r\n\t\t</plugins>\r\n\t</build>\r\n\r\n</project>\r\n
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/boardtaskservice/pom.xml b/boardtaskservice/pom.xml
------ a/boardtaskservice/pom.xml	
---+++ b/boardtaskservice/pom.xml	
---@@ -36,6 +36,7 @@
--- 			<artifactId>jaxb-runtime</artifactId>
--- 			<version>2.3.1</version>
--- 		</dependency>
---+
--- 		<dependency>
--- 			<groupId>org.springframework.cloud</groupId>
--- 			<artifactId>spring-cloud-starter-openfeign</artifactId>
---Index: boardtaskservice/src/main/java/com/niit/project/boardtaskservice/BoardTaskServiceApplication.java
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+>package com.niit.project.boardtaskservice;\r\n\r\nimport org.springframework.boot.SpringApplication;\r\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\r\nimport org.springframework.cloud.openfeign.EnableFeignClients;\r\n\r\n@SpringBootApplication\r\n@EnableFeignClients\r\npublic class BoardTaskServiceApplication {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tSpringApplication.run(BoardTaskServiceApplication.class, args);\r\n\t}\r\n\r\n}\r\n
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/BoardTaskServiceApplication.java b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/BoardTaskServiceApplication.java
------ a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/BoardTaskServiceApplication.java	
---+++ b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/BoardTaskServiceApplication.java	
---@@ -2,7 +2,9 @@
--- 
--- import org.springframework.boot.SpringApplication;
--- import org.springframework.boot.autoconfigure.SpringBootApplication;
---+import org.springframework.boot.web.servlet.FilterRegistrationBean;
--- import org.springframework.cloud.openfeign.EnableFeignClients;
---+import org.springframework.context.annotation.Bean;
--- 
--- @SpringBootApplication
--- @EnableFeignClients
---@@ -11,5 +13,12 @@
--- 	public static void main(String[] args) {
--- 		SpringApplication.run(BoardTaskServiceApplication.class, args);
--- 	}
---+	@Bean
---+	public FilterRegistrationBean jwtFilterBean(){
---+		FilterRegistrationBean filterRegistrationBean = new FilterRegistrationBean();
---+		filterRegistrationBean.setFilter(new JwtFilter());
---+		filterRegistrationBean.addUrlPatterns("/api/v2/user/*");
---+		return filterRegistrationBean;
---+	}
--- 
--- }
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_16_26_[Changes]1/shelved.patch
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_16_26_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_16_26_[Changes]1/shelved.patch
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_16_26_[Changes]1/shelved.patch	
--+++ /dev/null	
--@@ -1,138 +0,0 @@
---Index: apigateway/src/main/java/com/niit/project/apigateway/ApiGatewayApplication.java
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+>package com.niit.project.apigateway;\r\n\r\nimport org.springframework.boot.SpringApplication;\r\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\r\nimport org.springframework.context.annotation.Bean;\r\nimport org.springframework.context.annotation.Configuration;\r\n\r\n@SpringBootApplication\r\npublic class ApiGatewayApplication {\r\n\tpublic static void main(String[] args) {\r\n\t\tSpringApplication.run(ApiGatewayApplication.class, args);\r\n\t}\r\n\r\n\r\n\r\n}\r\n
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/apigateway/src/main/java/com/niit/project/apigateway/ApiGatewayApplication.java b/apigateway/src/main/java/com/niit/project/apigateway/ApiGatewayApplication.java
------ a/apigateway/src/main/java/com/niit/project/apigateway/ApiGatewayApplication.java	
---+++ b/apigateway/src/main/java/com/niit/project/apigateway/ApiGatewayApplication.java	
---@@ -6,6 +6,7 @@
--- import org.springframework.context.annotation.Configuration;
--- 
--- @SpringBootApplication
---+
--- public class ApiGatewayApplication {
--- 	public static void main(String[] args) {
--- 		SpringApplication.run(ApiGatewayApplication.class, args);
---Index: apigateway/pom.xml
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n\t<modelVersion>4.0.0</modelVersion>\r\n\t<parent>\r\n\t\t<groupId>com.niit.project</groupId>\r\n\t\t<artifactId>kanbanboard</artifactId>\r\n\t\t<version>1.0-SNAPSHOT</version>\r\n\t\t<relativePath/> <!-- lookup parent from repository -->\r\n\t</parent>\r\n\t<groupId>com.niit.project</groupId>\r\n\t<artifactId>apigateway</artifactId>\r\n\t<version>0.0.1-SNAPSHOT</version>\r\n\t<name>ApiGateway</name>\r\n\t<description>Demo project for Spring Boot</description>\r\n\t<properties>\r\n\t\t<java.version>17</java.version>\r\n\t\t<spring-cloud.version>2023.0.0</spring-cloud.version>\r\n\t</properties>\r\n\t<dependencies>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.cloud</groupId>\r\n\t\t\t<artifactId>spring-cloud-starter-gateway</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.cloud</groupId>\r\n\t\t\t<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>\r\n\t\t</dependency>\r\n\r\n\r\n\t</dependencies>\r\n\t<dependencyManagement>\r\n\t\t<dependencies>\r\n\t\t\t<dependency>\r\n\t\t\t\t<groupId>org.springframework.cloud</groupId>\r\n\t\t\t\t<artifactId>spring-cloud-dependencies</artifactId>\r\n\t\t\t\t<version>${spring-cloud.version}</version>\r\n\t\t\t\t<type>pom</type>\r\n\t\t\t\t<scope>import</scope>\r\n\t\t\t</dependency>\r\n\t\t</dependencies>\r\n\t</dependencyManagement>\r\n\r\n\t<build>\r\n\t\t<plugins>\r\n\t\t\t<plugin>\r\n\t\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\r\n\t\t\t</plugin>\r\n\t\t</plugins>\r\n\t</build>\r\n\r\n</project>\r\n
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/apigateway/pom.xml b/apigateway/pom.xml
------ a/apigateway/pom.xml	
---+++ b/apigateway/pom.xml	
---@@ -15,7 +15,7 @@
--- 	<description>Demo project for Spring Boot</description>
--- 	<properties>
--- 		<java.version>17</java.version>
----		<spring-cloud.version>2023.0.0</spring-cloud.version>
---+		<spring-cloud.version>2021.0.4</spring-cloud.version>
--- 	</properties>
--- 	<dependencies>
--- 		<dependency>
---Index: eurekaserver/pom.xml
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n\t<modelVersion>4.0.0</modelVersion>\r\n\t<parent>\r\n\t\t<groupId>com.niit.project</groupId>\r\n\t\t<artifactId>kanbanboard</artifactId>\r\n\t\t<version>1.0-SNAPSHOT</version>\r\n\t\t<relativePath/> <!-- lookup parent from repository -->\r\n\t</parent>\r\n\t<groupId>com.niit.project</groupId>\r\n\t<artifactId>eurekaserver</artifactId>\r\n\t<version>0.0.1-SNAPSHOT</version>\r\n\t<name>EurekaServer</name>\r\n\t<description>Demo project for Spring Boot</description>\r\n\t<properties>\r\n\t\t<java.version>17</java.version>\r\n\t\t<spring-cloud.version>2023.0.0</spring-cloud.version>\r\n\t</properties>\r\n\t<dependencies>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.cloud</groupId>\r\n\t\t\t<artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>\r\n\t\t</dependency>\r\n\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-test</artifactId>\r\n\t\t\t<scope>test</scope>\r\n\t\t</dependency>\r\n\t</dependencies>\r\n\t<dependencyManagement>\r\n\t\t<dependencies>\r\n\t\t\t<dependency>\r\n\t\t\t\t<groupId>org.springframework.cloud</groupId>\r\n\t\t\t\t<artifactId>spring-cloud-dependencies</artifactId>\r\n\t\t\t\t<version>${spring-cloud.version}</version>\r\n\t\t\t\t<type>pom</type>\r\n\t\t\t\t<scope>import</scope>\r\n\t\t\t</dependency>\r\n\t\t</dependencies>\r\n\t</dependencyManagement>\r\n\r\n\t<build>\r\n\t\t<plugins>\r\n\t\t\t<plugin>\r\n\t\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\r\n\t\t\t</plugin>\r\n\t\t</plugins>\r\n\t</build>\r\n\r\n</project>\r\n
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/eurekaserver/pom.xml b/eurekaserver/pom.xml
------ a/eurekaserver/pom.xml	
---+++ b/eurekaserver/pom.xml	
---@@ -15,7 +15,7 @@
--- 	<description>Demo project for Spring Boot</description>
--- 	<properties>
--- 		<java.version>17</java.version>
----		<spring-cloud.version>2023.0.0</spring-cloud.version>
---+		<spring-cloud.version>2021.0.4</spring-cloud.version>
--- 	</properties>
--- 	<dependencies>
--- 		<dependency>
---Index: boardtaskservice/src/main/java/com/niit/project/boardtaskservice/proxy/TaskProxy.java
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+>package com.niit.project.boardtaskservice.proxy;\r\n\r\n\r\nimport com.niit.project.boardtaskservice.domain.UserDetails;\r\nimport org.springframework.cloud.openfeign.FeignClient;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.RequestBody;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\n\r\n@FeignClient(name=\"userauthservice\",url=\"localhost:8081\")\r\npublic interface TaskProxy {\r\n    @RequestMapping(\"/api/v1/saveUser\")\r\n    public ResponseEntity<?> registerUser(@RequestBody UserDetails user);\r\n\r\n}\r\n
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/proxy/TaskProxy.java b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/proxy/TaskProxy.java
------ a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/proxy/TaskProxy.java	
---+++ b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/proxy/TaskProxy.java	
---@@ -7,7 +7,7 @@
--- import org.springframework.web.bind.annotation.RequestBody;
--- import org.springframework.web.bind.annotation.RequestMapping;
--- 
----@FeignClient(name="userauthservice",url="localhost:8081")
---+@FeignClient(name="user-auth-service",url="localhost:8081")
--- public interface TaskProxy {
---     @RequestMapping("/api/v1/saveUser")
---     public ResponseEntity<?> registerUser(@RequestBody UserDetails user);
---Index: apigateway/src/main/java/com/niit/project/apigateway/configuration/Config.java
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+>package com.niit.project.apigateway.configuration;\r\n\r\nimport org.springframework.context.annotation.Bean;\r\nimport org.springframework.context.annotation.Configuration;\r\nimport org.springframework.cloud.gateway.route.RouteLocator;\r\nimport org.springframework.cloud.gateway.route.builder.RouteLocatorBuilder;\r\n\r\n@Configuration\r\npublic class Config {\r\n    @Bean\r\n    public RouteLocator myRoutes(RouteLocatorBuilder builder){\r\n        return builder.routes().route(p -> p.path(\"/api/v1/**\").uri(\"lb://userauthservice\"))\r\n                .route(p -> p.path(\"/api/v2/**\",\"/api/v3/**\").uri(\"lb://boardtaskservice\"))\r\n                .build();\r\n    }\r\n}\r\n
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/apigateway/src/main/java/com/niit/project/apigateway/configuration/Config.java b/apigateway/src/main/java/com/niit/project/apigateway/configuration/Config.java
------ a/apigateway/src/main/java/com/niit/project/apigateway/configuration/Config.java	
---+++ b/apigateway/src/main/java/com/niit/project/apigateway/configuration/Config.java	
---@@ -6,6 +6,7 @@
--- import org.springframework.cloud.gateway.route.builder.RouteLocatorBuilder;
--- 
--- @Configuration
---+
--- public class Config {
---     @Bean
---     public RouteLocator myRoutes(RouteLocatorBuilder builder){
---Index: userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/UserAuthenticationServiceApplication.java
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+>package com.niit.project.userauthenticationservice;\r\n\r\nimport org.springframework.boot.SpringApplication;\r\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\r\n\r\n@SpringBootApplication\r\npublic class UserAuthenticationServiceApplication {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tSpringApplication.run(UserAuthenticationServiceApplication.class, args);\r\n\t}\r\n\r\n}\r\n
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/UserAuthenticationServiceApplication.java b/userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/UserAuthenticationServiceApplication.java
------ a/userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/UserAuthenticationServiceApplication.java	
---+++ b/userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/UserAuthenticationServiceApplication.java	
---@@ -2,8 +2,10 @@
--- 
--- import org.springframework.boot.SpringApplication;
--- import org.springframework.boot.autoconfigure.SpringBootApplication;
---+import org.springframework.cloud.netflix.eureka.EnableEurekaClient;
--- 
--- @SpringBootApplication
---+@EnableEurekaClient
--- public class UserAuthenticationServiceApplication {
--- 
--- 	public static void main(String[] args) {
---Index: boardtaskservice/src/main/java/com/niit/project/boardtaskservice/BoardTaskServiceApplication.java
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+>package com.niit.project.boardtaskservice;\r\n\r\nimport com.niit.project.boardtaskservice.filter.JWTFilter;\r\nimport org.springframework.boot.SpringApplication;\r\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\r\nimport org.springframework.boot.web.servlet.FilterRegistrationBean;\r\nimport org.springframework.cloud.openfeign.EnableFeignClients;\r\nimport org.springframework.context.annotation.Bean;\r\n\r\n@SpringBootApplication\r\n@EnableFeignClients\r\npublic class BoardTaskServiceApplication {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tSpringApplication.run(BoardTaskServiceApplication.class, args);\r\n\t}\r\n\t@Bean\r\n\tpublic FilterRegistrationBean jwtFilterBean(){\r\n\t\tFilterRegistrationBean filterRegistrationBean = new FilterRegistrationBean();\r\n\t\tfilterRegistrationBean.setFilter(new JWTFilter());\r\n\t\tfilterRegistrationBean.addUrlPatterns(\"/api/v2/*\");\r\n\t\treturn filterRegistrationBean;\r\n\t}\r\n\r\n}\r\n
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/BoardTaskServiceApplication.java b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/BoardTaskServiceApplication.java
------ a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/BoardTaskServiceApplication.java	
---+++ b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/BoardTaskServiceApplication.java	
---@@ -4,11 +4,13 @@
--- import org.springframework.boot.SpringApplication;
--- import org.springframework.boot.autoconfigure.SpringBootApplication;
--- import org.springframework.boot.web.servlet.FilterRegistrationBean;
---+import org.springframework.cloud.netflix.eureka.EnableEurekaClient;
--- import org.springframework.cloud.openfeign.EnableFeignClients;
--- import org.springframework.context.annotation.Bean;
--- 
--- @SpringBootApplication
--- @EnableFeignClients
---+@EnableEurekaClient
--- public class BoardTaskServiceApplication {
--- 
--- 	public static void main(String[] args) {
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_2_22_2024_11_57_PM__Changes_.xml
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2_22_2024_11_57_PM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_2_22_2024_11_57_PM__Changes_.xml
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_2_22_2024_11_57_PM__Changes_.xml	
--+++ /dev/null	
--@@ -1,4 +0,0 @@
---<changelist name="Uncommitted_changes_before_Update_at_2_22_2024_11_57_PM_[Changes]" date="1708626430723" recycled="true" deleted="true">
---  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2_22_2024_11_57_PM_[Changes]/shelved.patch" />
---  <option name="DESCRIPTION" value="Uncommitted changes before Update at 2/22/2024 11:57 PM [Changes]" />
---</changelist>
--\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_25-02-2024_23_04__Changes_.xml
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_25-02-2024_23_04__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_25-02-2024_23_04__Changes_.xml
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_25-02-2024_23_04__Changes_.xml	
-+++ /dev/null	
-@@ -1,4 +0,0 @@
--<changelist name="Uncommitted_changes_before_Update_at_25-02-2024_23_04_[Changes]" date="1708882456847" recycled="true" deleted="true">
--  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_25-02-2024_23_04_[Changes]/shelved.patch" />
--  <option name="DESCRIPTION" value="Uncommitted changes before Update at 25-02-2024 23:04 [Changes]" />
--</changelist>
-\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_3_1_2024_10_18_PM__Changes_1.xml
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_3_1_2024_10_18_PM__Changes_1.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_3_1_2024_10_18_PM__Changes_1.xml
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_3_1_2024_10_18_PM__Changes_1.xml	
-+++ /dev/null	
-@@ -1,4 +0,0 @@
--<changelist name="Uncommitted_changes_before_Update_at_3_1_2024_10_18_PM_[Changes]1" date="1709311706206" recycled="true" deleted="true">
--  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_1_2024_10_18_PM_[Changes]1/shelved.patch" />
--  <option name="DESCRIPTION" value="Uncommitted changes before Update at 3/1/2024 10:18 PM [Changes]" />
--</changelist>
-\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_2_25_2024_11_00_PM_[Changes]1/shelved.patch
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2_25_2024_11_00_PM_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_2_25_2024_11_00_PM_[Changes]1/shelved.patch
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_2_25_2024_11_00_PM_[Changes]1/shelved.patch	
-+++ /dev/null	
-@@ -1,19 +0,0 @@
--Index: boardtaskservice/src/main/java/com/niit/project/boardtaskservice/domain/Task.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.niit.project.boardtaskservice.domain;\r\n\r\nimport org.springframework.data.annotation.Id;\r\n\r\npublic class Task {\r\n    @Id\r\n    private int taskId;\r\n    private String taskName;\r\n    private String taskDescription;\r\n\r\n    private String dueDate;\r\n    private String assignTo;\r\n\r\n    public String getStatus() {\r\n        return status;\r\n    }\r\n\r\n    public void setStatus(String status) {\r\n        this.status = status;\r\n    }\r\n\r\n    private String status;\r\n    public Task() {\r\n    }\r\n\r\n    public Task(int taskId, String taskName, String taskDescription, String dueDate, String assignTo, String status) {\r\n        this.taskId = taskId;\r\n        this.taskName = taskName;\r\n        this.taskDescription = taskDescription;\r\n        this.dueDate = dueDate;\r\n        this.assignTo = assignTo;\r\n        this.status = status;\r\n    }\r\n\r\n    public int getTaskId() {\r\n        return taskId;\r\n    }\r\n\r\n    public void setTaskId(int taskId) {\r\n        this.taskId = taskId;\r\n    }\r\n\r\n    public String getTaskName() {\r\n        return taskName;\r\n    }\r\n\r\n    public void setTaskName(String taskName) {\r\n        this.taskName = taskName;\r\n    }\r\n\r\n    public String getTaskDescription() {\r\n        return taskDescription;\r\n    }\r\n\r\n    public void setTaskDescription(String taskDescription) {\r\n        this.taskDescription = taskDescription;\r\n    }\r\n\r\n    public String getDueDate() {\r\n        return dueDate;\r\n    }\r\n\r\n    public void setDueDate(String dueDate) {\r\n        this.dueDate = dueDate;\r\n    }\r\n\r\n    public String getAssignTo() {\r\n        return assignTo;\r\n    }\r\n\r\n    public void setAssignTo(String assignTo) {\r\n        this.assignTo = assignTo;\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"Task{\" +\r\n                \"taskId=\" + taskId +\r\n                \", taskName='\" + taskName + '\\'' +\r\n                \", taskDescription='\" + taskDescription + '\\'' +\r\n                \", dueDate='\" + dueDate + '\\'' +\r\n                \", assignTo='\" + assignTo + '\\'' +\r\n                \", status='\" + status + '\\'' +\r\n                '}';\r\n    }\r\n}\r\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/domain/Task.java b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/domain/Task.java
----- a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/domain/Task.java	
--+++ b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/domain/Task.java	
--@@ -11,6 +11,8 @@
--     private String dueDate;
--     private String assignTo;
-- 
--+
--+
--     public String getStatus() {
--         return status;
--     }
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_01-03-2024_22_16_[Changes]1/shelved.patch
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_01-03-2024_22_16_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_01-03-2024_22_16_[Changes]1/shelved.patch
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_01-03-2024_22_16_[Changes]1/shelved.patch	
-+++ /dev/null	
-@@ -1,1202 +0,0 @@
--Index: userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/controller/UserController.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.niit.project.userauthenticationservice.controller;\r\n\r\nimport com.niit.project.userauthenticationservice.domain.UserDetails;\r\nimport com.niit.project.userauthenticationservice.exception.UserAlreadyExistsException;\r\nimport com.niit.project.userauthenticationservice.exception.UserLoginException;\r\nimport com.niit.project.userauthenticationservice.security.ISecurityTokenGenerator;\r\nimport com.niit.project.userauthenticationservice.services.IUserService;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.*;\r\n\r\nimport java.util.Map;\r\n\r\n@RestController\r\n@RequestMapping(\"/api/v1\")\r\npublic class UserController {\r\n    private final IUserService userService;\r\n    private final ISecurityTokenGenerator tokenGenerator;\r\n\r\n    @Autowired\r\n    public UserController(IUserService userService, ISecurityTokenGenerator tokenGenerator) {\r\n        this.userService = userService;\r\n        this.tokenGenerator = tokenGenerator;\r\n    }\r\n\r\n    @PostMapping(\"/saveUser\")\r\n    public ResponseEntity<?> registerUser(@RequestBody UserDetails user) {\r\n        ResponseEntity responseEntity;\r\n        try {\r\n            UserDetails saveduser = userService.registerUser(user);\r\n            responseEntity = new ResponseEntity<>(saveduser, HttpStatus.ACCEPTED);\r\n        } catch (UserAlreadyExistsException exception) {\r\n            responseEntity = new ResponseEntity<>(exception.getMessage(), HttpStatus.CONFLICT);\r\n        }\r\n        return responseEntity;\r\n    }\r\n    @PostMapping(\"/login\")\r\n    public ResponseEntity<?> loginUser(@RequestBody UserDetails user){\r\n        ResponseEntity responseEntity;\r\n        try{\r\n            UserDetails fetchedUser=userService.loginUser(user);\r\n            Map<String,String> token=tokenGenerator.generateToken(fetchedUser);\r\n            responseEntity=new ResponseEntity<>(token, HttpStatus.FOUND);\r\n        }catch (UserLoginException exception){\r\n            responseEntity=new ResponseEntity<>(exception.getMessage(),HttpStatus.CONFLICT);\r\n        }\r\n        return responseEntity;\r\n    }\r\n    @PutMapping(\"/passwordChange\")\r\n    public ResponseEntity<?> updatePassword(@RequestBody UserDetails user){\r\n        ResponseEntity responseEntity;\r\n        try{\r\n            UserDetails changedPassword=userService.updatePassword(user);\r\n            responseEntity=new ResponseEntity<>(changedPassword, HttpStatus.CREATED);\r\n        }catch (UserLoginException exception){\r\n            responseEntity=new ResponseEntity<>(exception.getMessage(),HttpStatus.CONFLICT);\r\n        }\r\n        return responseEntity;\r\n    }\r\n}
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/controller/UserController.java b/userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/controller/UserController.java
----- a/userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/controller/UserController.java	
--+++ b/userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/controller/UserController.java	
--@@ -13,6 +13,7 @@
-- import java.util.Map;
-- 
-- @RestController
--+
-- @RequestMapping("/api/v1")
-- public class UserController {
--     private final IUserService userService;
--Index: apigateway/src/main/resources/application.properties
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>server.port = 8090\r\nspring.main.web-application-type = reactive\r\neureka.client.serviceUrl.defaultZone = http://localhost:8761/eureka\r\neureka.client.fetch-registry = true\r\neureka.client.register-with-eureka = true\r\nspring.application.name=apigateway
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/apigateway/src/main/resources/application.properties b/apigateway/src/main/resources/application.properties
----- a/apigateway/src/main/resources/application.properties	
--+++ b/apigateway/src/main/resources/application.properties	
--@@ -3,4 +3,12 @@
-- eureka.client.serviceUrl.defaultZone = http://localhost:8761/eureka
-- eureka.client.fetch-registry = true
-- eureka.client.register-with-eureka = true
---spring.application.name=apigateway
--\ No newline at end of file
--+spring.application.name=apigateway
--+
--+spring.cloud.gateway.globalcors.cors-configuration.allowed-origins=*
--+spring.cloud.gateway.globalcors.cors-configuration.allowed-methods=*
--+spring.cloud.gateway.globalcors.cors-configuration.allowed-headers=*
--+
--+#spring.cloud.gateway.globalcors.cors-configurations.[/**].allowedOrigins=*
--+#spring.cloud.gateway.globalcors.cors-configurations.[/**].allowedMethods=*
--+#spring.cloud.gateway.globalcors.cors-configurations.[/**].allowedHeaders=*
--\ No newline at end of file
--Index: userauthenticationservice/src/main/resources/application.properties
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>server.port = 8081\r\nspring.datasource.url = jdbc:mysql://localhost:3306/kanbanBoardTask?createDatabaseIfNotExist=true\r\nspring.datasource.username = root\r\nspring.datasource.password = 124751\r\nspring.jpa.hibernate.ddl-auto = update\r\nspring.jpa.show-sql = true\r\neureka.client.serviceUrl.defaultZone = http://localhost:8761/eureka\r\neureka.client.fetch-registry = true\r\neureka.client.register-with-eureka = true\r\nspring.application.name = userauthentication\r\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/userauthenticationservice/src/main/resources/application.properties b/userauthenticationservice/src/main/resources/application.properties
----- a/userauthenticationservice/src/main/resources/application.properties	
--+++ b/userauthenticationservice/src/main/resources/application.properties	
--@@ -8,3 +8,5 @@
-- eureka.client.fetch-registry = true
-- eureka.client.register-with-eureka = true
-- spring.application.name = userauthentication
--+
--+
--Index: apigateway/pom.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n\t<modelVersion>4.0.0</modelVersion>\r\n\t<parent>\r\n\t\t<groupId>com.niit.project</groupId>\r\n\t\t<artifactId>kanbanboard</artifactId>\r\n\t\t<version>1.0-SNAPSHOT</version>\r\n\t\t<relativePath/> <!-- lookup parent from repository -->\r\n\t</parent>\r\n\t<groupId>com.niit.project</groupId>\r\n\t<artifactId>apigateway</artifactId>\r\n\t<version>0.0.1-SNAPSHOT</version>\r\n\t<name>ApiGateway</name>\r\n\t<description>Demo project for Spring Boot</description>\r\n\t<properties>\r\n\t\t<java.version>17</java.version>\r\n\t\t<spring-cloud.version>2023.0.0</spring-cloud.version>\r\n\t</properties>\r\n\t<dependencies>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.cloud</groupId>\r\n\t\t\t<artifactId>spring-cloud-starter-gateway</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.cloud</groupId>\r\n\t\t\t<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>\r\n\t\t</dependency>\r\n\r\n\r\n\t</dependencies>\r\n\t<dependencyManagement>\r\n\t\t<dependencies>\r\n\t\t\t<dependency>\r\n\t\t\t\t<groupId>org.springframework.cloud</groupId>\r\n\t\t\t\t<artifactId>spring-cloud-dependencies</artifactId>\r\n\t\t\t\t<version>${spring-cloud.version}</version>\r\n\t\t\t\t<type>pom</type>\r\n\t\t\t\t<scope>import</scope>\r\n\t\t\t</dependency>\r\n\t\t</dependencies>\r\n\t</dependencyManagement>\r\n\r\n\t<build>\r\n\t\t<plugins>\r\n\t\t\t<plugin>\r\n\t\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\r\n\t\t\t</plugin>\r\n\t\t</plugins>\r\n\t</build>\r\n\r\n</project>\r\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/apigateway/pom.xml b/apigateway/pom.xml
----- a/apigateway/pom.xml	
--+++ b/apigateway/pom.xml	
--@@ -6,7 +6,6 @@
-- 		<groupId>com.niit.project</groupId>
-- 		<artifactId>kanbanboard</artifactId>
-- 		<version>1.0-SNAPSHOT</version>
---		<relativePath/> <!-- lookup parent from repository -->
-- 	</parent>
-- 	<groupId>com.niit.project</groupId>
-- 	<artifactId>apigateway</artifactId>
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_21-02-2024_12_22_[Changes]/shelved.patch
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_21-02-2024_12_22_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_21-02-2024_12_22_[Changes]/shelved.patch
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_21-02-2024_12_22_[Changes]/shelved.patch	
--+++ /dev/null	
--@@ -1,14 +0,0 @@
---Index: userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/controller/UserController.java
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/controller/UserController.java b/userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/controller/UserController.java
---new file mode 100644
------ /dev/null	(date 1708498154467)
---+++ b/userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/controller/UserController.java	(date 1708498154467)
---@@ -0,0 +1,4 @@
---+package com.niit.project.userauthenticationservice.controller;
---+
---+public class UserController {
---+}
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_2_21_2024_12_11_PM_[Changes]/shelved.patch
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2_21_2024_12_11_PM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_2_21_2024_12_11_PM_[Changes]/shelved.patch
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_2_21_2024_12_11_PM_[Changes]/shelved.patch	
--+++ /dev/null	
--@@ -1,82 +0,0 @@
---Index: .idea/workspace.xml
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"3accaff2-95c0-4f5b-bacb-4249d94e92aa\" name=\"Changes\" comment=\"security is created\">\r\n      <change afterPath=\"$PROJECT_DIR$/userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/security/inewf.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 4\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2cdYqHUix98h8sfJfDmmjGw5Lw0\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <OptionsSetting value=\"false\" id=\"Update\" />\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration default=\"true\" type=\"JetRunConfigurationType\">\r\n      <module name=\"Kanban Board\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"KotlinStandaloneScriptRunConfigurationType\">\r\n      <module name=\"Kanban Board\" />\r\n      <option name=\"filePath\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"3accaff2-95c0-4f5b-bacb-4249d94e92aa\" name=\"Changes\" comment=\"\" />\r\n      <created>1708420669437</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1708420669437</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"started\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708421271711</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708421271711</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"started\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708423070225</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708423070225</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"updated UserService\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708443467339</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708443467339</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"security is created\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708495653761</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708495653761</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"5\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"started\" />\r\n    <MESSAGE value=\"updated UserService\" />\r\n    <MESSAGE value=\"security is created\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"security is created\" />\r\n  </component>\r\n</project>
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/.idea/workspace.xml b/.idea/workspace.xml
------ a/.idea/workspace.xml	(revision ef97281a8c5c1d0bc37935bea1c0972b91a6914a)
---+++ b/.idea/workspace.xml	(date 1708497675278)
---@@ -4,8 +4,9 @@
---     <option name="autoReloadType" value="SELECTIVE" />
---   </component>
---   <component name="ChangeListManager">
----    <list default="true" id="3accaff2-95c0-4f5b-bacb-4249d94e92aa" name="Changes" comment="security is created">
----      <change afterPath="$PROJECT_DIR$/userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/security/inewf.java" afterDir="false" />
---+    <list default="true" id="3accaff2-95c0-4f5b-bacb-4249d94e92aa" name="Changes" comment="security package is created">
---+      <change afterPath="$PROJECT_DIR$/userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/security/ISecurityTokenGenerator.java" afterDir="false" />
---+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
---     </list>
---     <option name="SHOW_DIALOG" value="false" />
---     <option name="HIGHLIGHT_CONFLICTS" value="true" />
---@@ -15,8 +16,8 @@
---   <component name="FileTemplateManagerImpl">
---     <option name="RECENT_TEMPLATES">
---       <list>
----        <option value="Interface" />
---         <option value="Class" />
---+        <option value="Interface" />
---       </list>
---     </option>
---   </component>
---@@ -102,13 +103,31 @@
---       <option name="project" value="LOCAL" />
---       <updated>1708495653761</updated>
---     </task>
----    <option name="localTasksCounter" value="5" />
---+    <task id="LOCAL-00005" summary="security checking">
---+      <option name="closed" value="true" />
---+      <created>1708495846412</created>
---+      <option name="number" value="00005" />
---+      <option name="presentableId" value="LOCAL-00005" />
---+      <option name="project" value="LOCAL" />
---+      <updated>1708495846412</updated>
---+    </task>
---+    <task id="LOCAL-00006" summary="security package is created">
---+      <option name="closed" value="true" />
---+      <created>1708495897559</created>
---+      <option name="number" value="00006" />
---+      <option name="presentableId" value="LOCAL-00006" />
---+      <option name="project" value="LOCAL" />
---+      <updated>1708495897559</updated>
---+    </task>
---+    <option name="localTasksCounter" value="7" />
---     <servers />
---   </component>
---   <component name="VcsManagerConfiguration">
---     <MESSAGE value="started" />
---     <MESSAGE value="updated UserService" />
---     <MESSAGE value="security is created" />
----    <option name="LAST_COMMIT_MESSAGE" value="security is created" />
---+    <MESSAGE value="security checking" />
---+    <MESSAGE value="security package is created" />
---+    <option name="LAST_COMMIT_MESSAGE" value="security package is created" />
---   </component>
--- </project>
---\ No newline at end of file
---Index: userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/security/ISecurityTokenGenerator.java
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/security/ISecurityTokenGenerator.java b/userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/security/ISecurityTokenGenerator.java
---new file mode 100644
------ /dev/null	(date 1708497675204)
---+++ b/userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/security/ISecurityTokenGenerator.java	(date 1708497675204)
---@@ -0,0 +1,5 @@
---+package com.niit.project.userauthenticationservice.security;
---+
---+public interface ISecurityTokenGenerator {
---+
---+}
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_12_14_[Changes]1/shelved.patch
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_12_14_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_12_14_[Changes]1/shelved.patch
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_12_14_[Changes]1/shelved.patch	
--+++ /dev/null	
--@@ -1,51 +0,0 @@
---Index: boardtaskservice/pom.xml
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n\t<modelVersion>4.0.0</modelVersion>\r\n\t<parent>\r\n\t\t<groupId>com.niit.project</groupId>\r\n\t\t<artifactId>kanbanboard</artifactId>\r\n\t\t<version>1.0-SNAPSHOT</version>\r\n\t\t<relativePath/> <!-- lookup parent from repository -->\r\n\t</parent>\r\n\t<groupId>com.niit.project</groupId>\r\n\t<artifactId>boardtaskservice</artifactId>\r\n\t<version>0.0.1-SNAPSHOT</version>\r\n\t<name>BoardTaskService</name>\r\n\t<description>Demo project for Spring Boot</description>\r\n\t<properties>\r\n\t\t<java.version>17</java.version>\r\n\t\t<spring-cloud.version>2021.0.4</spring-cloud.version>\r\n\t</properties>\r\n\t<dependencies>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-data-mongodb</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.cloud</groupId>\r\n\t\t\t<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>io.jsonwebtoken</groupId>\r\n\t\t\t<artifactId>jjwt</artifactId>\r\n\t\t\t<version>0.9.1</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.glassfish.jaxb</groupId>\r\n\t\t\t<artifactId>jaxb-runtime</artifactId>\r\n\t\t\t<version>2.3.1</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.cloud</groupId>\r\n\t\t\t<artifactId>spring-cloud-starter-openfeign</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-test</artifactId>\r\n\t\t\t<scope>test</scope>\r\n\t\t</dependency>\r\n\t</dependencies>\r\n\t<dependencyManagement>\r\n\t\t<dependencies>\r\n\t\t\t<dependency>\r\n\t\t\t\t<groupId>org.springframework.cloud</groupId>\r\n\t\t\t\t<artifactId>spring-cloud-dependencies</artifactId>\r\n\t\t\t\t<version>${spring-cloud.version}</version>\r\n\t\t\t\t<type>pom</type>\r\n\t\t\t\t<scope>import</scope>\r\n\t\t\t</dependency>\r\n\t\t</dependencies>\r\n\t</dependencyManagement>\r\n\r\n\t<build>\r\n\t\t<plugins>\r\n\t\t\t<plugin>\r\n\t\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\r\n\t\t\t</plugin>\r\n\t\t</plugins>\r\n\t</build>\r\n\r\n</project>\r\n
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/boardtaskservice/pom.xml b/boardtaskservice/pom.xml
------ a/boardtaskservice/pom.xml	
---+++ b/boardtaskservice/pom.xml	
---@@ -36,6 +36,7 @@
--- 			<artifactId>jaxb-runtime</artifactId>
--- 			<version>2.3.1</version>
--- 		</dependency>
---+
--- 		<dependency>
--- 			<groupId>org.springframework.cloud</groupId>
--- 			<artifactId>spring-cloud-starter-openfeign</artifactId>
---Index: boardtaskservice/src/main/java/com/niit/project/boardtaskservice/BoardTaskServiceApplication.java
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+>package com.niit.project.boardtaskservice;\r\n\r\nimport org.springframework.boot.SpringApplication;\r\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\r\nimport org.springframework.cloud.openfeign.EnableFeignClients;\r\n\r\n@SpringBootApplication\r\n@EnableFeignClients\r\npublic class BoardTaskServiceApplication {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tSpringApplication.run(BoardTaskServiceApplication.class, args);\r\n\t}\r\n\r\n}\r\n
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/BoardTaskServiceApplication.java b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/BoardTaskServiceApplication.java
------ a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/BoardTaskServiceApplication.java	
---+++ b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/BoardTaskServiceApplication.java	
---@@ -2,7 +2,9 @@
--- 
--- import org.springframework.boot.SpringApplication;
--- import org.springframework.boot.autoconfigure.SpringBootApplication;
---+import org.springframework.boot.web.servlet.FilterRegistrationBean;
--- import org.springframework.cloud.openfeign.EnableFeignClients;
---+import org.springframework.context.annotation.Bean;
--- 
--- @SpringBootApplication
--- @EnableFeignClients
---@@ -11,5 +13,12 @@
--- 	public static void main(String[] args) {
--- 		SpringApplication.run(BoardTaskServiceApplication.class, args);
--- 	}
---+	@Bean
---+	public FilterRegistrationBean jwtFilterBean(){
---+		FilterRegistrationBean filterRegistrationBean = new FilterRegistrationBean();
---+		filterRegistrationBean.setFilter(new JwtFilter());
---+		filterRegistrationBean.addUrlPatterns("/api/v2/user/*");
---+		return filterRegistrationBean;
---+	}
--- 
--- }
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_2_23_2024_11_32_AM__Changes_.xml
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2_23_2024_11_32_AM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_2_23_2024_11_32_AM__Changes_.xml
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_2_23_2024_11_32_AM__Changes_.xml	
--+++ /dev/null	
--@@ -1,4 +0,0 @@
---<changelist name="Uncommitted_changes_before_Update_at_2_23_2024_11_32_AM_[Changes]" date="1708668153521" recycled="true" deleted="true">
---  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2_23_2024_11_32_AM_[Changes]/shelved.patch" />
---  <option name="DESCRIPTION" value="Uncommitted changes before Update at 2/23/2024 11:32 AM [Changes]" />
---</changelist>
--\ No newline at end of file
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_2_22_2024_11_57_PM_[Changes]/shelved.patch
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2_22_2024_11_57_PM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_2_22_2024_11_57_PM_[Changes]/shelved.patch
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_2_22_2024_11_57_PM_[Changes]/shelved.patch	
--+++ /dev/null	
--@@ -1,46 +0,0 @@
---Index: .idea/workspace.xml
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"3accaff2-95c0-4f5b-bacb-4249d94e92aa\" name=\"Changes\" comment=\"testing service layer login success and fail are updated\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 4\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2cdYqHUix98h8sfJfDmmjGw5Lw0\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <OptionsSetting value=\"false\" id=\"Update\" />\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\" selected=\"JUnit.UserServiceTest.givenUserLoginFailureThrowUserLoginException\">\r\n    <configuration name=\"UserControllerTest (1)\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"userauthenticationservice\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.niit.project.userauthenticationservice.controller.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"com.niit.project.userauthenticationservice.controller\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.niit.project.userauthenticationservice.controller.UserControllerTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserControllerTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"userauthenticationservice\" />\r\n      <option name=\"PACKAGE_NAME\" value=\"\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"UserControllerTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserControllerTest.givenUserToSaveReturnUserFailure\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"userauthenticationservice\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.niit.project.userauthenticationservice.controller.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"com.niit.project.userauthenticationservice.controller\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.niit.project.userauthenticationservice.controller.UserControllerTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"givenUserToSaveReturnUserFailure\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserControllerTest.testLoginUser_InvalidCredentials\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"userauthenticationservice\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.niit.project.userauthenticationservice.controller.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"com.niit.project.userauthenticationservice.controller\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.niit.project.userauthenticationservice.controller.UserControllerTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"testLoginUser_InvalidCredentials\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserServiceTest.givenUserLoginFailureThrowUserLoginException\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"userauthenticationservice\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.niit.project.userauthenticationservice.service.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"com.niit.project.userauthenticationservice.service\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.niit.project.userauthenticationservice.service.UserServiceTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"givenUserLoginFailureThrowUserLoginException\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"JetRunConfigurationType\">\r\n      <module name=\"Kanban Board\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"KotlinStandaloneScriptRunConfigurationType\">\r\n      <module name=\"Kanban Board\" />\r\n      <option name=\"filePath\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"JUnit.UserServiceTest.givenUserLoginFailureThrowUserLoginException\" />\r\n        <item itemvalue=\"JUnit.UserControllerTest.testLoginUser_InvalidCredentials\" />\r\n        <item itemvalue=\"JUnit.UserControllerTest.givenUserToSaveReturnUserFailure\" />\r\n        <item itemvalue=\"JUnit.UserControllerTest (1)\" />\r\n        <item itemvalue=\"JUnit.UserControllerTest\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"3accaff2-95c0-4f5b-bacb-4249d94e92aa\" name=\"Changes\" comment=\"\" />\r\n      <created>1708420669437</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1708420669437</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"started\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708421271711</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708421271711</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"started\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708423070225</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708423070225</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"updated UserService\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708443467339</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708443467339</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"security is created\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708495653761</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708495653761</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"security checking\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708495846412</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708495846412</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"security package is created\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708495897559</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708495897559</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"jwt security updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708498293469</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708498293469</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Application properties updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708498937269</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708498937269</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"jwt token security updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708500192558</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708500192558</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"IRepository updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708603781826</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708603781826</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"ITaskService And Proxy updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708609359280</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708609359280</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"register,savetask,updated task implemented\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708621466516</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708621466516</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"testing service layer login success and fail are updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708625633406</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708625633406</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"14\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"started\" />\r\n    <MESSAGE value=\"updated UserService\" />\r\n    <MESSAGE value=\"security is created\" />\r\n    <MESSAGE value=\"security checking\" />\r\n    <MESSAGE value=\"security package is created\" />\r\n    <MESSAGE value=\"jwt security updated\" />\r\n    <MESSAGE value=\"Application properties updated\" />\r\n    <MESSAGE value=\"jwt token security updated\" />\r\n    <MESSAGE value=\"IRepository updated\" />\r\n    <MESSAGE value=\"IRepository AND PROXY updated\" />\r\n    <MESSAGE value=\"ITaskService And Proxy updated\" />\r\n    <MESSAGE value=\"register,savetask,updated task implemented\" />\r\n    <MESSAGE value=\"testing service layer login success and fail are updated\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"testing service layer login success and fail are updated\" />\r\n  </component>\r\n</project>
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/.idea/workspace.xml b/.idea/workspace.xml
------ a/.idea/workspace.xml	(revision ed169f8624c43c8e1cf8819ed0cad0d25e5668ea)
---+++ b/.idea/workspace.xml	(date 1708626361821)
---@@ -4,7 +4,7 @@
---     <option name="autoReloadType" value="SELECTIVE" />
---   </component>
---   <component name="ChangeListManager">
----    <list default="true" id="3accaff2-95c0-4f5b-bacb-4249d94e92aa" name="Changes" comment="testing service layer login success and fail are updated" />
---+    <list default="true" id="3accaff2-95c0-4f5b-bacb-4249d94e92aa" name="Changes" comment="getUserName,getAllUser,getUserRole methods are updated in taskservice" />
---     <option name="SHOW_DIALOG" value="false" />
---     <option name="HIGHLIGHT_CONFLICTS" value="true" />
---     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
---@@ -257,7 +257,15 @@
---       <option name="project" value="LOCAL" />
---       <updated>1708625633406</updated>
---     </task>
----    <option name="localTasksCounter" value="14" />
---+    <task id="LOCAL-00014" summary="getUserName,getAllUser,getUserRole methods are updated in taskservice">
---+      <option name="closed" value="true" />
---+      <created>1708626050836</created>
---+      <option name="number" value="00014" />
---+      <option name="presentableId" value="LOCAL-00014" />
---+      <option name="project" value="LOCAL" />
---+      <updated>1708626050836</updated>
---+    </task>
---+    <option name="localTasksCounter" value="15" />
---     <servers />
---   </component>
---   <component name="VcsManagerConfiguration">
---@@ -274,6 +282,7 @@
---     <MESSAGE value="ITaskService And Proxy updated" />
---     <MESSAGE value="register,savetask,updated task implemented" />
---     <MESSAGE value="testing service layer login success and fail are updated" />
----    <option name="LAST_COMMIT_MESSAGE" value="testing service layer login success and fail are updated" />
---+    <MESSAGE value="getUserName,getAllUser,getUserRole methods are updated in taskservice" />
---+    <option name="LAST_COMMIT_MESSAGE" value="getUserName,getAllUser,getUserRole methods are updated in taskservice" />
---   </component>
--- </project>
---\ No newline at end of file
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_21-02-2024_12_12__Changes_1.xml
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_21-02-2024_12_12__Changes_1.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_21-02-2024_12_12__Changes_1.xml
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_21-02-2024_12_12__Changes_1.xml	
--+++ /dev/null	
--@@ -1,4 +0,0 @@
---<changelist name="Uncommitted_changes_before_Update_at_21-02-2024_12_12_[Changes]1" date="1708497733552" recycled="true" deleted="true">
---  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_21-02-2024_12_12_[Changes]1/shelved.patch" />
---  <option name="DESCRIPTION" value="Uncommitted changes before Update at 21-02-2024 12:12 [Changes]" />
---</changelist>
--\ No newline at end of file
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_2_23_2024_11_32_AM_[Changes]/shelved.patch
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2_23_2024_11_32_AM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_2_23_2024_11_32_AM_[Changes]/shelved.patch
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_2_23_2024_11_32_AM_[Changes]/shelved.patch	
--+++ /dev/null	
--@@ -1,48 +0,0 @@
---Index: .idea/workspace.xml
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"3accaff2-95c0-4f5b-bacb-4249d94e92aa\" name=\"Changes\" comment=\"getUserName,getAllUser,getUserRole methods are updated in taskservice\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 4\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2cdYqHUix98h8sfJfDmmjGw5Lw0\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <OptionsSetting value=\"false\" id=\"Update\" />\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\" selected=\"JUnit.IUserRepositoryTest\">\r\n    <configuration name=\"IUserRepositoryTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"userauthenticationservice\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.niit.project.userauthenticationservice.repository.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"com.niit.project.userauthenticationservice.repository\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.niit.project.userauthenticationservice.repository.IUserRepositoryTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserControllerTest (1)\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"userauthenticationservice\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.niit.project.userauthenticationservice.controller.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"com.niit.project.userauthenticationservice.controller\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.niit.project.userauthenticationservice.controller.UserControllerTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserControllerTest.givenUserToSaveReturnUserFailure\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"userauthenticationservice\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.niit.project.userauthenticationservice.controller.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"com.niit.project.userauthenticationservice.controller\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.niit.project.userauthenticationservice.controller.UserControllerTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"givenUserToSaveReturnUserFailure\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserControllerTest.testLoginUser_InvalidCredentials\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"userauthenticationservice\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.niit.project.userauthenticationservice.controller.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"com.niit.project.userauthenticationservice.controller\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.niit.project.userauthenticationservice.controller.UserControllerTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"testLoginUser_InvalidCredentials\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserServiceTest.givenUserLoginFailureThrowUserLoginException\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"userauthenticationservice\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.niit.project.userauthenticationservice.service.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"com.niit.project.userauthenticationservice.service\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.niit.project.userauthenticationservice.service.UserServiceTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"givenUserLoginFailureThrowUserLoginException\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"JetRunConfigurationType\">\r\n      <module name=\"Kanban Board\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"KotlinStandaloneScriptRunConfigurationType\">\r\n      <module name=\"Kanban Board\" />\r\n      <option name=\"filePath\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"JUnit.IUserRepositoryTest\" />\r\n        <item itemvalue=\"JUnit.UserControllerTest (1)\" />\r\n        <item itemvalue=\"JUnit.UserServiceTest.givenUserLoginFailureThrowUserLoginException\" />\r\n        <item itemvalue=\"JUnit.UserControllerTest.testLoginUser_InvalidCredentials\" />\r\n        <item itemvalue=\"JUnit.UserControllerTest.givenUserToSaveReturnUserFailure\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"3accaff2-95c0-4f5b-bacb-4249d94e92aa\" name=\"Changes\" comment=\"\" />\r\n      <created>1708420669437</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1708420669437</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"started\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708421271711</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708421271711</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"started\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708423070225</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708423070225</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"updated UserService\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708443467339</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708443467339</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"security is created\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708495653761</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708495653761</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"security checking\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708495846412</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708495846412</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"security package is created\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708495897559</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708495897559</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"jwt security updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708498293469</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708498293469</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Application properties updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708498937269</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708498937269</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"jwt token security updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708500192558</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708500192558</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"IRepository updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708603781826</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708603781826</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"ITaskService And Proxy updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708609359280</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708609359280</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"register,savetask,updated task implemented\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708621466516</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708621466516</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"testing service layer login success and fail are updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708625633406</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708625633406</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"getUserName,getAllUser,getUserRole methods are updated in taskservice\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708626050836</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708626050836</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"15\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"started\" />\r\n    <MESSAGE value=\"updated UserService\" />\r\n    <MESSAGE value=\"security is created\" />\r\n    <MESSAGE value=\"security checking\" />\r\n    <MESSAGE value=\"security package is created\" />\r\n    <MESSAGE value=\"jwt security updated\" />\r\n    <MESSAGE value=\"Application properties updated\" />\r\n    <MESSAGE value=\"jwt token security updated\" />\r\n    <MESSAGE value=\"IRepository updated\" />\r\n    <MESSAGE value=\"IRepository AND PROXY updated\" />\r\n    <MESSAGE value=\"ITaskService And Proxy updated\" />\r\n    <MESSAGE value=\"register,savetask,updated task implemented\" />\r\n    <MESSAGE value=\"testing service layer login success and fail are updated\" />\r\n    <MESSAGE value=\"getUserName,getAllUser,getUserRole methods are updated in taskservice\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"getUserName,getAllUser,getUserRole methods are updated in taskservice\" />\r\n  </component>\r\n</project>
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/.idea/workspace.xml b/.idea/workspace.xml
------ a/.idea/workspace.xml	(revision 0128f01fe345a766ec3c948c9a21584de4e4a8ba)
---+++ b/.idea/workspace.xml	(date 1708627119582)
---@@ -4,7 +4,9 @@
---     <option name="autoReloadType" value="SELECTIVE" />
---   </component>
---   <component name="ChangeListManager">
----    <list default="true" id="3accaff2-95c0-4f5b-bacb-4249d94e92aa" name="Changes" comment="getUserName,getAllUser,getUserRole methods are updated in taskservice" />
---+    <list default="true" id="3accaff2-95c0-4f5b-bacb-4249d94e92aa" name="Changes" comment="userauth repository test case is updated">
---+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
---+    </list>
---     <option name="SHOW_DIALOG" value="false" />
---     <option name="HIGHLIGHT_CONFLICTS" value="true" />
---     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
---@@ -271,7 +273,15 @@
---       <option name="project" value="LOCAL" />
---       <updated>1708626050836</updated>
---     </task>
----    <option name="localTasksCounter" value="15" />
---+    <task id="LOCAL-00015" summary="userauth repository test case is updated">
---+      <option name="closed" value="true" />
---+      <created>1708626533067</created>
---+      <option name="number" value="00015" />
---+      <option name="presentableId" value="LOCAL-00015" />
---+      <option name="project" value="LOCAL" />
---+      <updated>1708626533067</updated>
---+    </task>
---+    <option name="localTasksCounter" value="16" />
---     <servers />
---   </component>
---   <component name="VcsManagerConfiguration">
---@@ -289,6 +299,7 @@
---     <MESSAGE value="register,savetask,updated task implemented" />
---     <MESSAGE value="testing service layer login success and fail are updated" />
---     <MESSAGE value="getUserName,getAllUser,getUserRole methods are updated in taskservice" />
----    <option name="LAST_COMMIT_MESSAGE" value="getUserName,getAllUser,getUserRole methods are updated in taskservice" />
---+    <MESSAGE value="userauth repository test case is updated" />
---+    <option name="LAST_COMMIT_MESSAGE" value="userauth repository test case is updated" />
---   </component>
--- </project>
---\ No newline at end of file
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_21-02-2024_12_12_[Changes]1/shelved.patch
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_21-02-2024_12_12_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_21-02-2024_12_12_[Changes]1/shelved.patch
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_21-02-2024_12_12_[Changes]1/shelved.patch	
--+++ /dev/null	
--@@ -1,14 +0,0 @@
---Index: userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/controller/UserController.java
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/controller/UserController.java b/userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/controller/UserController.java
---new file mode 100644
------ /dev/null	
---+++ b/userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/controller/UserController.java	
---@@ -0,0 +1,4 @@
---+package com.niit.project.userauthenticationservice.controller;
---+
---+public class UserController {
---+}
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_14_41_[Changes]1/shelved.patch
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_14_41_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_14_41_[Changes]1/shelved.patch
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_14_41_[Changes]1/shelved.patch	
--+++ /dev/null	
--@@ -1,40 +0,0 @@
---Index: boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/TaskServiceImpl.java
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+>package com.niit.project.boardtaskservice.services;\r\n\r\nimport com.niit.project.boardtaskservice.domain.Task;\r\nimport com.niit.project.boardtaskservice.domain.UserDetails;\r\nimport com.niit.project.boardtaskservice.exceptions.TaskAlreadyExistsException;\r\nimport com.niit.project.boardtaskservice.exceptions.TaskNotFoundException;\r\nimport com.niit.project.boardtaskservice.exceptions.UserAlreadyExistsException;\r\nimport com.niit.project.boardtaskservice.exceptions.UserNotFoundException;\r\nimport com.niit.project.boardtaskservice.proxy.TaskProxy;\r\nimport com.niit.project.boardtaskservice.repository.ITaskRepository;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\nimport java.util.Optional;\r\n@Service\r\npublic class TaskServiceImpl implements ITaskService{\r\n    private final ITaskRepository taskRepository;\r\n    private final TaskProxy taskProxy;\r\n@Autowired\r\n    public TaskServiceImpl(ITaskRepository taskRepository, TaskProxy taskProxy) {\r\n        this.taskRepository = taskRepository;\r\n        this.taskProxy = taskProxy;\r\n    }\r\n    @Override\r\n    public UserDetails registerUser(UserDetails userdetails)throws UserAlreadyExistsException {\r\n        if(taskRepository.findById(userdetails.getEmailId()).isPresent()){\r\n            throw new UserAlreadyExistsException(\"UserAlreadyExists\");\r\n        }\r\n        else{\r\n            UserDetails insertedUser=taskRepository.save(userdetails);\r\n            taskProxy.registerUser(insertedUser);\r\n            return insertedUser;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public UserDetails saveTaskToUser(Task task, String userEmail) throws TaskAlreadyExistsException,UserAlreadyExistsException {\r\n        Optional<UserDetails> userOptional=taskRepository.findById(userEmail);\r\n        if(userOptional.isPresent()){\r\n            UserDetails fetchedUser=userOptional.get();\r\n            List<Task> taskList=fetchedUser.getTaskList();\r\n            if(taskList==null){\r\n                fetchedUser.setTaskList(Arrays.asList(task));\r\n            }\r\n            else{\r\n                boolean taskpresent=false;\r\n                for(Task searchTask:taskList){\r\n                    if(searchTask.getTaskName().equals(task.getTaskName())){\r\n                        taskpresent=true;\r\n                        break;\r\n                    }\r\n                }\r\n                if(taskpresent){\r\n                    throw new TaskAlreadyExistsException(\"Task already present in given emailid\");\r\n                }\r\n                else{\r\n                    taskList.add(task);\r\n                    fetchedUser.setTaskList(taskList);\r\n                }\r\n            }\r\n            return  taskRepository.save(fetchedUser);\r\n\r\n        }\r\n        else{\r\n            throw new UserAlreadyExistsException(\"user already exist in given emailid\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public UserDetails updateTaskToUser(Task task, String userEmail) throws TaskNotFoundException,UserNotFoundException {\r\n        Optional<UserDetails> userOptional=taskRepository.findById(userEmail);\r\n        if(userOptional.isPresent()){\r\n            UserDetails fetchedUser=userOptional.get();\r\n            List<Task> taskList=fetchedUser.getTaskList();\r\n            if(taskList==null || taskList.isEmpty() ) {\r\n                throw new TaskNotFoundException(\"TaskList with Specified Id is not Found  \");\r\n            }\r\n            else{\r\n                boolean taskPresent=false;\r\n                for(Task updateTask:taskList) {\r\n                    if (updateTask.getTaskId() == task.getTaskId()) {\r\n                        int index = 0;\r\n                        updateTask.setTaskName(task.getTaskName());\r\n                        updateTask.setTaskDescription(task.getTaskDescription());\r\n                        updateTask.setAssignTo(task.getAssignTo());\r\n                        updateTask.setDueDate(task.getDueDate());\r\n                        updateTask.setStatus(task.getStatus());\r\n                        index = taskList.indexOf(updateTask);\r\n                        fetchedUser.setTaskList(taskList);\r\n                        taskPresent = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if(taskPresent==false){\r\n                    throw new TaskNotFoundException(\"Task with Specified Id is not Found \");\r\n\r\n                }\r\n            }\r\n            return taskRepository.save(fetchedUser);\r\n        }\r\n        else {\r\n            throw new UserNotFoundException(\"user with the specified Id not found\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public UserDetails deleteTask(Task task, String UserEmailId) throws TaskNotFoundException{\r\n        Optional<UserDetails> userOptional=taskRepository.findById(UserEmailId);\r\n        if(userOptional.isPresent()){\r\n            UserDetails fetchedUser=userOptional.get();\r\n            List<Task> taskList=fetchedUser.getTaskList();\r\n            if(taskList==null || taskList.isEmpty() ) {\r\n                throw new TaskNotFoundException(\"TaskList with Specified Id is not Found\");\r\n            }\r\n            else{\r\n                boolean taskPresent=false;\r\n                for(Task existingTask:taskList) {\r\n                    if (existingTask.getTaskId() == task.getTaskId()) {\r\n                        taskList.remove(existingTask);\r\n                        fetchedUser.setTaskList(taskList);\r\n                        taskPresent = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if(taskPresent==false){\r\n                    throw new TaskNotFoundException(\"Task with Specified Id is not Found \");\r\n\r\n                }\r\n            }\r\n            return taskRepository.save(fetchedUser);\r\n        }\r\n        else {\r\n            throw new UserNotFoundException(\"user with the specified Id not found\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public List<Task> getAllTaskFromUser(String UserEmailId)throws TaskNotFoundException,UserNotFoundException {\r\n        Optional<UserDetails> userOptional=taskRepository.findById(UserEmailId);\r\n        if(userOptional.isPresent()){\r\n            UserDetails fetchedUser=userOptional.get();\r\n            List<Task> taskList=fetchedUser.getTaskList();\r\n            if(taskList==null || taskList.isEmpty() ) {\r\n                throw new TaskNotFoundException(\"TaskList with Specified Id is not Found  \");\r\n            }\r\n            else{\r\n                return taskList;\r\n\r\n            }\r\n        }\r\n        else {\r\n            throw new UserNotFoundException(\"user with the specified Id not found\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public Task getOneTaskById(Task task, String EmailId) throws TaskNotFoundException,UserNotFoundException{\r\n        Optional<UserDetails >userOptional=taskRepository.findById(EmailId);\r\n        if (userOptional.isPresent()) {\r\n            UserDetails fetchedUser=userOptional.get();\r\n            List<Task> taskList=fetchedUser.getTaskList();\r\n            if(taskList==null || taskList.isEmpty() ) {\r\n                throw new TaskNotFoundException(\"TaskList with Specified Id is not Found  \");\r\n            }\r\n            else{\r\n                for(Task onetask:taskList){\r\n                    if(onetask.getTaskName().equals(task.getTaskName())){\r\n                        return onetask;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        throw new UserNotFoundException(\"user with the specified Id not found\");\r\n    }\r\n\r\n    @Override\r\n    public String getUserName(String emailID)throws UserNotFoundException {\r\n        Optional<UserDetails >fetchedUser=taskRepository.findById(emailID);\r\n        if (fetchedUser.isEmpty()) {\r\n            throw new UserNotFoundException(\"user with the specified Id not found\");\r\n        }\r\n        return fetchedUser.get().getUserName();\r\n    }\r\n    @Override\r\n    public List<UserDetails> getAllUser(String emailId) throws UserNotFoundException{\r\n        Optional<UserDetails >fetchedUser=taskRepository.findById(emailId);\r\n        if (fetchedUser.isEmpty()) {\r\n            throw new UserNotFoundException(\"user with the specified Id not found\");\r\n        }\r\n        return taskRepository.findAll();\r\n    }\r\n\r\n    @Override\r\n    public String getUserRole(String emailId)throws UserNotFoundException {\r\n        if (taskRepository.findById(emailId).isEmpty()) {\r\n            throw new UserNotFoundException(\"user with the specified Id not found\");\r\n        }\r\n        return taskRepository.findById(emailId).get().getRole();\r\n    }\r\n}\r\n
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/TaskServiceImpl.java b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/TaskServiceImpl.java
------ a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/TaskServiceImpl.java	
---+++ b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/TaskServiceImpl.java	
---@@ -156,8 +156,8 @@
---     }
--- 
---     @Override
----    public Task getOneTaskById(Task task, String EmailId) throws TaskNotFoundException,UserNotFoundException{
----        Optional<UserDetails >userOptional=taskRepository.findById(EmailId);
---+    public Task getOneTaskById(Task task, String userEmailId) throws TaskNotFoundException,UserNotFoundException{
---+        Optional<UserDetails >userOptional=taskRepository.findById(userEmailId);
---         if (userOptional.isPresent()) {
---             UserDetails fetchedUser=userOptional.get();
---             List<Task> taskList=fetchedUser.getTaskList();
---Index: boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/ITaskService.java
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+>package com.niit.project.boardtaskservice.services;\r\n\r\nimport com.niit.project.boardtaskservice.domain.Task;\r\nimport com.niit.project.boardtaskservice.domain.UserDetails;\r\nimport com.niit.project.boardtaskservice.exceptions.TaskAlreadyExistsException;\r\nimport com.niit.project.boardtaskservice.exceptions.TaskNotFoundException;\r\nimport com.niit.project.boardtaskservice.exceptions.UserAlreadyExistsException;\r\nimport com.niit.project.boardtaskservice.exceptions.UserNotFoundException;\r\n\r\nimport java.util.List;\r\n\r\npublic interface ITaskService {\r\n    UserDetails registerUser (UserDetails userdetails)throws UserAlreadyExistsException;\r\n    UserDetails saveTaskToUser(Task task, String userEmail) throws TaskAlreadyExistsException,UserAlreadyExistsException;\r\n    UserDetails updateTaskToUser(Task task, String userEmail)throws TaskNotFoundException, UserNotFoundException;\r\n\r\n    UserDetails deleteTask(Task task, String UserEmailId)throws TaskNotFoundException;\r\n    List<Task> getAllTaskFromUser(String UserEmailId)throws TaskNotFoundException,UserNotFoundException ;\r\n    Task getOneTaskById(Task task , String EmailId)throws TaskNotFoundException,UserNotFoundException;\r\n\r\n    String getUserName(String emailId)throws UserNotFoundException;\r\n    List<UserDetails> getAllUser(String emailId) throws UserNotFoundException;\r\n    String getUserRole(String emailId) throws UserNotFoundException;\r\n}\r\n
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/ITaskService.java b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/ITaskService.java
------ a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/ITaskService.java	
---+++ b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/ITaskService.java	
---@@ -16,7 +16,7 @@
--- 
---     UserDetails deleteTask(Task task, String UserEmailId)throws TaskNotFoundException;
---     List<Task> getAllTaskFromUser(String UserEmailId)throws TaskNotFoundException,UserNotFoundException ;
----    Task getOneTaskById(Task task , String EmailId)throws TaskNotFoundException,UserNotFoundException;
---+    Task getOneTaskById(Task task , String UserEmailId)throws TaskNotFoundException,UserNotFoundException;
--- 
---     String getUserName(String emailId)throws UserNotFoundException;
---     List<UserDetails> getAllUser(String emailId) throws UserNotFoundException;
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_14_41__Changes_1.xml
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_14_41__Changes_1.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_14_41__Changes_1.xml
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_14_41__Changes_1.xml	
--+++ /dev/null	
--@@ -1,4 +0,0 @@
---<changelist name="Uncommitted_changes_before_Update_at_23-02-2024_14_41_[Changes]1" date="1708679503798" recycled="true" deleted="true">
---  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_14_41_[Changes]1/shelved.patch" />
---  <option name="DESCRIPTION" value="Uncommitted changes before Update at 23-02-2024 14:41 [Changes]" />
---</changelist>
--\ No newline at end of file
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_21-02-2024_12_22__Changes_.xml
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_21-02-2024_12_22__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_21-02-2024_12_22__Changes_.xml
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_21-02-2024_12_22__Changes_.xml	
--+++ /dev/null	
--@@ -1,4 +0,0 @@
---<changelist name="Uncommitted_changes_before_Update_at_21-02-2024_12_22_[Changes]" date="1708498323554" recycled="true" deleted="true">
---  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_21-02-2024_12_22_[Changes]/shelved.patch" />
---  <option name="DESCRIPTION" value="Uncommitted changes before Update at 21-02-2024 12:22 [Changes]" />
---</changelist>
--\ No newline at end of file
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_12_14__Changes_1.xml
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_12_14__Changes_1.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_12_14__Changes_1.xml
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_12_14__Changes_1.xml	
--+++ /dev/null	
--@@ -1,4 +0,0 @@
---<changelist name="Uncommitted_changes_before_Update_at_23-02-2024_12_14_[Changes]1" date="1708670686510" recycled="true" deleted="true">
---  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_12_14_[Changes]1/shelved.patch" />
---  <option name="DESCRIPTION" value="Uncommitted changes before Update at 23-02-2024 12:14 [Changes]" />
---</changelist>
--\ No newline at end of file
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_2_21_2024_12_11_PM__Changes_.xml
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2_21_2024_12_11_PM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_2_21_2024_12_11_PM__Changes_.xml
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_2_21_2024_12_11_PM__Changes_.xml	
--+++ /dev/null	
--@@ -1,4 +0,0 @@
---<changelist name="Uncommitted_changes_before_Update_at_2_21_2024_12_11_PM_[Changes]" date="1708497682693" recycled="true" deleted="true">
---  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2_21_2024_12_11_PM_[Changes]/shelved.patch" />
---  <option name="DESCRIPTION" value="Uncommitted changes before Update at 2/21/2024 12:11 PM [Changes]" />
---</changelist>
--\ No newline at end of file
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_17_01_[Changes]1/shelved.patch
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_17_01_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_17_01_[Changes]1/shelved.patch
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_17_01_[Changes]1/shelved.patch	
--+++ /dev/null	
--@@ -1,125 +0,0 @@
---Index: userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/UserAuthenticationServiceApplication.java
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+>package com.niit.project.userauthenticationservice;\r\n\r\nimport org.springframework.boot.SpringApplication;\r\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\r\n\r\n@SpringBootApplication\r\npublic class UserAuthenticationServiceApplication {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tSpringApplication.run(UserAuthenticationServiceApplication.class, args);\r\n\t}\r\n\r\n}\r\n
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/UserAuthenticationServiceApplication.java b/userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/UserAuthenticationServiceApplication.java
------ a/userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/UserAuthenticationServiceApplication.java	
---+++ b/userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/UserAuthenticationServiceApplication.java	
---@@ -2,8 +2,10 @@
--- 
--- import org.springframework.boot.SpringApplication;
--- import org.springframework.boot.autoconfigure.SpringBootApplication;
---+import org.springframework.cloud.netflix.eureka.EnableEurekaClient;
--- 
--- @SpringBootApplication
---+@EnableEurekaClient
--- public class UserAuthenticationServiceApplication {
--- 
--- 	public static void main(String[] args) {
---Index: boardtaskservice/src/main/java/com/niit/project/boardtaskservice/BoardTaskServiceApplication.java
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+>package com.niit.project.boardtaskservice;\r\n\r\nimport com.niit.project.boardtaskservice.filter.JWTFilter;\r\nimport org.springframework.boot.SpringApplication;\r\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\r\nimport org.springframework.boot.web.servlet.FilterRegistrationBean;\r\nimport org.springframework.cloud.openfeign.EnableFeignClients;\r\nimport org.springframework.context.annotation.Bean;\r\n\r\n@SpringBootApplication\r\n@EnableFeignClients\r\npublic class BoardTaskServiceApplication {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tSpringApplication.run(BoardTaskServiceApplication.class, args);\r\n\t}\r\n\t@Bean\r\n\tpublic FilterRegistrationBean jwtFilterBean(){\r\n\t\tFilterRegistrationBean filterRegistrationBean = new FilterRegistrationBean();\r\n\r\n\t\tfilterRegistrationBean.addUrlPatterns(\"/api/v2/*\");\r\n\t\tfilterRegistrationBean.setFilter(new JWTFilter());\r\n\t\treturn filterRegistrationBean;\r\n\t}\r\n\r\n}\r\n
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/BoardTaskServiceApplication.java b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/BoardTaskServiceApplication.java
------ a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/BoardTaskServiceApplication.java	
---+++ b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/BoardTaskServiceApplication.java	
---@@ -4,11 +4,13 @@
--- import org.springframework.boot.SpringApplication;
--- import org.springframework.boot.autoconfigure.SpringBootApplication;
--- import org.springframework.boot.web.servlet.FilterRegistrationBean;
---+
--- import org.springframework.cloud.openfeign.EnableFeignClients;
--- import org.springframework.context.annotation.Bean;
--- 
--- @SpringBootApplication
--- @EnableFeignClients
---+
--- public class BoardTaskServiceApplication {
--- 
--- 	public static void main(String[] args) {
---Index: apigateway/src/main/java/com/niit/project/apigateway/ApiGatewayApplication.java
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+>package com.niit.project.apigateway;\r\n\r\nimport org.springframework.boot.SpringApplication;\r\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\r\nimport org.springframework.context.annotation.Bean;\r\nimport org.springframework.context.annotation.Configuration;\r\n\r\n@SpringBootApplication\r\npublic class ApiGatewayApplication {\r\n\tpublic static void main(String[] args) {\r\n\t\tSpringApplication.run(ApiGatewayApplication.class, args);\r\n\t}\r\n\r\n\r\n\r\n}\r\n
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/apigateway/src/main/java/com/niit/project/apigateway/ApiGatewayApplication.java b/apigateway/src/main/java/com/niit/project/apigateway/ApiGatewayApplication.java
------ a/apigateway/src/main/java/com/niit/project/apigateway/ApiGatewayApplication.java	
---+++ b/apigateway/src/main/java/com/niit/project/apigateway/ApiGatewayApplication.java	
---@@ -6,6 +6,7 @@
--- import org.springframework.context.annotation.Configuration;
--- 
--- @SpringBootApplication
---+
--- public class ApiGatewayApplication {
--- 	public static void main(String[] args) {
--- 		SpringApplication.run(ApiGatewayApplication.class, args);
---Index: userauthenticationservice/src/main/resources/application.properties
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+>spring.datasource.url=jdbc:mysql://localhost:3306/kanbanuserdb?createDatabaseIfNotExist=true\r\nspring.datasource.username=root\r\nspring.datasource.password=27a05b2000A@K\r\nspring.jpa.hibernate.ddl-auto=update\r\nspring.jpa.show-sql=true\r\neureka.client.serviceUrl.defaultZone=htttp://localhost:8761/eureka\r\neureka.client.fetchRegistry=true\r\neureka.client.registerWithEureka=true\r\nspring.application.name=userauthservice\r\neureka.instance.hostname=localhost\r\nserver.port=8081\r\n
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/userauthenticationservice/src/main/resources/application.properties b/userauthenticationservice/src/main/resources/application.properties
------ a/userauthenticationservice/src/main/resources/application.properties	
---+++ b/userauthenticationservice/src/main/resources/application.properties	
---@@ -1,6 +1,6 @@
--- spring.datasource.url=jdbc:mysql://localhost:3306/kanbanuserdb?createDatabaseIfNotExist=true
--- spring.datasource.username=root
----spring.datasource.password=27a05b2000A@K
---+spring.datasource.password=124751
--- spring.jpa.hibernate.ddl-auto=update
--- spring.jpa.show-sql=true
--- eureka.client.serviceUrl.defaultZone=htttp://localhost:8761/eureka
---Index: apigateway/src/main/java/com/niit/project/apigateway/configuration/Config.java
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+>package com.niit.project.apigateway.configuration;\r\n\r\nimport org.springframework.context.annotation.Bean;\r\nimport org.springframework.context.annotation.Configuration;\r\nimport org.springframework.cloud.gateway.route.RouteLocator;\r\nimport org.springframework.cloud.gateway.route.builder.RouteLocatorBuilder;\r\n\r\n@Configuration\r\npublic class Config {\r\n    @Bean\r\n    public RouteLocator myRoutes(RouteLocatorBuilder builder){\r\n        return builder.routes().route(p -> p.path(\"/api/v1/**\").uri(\"lb://userauthservice\"))\r\n                .route(p -> p.path(\"/api/v2/**\",\"/api/v3/**\").uri(\"lb://boardtaskservice\"))\r\n                .build();\r\n    }\r\n}\r\n
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/apigateway/src/main/java/com/niit/project/apigateway/configuration/Config.java b/apigateway/src/main/java/com/niit/project/apigateway/configuration/Config.java
------ a/apigateway/src/main/java/com/niit/project/apigateway/configuration/Config.java	
---+++ b/apigateway/src/main/java/com/niit/project/apigateway/configuration/Config.java	
---@@ -6,11 +6,12 @@
--- import org.springframework.cloud.gateway.route.builder.RouteLocatorBuilder;
--- 
--- @Configuration
---+
--- public class Config {
---     @Bean
---     public RouteLocator myRoutes(RouteLocatorBuilder builder){
----        return builder.routes().route(p -> p.path("/api/v1/**").uri("lb://userauthservice"))
----                .route(p -> p.path("/api/v2/**","/api/v3/**").uri("lb://boardtaskservice"))
---+        return builder.routes().route(p -> p.path("/api/v1/*").uri("http://localhost:8081/"))
---+                .route(p -> p.path("/api/v2/**","/api/v3/*").uri("http://localhost:8087/"))
---                 .build();
---     }
--- }
---Index: boardtaskservice/src/main/java/com/niit/project/boardtaskservice/proxy/TaskProxy.java
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+>package com.niit.project.boardtaskservice.proxy;\r\n\r\n\r\nimport com.niit.project.boardtaskservice.domain.UserDetails;\r\n\r\nimport org.springframework.cloud.openfeign.FeignClient;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.RequestBody;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\n\r\n@FeignClient(name=\"userauthservice\",url=\"localhost:8081\")\r\npublic interface TaskProxy {\r\n    @RequestMapping(\"/api/v1/saveUser\")\r\n    public ResponseEntity<?> registerUser(@RequestBody UserDetails user);\r\n\r\n}\r\n
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/proxy/TaskProxy.java b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/proxy/TaskProxy.java
------ a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/proxy/TaskProxy.java	
---+++ b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/proxy/TaskProxy.java	
---@@ -8,7 +8,7 @@
--- import org.springframework.web.bind.annotation.RequestBody;
--- import org.springframework.web.bind.annotation.RequestMapping;
--- 
----@FeignClient(name="userauthservice",url="localhost:8081")
---+@FeignClient(name="user-auth-service",url="localhost:8081")
--- public interface TaskProxy {
---     @RequestMapping("/api/v1/saveUser")
---     public ResponseEntity<?> registerUser(@RequestBody UserDetails user);
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_2_22_2024_11_57_PM__Changes_.xml
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2_22_2024_11_57_PM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_2_22_2024_11_57_PM__Changes_.xml
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_2_22_2024_11_57_PM__Changes_.xml	
--+++ /dev/null	
--@@ -1,4 +0,0 @@
---<changelist name="Uncommitted_changes_before_Update_at_2_22_2024_11_57_PM_[Changes]" date="1708626430723" recycled="true" deleted="true">
---  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2_22_2024_11_57_PM_[Changes]/shelved.patch" />
---  <option name="DESCRIPTION" value="Uncommitted changes before Update at 2/22/2024 11:57 PM [Changes]" />
---</changelist>
--\ No newline at end of file
--Index: boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/ITaskService.java
--===================================================================
--diff --git a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/ITaskService.java b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/ITaskService.java
--deleted file mode 100644
----- a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/ITaskService.java	
--+++ /dev/null	
--@@ -1,24 +0,0 @@
---package com.niit.project.boardtaskservice.services;
---
---import com.niit.project.boardtaskservice.domain.Task;
---import com.niit.project.boardtaskservice.domain.UserDetails;
---import com.niit.project.boardtaskservice.exceptions.TaskAlreadyExistsException;
---import com.niit.project.boardtaskservice.exceptions.TaskNotFoundException;
---import com.niit.project.boardtaskservice.exceptions.UserAlreadyExistsException;
---import com.niit.project.boardtaskservice.exceptions.UserNotFoundException;
---
---import java.util.List;
---
---public interface ITaskService {
---    UserDetails registerUser (UserDetails userdetails)throws UserAlreadyExistsException;
---    UserDetails deleteUser(String emailId)throws UserNotFoundException;
---    UserDetails saveTaskToUser(Task task, String userEmail) throws TaskAlreadyExistsException,UserAlreadyExistsException;
---    UserDetails updateTaskToUser(Task task, String userEmail)throws TaskNotFoundException, UserNotFoundException;
---    UserDetails deleteTask(Task task, String emailId)throws TaskNotFoundException;
---    List<Task> getAllTaskFromUser(String emailId)throws TaskNotFoundException,UserNotFoundException ;
---    Task getOneTaskById(int taskId  , String emailId)throws TaskNotFoundException,UserNotFoundException;
---    String getUserName(String emailId)throws UserNotFoundException;
---    List<UserDetails> getAllUser(String emailId) throws UserNotFoundException;
---    String getUserRole(String emailId) throws UserNotFoundException;
---
---}
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_17_01__Changes_1.xml
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_17_01__Changes_1.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_17_01__Changes_1.xml
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_17_01__Changes_1.xml	
--+++ /dev/null	
--@@ -1,4 +0,0 @@
---<changelist name="Uncommitted_changes_before_Update_at_23-02-2024_17_01_[Changes]1" date="1708687885675" recycled="true" deleted="true">
---  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_17_01_[Changes]1/shelved.patch" />
---  <option name="DESCRIPTION" value="Uncommitted changes before Update at 23-02-2024 17:01 [Changes]" />
---</changelist>
--\ No newline at end of file
--Index: boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/TaskServiceImpl.java
--===================================================================
--diff --git a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/TaskServiceImpl.java b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/TaskServiceImpl.java
--deleted file mode 100644
----- a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/TaskServiceImpl.java	
--+++ /dev/null	
--@@ -1,216 +0,0 @@
---package com.niit.project.boardtaskservice.services;
---
---import com.niit.project.boardtaskservice.domain.Task;
---import com.niit.project.boardtaskservice.domain.UserDetails;
---import com.niit.project.boardtaskservice.exceptions.TaskAlreadyExistsException;
---import com.niit.project.boardtaskservice.exceptions.TaskNotFoundException;
---import com.niit.project.boardtaskservice.exceptions.UserAlreadyExistsException;
---import com.niit.project.boardtaskservice.exceptions.UserNotFoundException;
---import com.niit.project.boardtaskservice.proxy.TaskProxy;
---import com.niit.project.boardtaskservice.repository.ITaskRepository;
---import org.springframework.beans.factory.annotation.Autowired;
---import org.springframework.cloud.openfeign.EnableFeignClients;
---import org.springframework.stereotype.Service;
---
---import java.util.Arrays;
---import java.util.List;
---import java.util.Optional;
---
---@Service
---public class TaskServiceImpl implements ITaskService{
---    private final ITaskRepository taskRepository;
---    private final TaskProxy taskProxy;
---@Autowired
---    public TaskServiceImpl(ITaskRepository taskRepository, TaskProxy taskProxy) {
---        this.taskRepository = taskRepository;
---        this.taskProxy = taskProxy;
---    }
---    @Override
---    public UserDetails registerUser(UserDetails userdetails)throws UserAlreadyExistsException {
---        if(taskRepository.findById(userdetails.getEmailId()).isPresent()){
---            throw new UserAlreadyExistsException("UserAlreadyExists");
---        }
---        else{
---            UserDetails insertedUser=taskRepository.save(userdetails);
---            taskProxy.registerUser(insertedUser);
---            return insertedUser;
---        }
---    }
---
---    @Override
---    public UserDetails saveTaskToUser(Task task, String userEmail) throws TaskAlreadyExistsException, UserAlreadyExistsException {
---        Optional<UserDetails> userOptional = taskRepository.findById(userEmail);
---        if (userOptional.isPresent()) {
---            UserDetails fetchedUser = userOptional.get();
---            List<Task> taskList = fetchedUser.getTaskList();
---            if (taskList == null) {
---                fetchedUser.setTaskList(Arrays.asList(task));
---            } else {
---                boolean taskPresent = false;
---                for (Task searchTask : taskList) {
---                    if (searchTask.getTaskName().equals(task.getTaskName())) {
---                        taskPresent = true;
---                        break;
---                    }
---                }
---                if (taskPresent) {
---                    throw new TaskAlreadyExistsException("Task already present for the given email ID");
---                } else {
---                    taskList.add(task);
---                    fetchedUser.setTaskList(taskList);
---                }
---            }
---            return taskRepository.save(fetchedUser);
---        } else {
---            throw new UserAlreadyExistsException("User does not exist for the given email ID");
---        }
---    }
---
---
---    @Override
---    public UserDetails updateTaskToUser(Task task, String userEmail) throws TaskNotFoundException,UserNotFoundException {
---        Optional<UserDetails> userOptional=taskRepository.findById(userEmail);
---        if(userOptional.isPresent()){
---            UserDetails fetchedUser=userOptional.get();
---            List<Task> taskList=fetchedUser.getTaskList();
---            if(taskList==null || taskList.isEmpty() ) {
---                throw new TaskNotFoundException("TaskList with Specified Id is not Found  ");
---            }
---            else{
---                boolean taskPresent=false;
---                for(Task updateTask:taskList) {
---                    if (updateTask.getTaskId() == task.getTaskId()) {
---                        int index = 0;
---                        updateTask.setTaskName(task.getTaskName());
---                        updateTask.setTaskDescription(task.getTaskDescription());
---                        updateTask.setAssignTo(task.getAssignTo());
---                        updateTask.setDueDate(task.getDueDate());
---                        updateTask.setStatus(task.getStatus());
---                        index = taskList.indexOf(updateTask);
---                        fetchedUser.setTaskList(taskList);
---                        taskPresent = true;
---                        break;
---                    }
---                }
---                if(taskPresent==false){
---                    throw new TaskNotFoundException("Task with Specified Id is not Found ");
---
---                }
---            }
---            return taskRepository.save(fetchedUser);
---        }
---        else {
---            throw new UserNotFoundException("user with the specified Id not found");
---        }
---    }
---
---    @Override
---    public UserDetails deleteTask(Task task, String emailId) throws TaskNotFoundException{
---        Optional<UserDetails> userOptional=taskRepository.findById(emailId);
---        if(userOptional.isPresent()){
---            UserDetails fetchedUser=userOptional.get();
---            List<Task> taskList=fetchedUser.getTaskList();
---            if(taskList==null || taskList.isEmpty() ) {
---                throw new TaskNotFoundException("TaskList with Specified Id is not Found");
---            }
---            else{
---                boolean taskPresent=false;
---                for(Task existingTask:taskList) {
---                    if (existingTask.getTaskId() == task.getTaskId()) {
---                        taskList.remove(existingTask);
---                        fetchedUser.setTaskList(taskList);
---                        taskPresent = true;
---                        break;
---                    }
---                }
---                if(taskPresent==false){
---                    throw new TaskNotFoundException("Task with Specified Id is not Found ");
---
---                }
---            }
---            return taskRepository.save(fetchedUser);
---        }
---        else {
---            throw new UserNotFoundException("user with the specified Id not found");
---        }
---    }
---
---    @Override
---    public List<Task> getAllTaskFromUser(String emailId)throws TaskNotFoundException,UserNotFoundException {
---        Optional<UserDetails> userOptional=taskRepository.findById(emailId);
---        if(userOptional.isPresent()){
---            UserDetails fetchedUser=userOptional.get();
---            List<Task> taskList=fetchedUser.getTaskList();
---            if(taskList==null || taskList.isEmpty() ) {
---                throw new TaskNotFoundException("TaskList with Specified Id is not Found  ");
---            }
---            else{
---                return taskList;
---
---            }
---        }
---        else {
---            throw new UserNotFoundException("user with the specified Id not found");
---        }
---    }
---
---    @Override
---    public Task getOneTaskById(int taskId, String emailId) throws TaskNotFoundException,UserNotFoundException{
---        Optional<UserDetails >userOptional=taskRepository.findById(emailId);
---        if (userOptional.isPresent()) {
---            UserDetails fetchedUser=userOptional.get();
---            List<Task> taskList=fetchedUser.getTaskList();
---            if(taskList==null || taskList.isEmpty() ) {
---                throw new TaskNotFoundException("TaskList with Specified Id is not Found  ");
---            }
---            else{
---                for(Task onetask:taskList){
---                    if(onetask.getTaskId()==taskId){
---                        return onetask;
---                    }
---                }
---            }
---        }
---        throw new UserNotFoundException("user with the specified Id not found");
---    }
---
---
---
---
---    @Override
---    public UserDetails deleteUser(String emailId) throws UserNotFoundException {
---        Optional<UserDetails> userOptional = taskRepository.findById(emailId);
---        if (userOptional.isPresent()) {
---            UserDetails userToDelete = userOptional.get();
---            taskRepository.delete(userToDelete);
---            return userToDelete;
---        } else {
---            throw new UserNotFoundException("User with the specified ID not found");
---        }
---    }
---
---    @Override
---    public String getUserName(String emailID)throws UserNotFoundException {
---        Optional<UserDetails >fetchedUser=taskRepository.findById(emailID);
---        if (fetchedUser.isEmpty()) {
---            throw new UserNotFoundException("user with the specified Id not found");
---        }
---        return fetchedUser.get().getUserName();
---    }
---    @Override
---    public List<UserDetails> getAllUser(String emailId) throws UserNotFoundException{
---        Optional<UserDetails >fetchedUser=taskRepository.findById(emailId);
---        if (fetchedUser.isEmpty()) {
---            throw new UserNotFoundException("user with the specified Id not found");
---        }
---        return taskRepository.findAll();
---    }
---
---    @Override
---    public String getUserRole(String emailId)throws UserNotFoundException {
---        if (taskRepository.findById(emailId).isEmpty()) {
---            throw new UserNotFoundException("user with the specified Id not found");
---        }
---        return taskRepository.findById(emailId).get().getRole();
---    }
---}
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_21-02-2024_12_19_[Changes]1/shelved.patch
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_21-02-2024_12_19_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_21-02-2024_12_19_[Changes]1/shelved.patch
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_21-02-2024_12_19_[Changes]1/shelved.patch	
--+++ /dev/null	
--@@ -1,14 +0,0 @@
---Index: userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/controller/UserController.java
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/controller/UserController.java b/userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/controller/UserController.java
---new file mode 100644
------ /dev/null	
---+++ b/userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/controller/UserController.java	
---@@ -0,0 +1,4 @@
---+package com.niit.project.userauthenticationservice.controller;
---+
---+public class UserController {
---+}
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_22-02-2024_17_02__Changes_1.xml
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_22-02-2024_17_02__Changes_1.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_22-02-2024_17_02__Changes_1.xml
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_22-02-2024_17_02__Changes_1.xml	
--+++ /dev/null	
--@@ -1,4 +0,0 @@
---<changelist name="Uncommitted_changes_before_Update_at_22-02-2024_17_02_[Changes]1" date="1708601558937" recycled="true" deleted="true">
---  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_22-02-2024_17_02_[Changes]1/shelved.patch" />
---  <option name="DESCRIPTION" value="Uncommitted changes before Update at 22-02-2024 17:02 [Changes]" />
---</changelist>
--\ No newline at end of file
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_16_26__Changes_1.xml
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_16_26__Changes_1.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_16_26__Changes_1.xml
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_16_26__Changes_1.xml	
--+++ /dev/null	
--@@ -1,4 +0,0 @@
---<changelist name="Uncommitted_changes_before_Update_at_23-02-2024_16_26_[Changes]1" date="1708685834225" recycled="true" deleted="true">
---  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_16_26_[Changes]1/shelved.patch" />
---  <option name="DESCRIPTION" value="Uncommitted changes before Update at 23-02-2024 16:26 [Changes]" />
---</changelist>
--\ No newline at end of file
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_22-02-2024_17_02_[Changes]1/shelved.patch
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_22-02-2024_17_02_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_22-02-2024_17_02_[Changes]1/shelved.patch
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_22-02-2024_17_02_[Changes]1/shelved.patch	
--+++ /dev/null	
--@@ -1,46 +0,0 @@
---Index: boardtaskservice/pom.xml
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n\t<modelVersion>4.0.0</modelVersion>\r\n\t<parent>\r\n\t\t<groupId>com.niit.project</groupId>\r\n\t\t<artifactId>kanbanboard</artifactId>\r\n\t\t<version>1.0-SNAPSHOT</version>\r\n\t\t<relativePath/> <!-- lookup parent from repository -->\r\n\t</parent>\r\n\t<groupId>com.niit.project</groupId>\r\n\t<artifactId>boardtaskservice</artifactId>\r\n\t<version>0.0.1-SNAPSHOT</version>\r\n\t<name>BoardTaskService</name>\r\n\t<description>Demo project for Spring Boot</description>\r\n\t<properties>\r\n\t\t<java.version>17</java.version>\r\n\t\t<spring-cloud.version>2023.0.0</spring-cloud.version>\r\n\t</properties>\r\n\t<dependencies>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-data-mongodb</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.cloud</groupId>\r\n\t\t\t<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>io.jsonwebtoken</groupId>\r\n\t\t\t<artifactId>jjwt</artifactId>\r\n\t\t\t<version>0.9.1</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.glassfish.jaxb</groupId>\r\n\t\t\t<artifactId>jaxb-runtime</artifactId>\r\n\t\t\t<version>2.3.1</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-test</artifactId>\r\n\t\t\t<scope>test</scope>\r\n\t\t</dependency>\r\n\t</dependencies>\r\n\t<dependencyManagement>\r\n\t\t<dependencies>\r\n\t\t\t<dependency>\r\n\t\t\t\t<groupId>org.springframework.cloud</groupId>\r\n\t\t\t\t<artifactId>spring-cloud-dependencies</artifactId>\r\n\t\t\t\t<version>${spring-cloud.version}</version>\r\n\t\t\t\t<type>pom</type>\r\n\t\t\t\t<scope>import</scope>\r\n\t\t\t</dependency>\r\n\t\t</dependencies>\r\n\t</dependencyManagement>\r\n\r\n\t<build>\r\n\t\t<plugins>\r\n\t\t\t<plugin>\r\n\t\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\r\n\t\t\t</plugin>\r\n\t\t</plugins>\r\n\t</build>\r\n\r\n</project>\r\n
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/boardtaskservice/pom.xml b/boardtaskservice/pom.xml
------ a/boardtaskservice/pom.xml	
---+++ b/boardtaskservice/pom.xml	
---@@ -15,7 +15,7 @@
--- 	<description>Demo project for Spring Boot</description>
--- 	<properties>
--- 		<java.version>17</java.version>
----		<spring-cloud.version>2023.0.0</spring-cloud.version>
---+		<spring-cloud.version>2021.0.4</spring-cloud.version>
--- 	</properties>
--- 	<dependencies>
--- 		<dependency>
---Index: boardtaskservice/src/test/java/com/niit/project/boardtaskservice/services/ITaskService.java
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/boardtaskservice/src/test/java/com/niit/project/boardtaskservice/services/ITaskService.java b/boardtaskservice/src/test/java/com/niit/project/boardtaskservice/services/ITaskService.java
---new file mode 100644
------ /dev/null	
---+++ b/boardtaskservice/src/test/java/com/niit/project/boardtaskservice/services/ITaskService.java	
---@@ -0,0 +1,17 @@
---+package com.niit.project.boardtaskservice.services;
---+
---+import java.util.List;
---+
---+public interface ITaskService {
---+    UserDetails registerUser (UserDetails userdetails)throws UserAlreadyExistsException;
---+    UserDetails saveTaskToUser(Task task, String userEmail)throws TaskAlreadyExistsException,UserAlreadyExistsException;
---+    UserDetails updateTaskToUser(Task task, String userEmail)throws TaskNotFoundException, UserNotFoundException;
---+
---+    UserDetails deleteTask(Task task, String UserEmailId)throws TaskNotFoundException;
---+    List<Task> getAllTaskFromUser(String UserEmailId)throws TaskNotFoundException,UserNotFoundException;
---+    Task getOneTaskById(Task task , String EmailId)throws TaskNotFoundException,UserNotFoundException;
---+
---+    String getUserName(UserDetails userdetails)throws UserNotFoundException;
---+    List<UserDetails> getAllUser(String emailId)throws UserNotFoundException;
---+    String getUserRole(String emailId)throws UserNotFoundException ;
---+}
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_21-02-2024_12_19__Changes_1.xml
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_21-02-2024_12_19__Changes_1.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_21-02-2024_12_19__Changes_1.xml
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_21-02-2024_12_19__Changes_1.xml	
--+++ /dev/null	
--@@ -1,4 +0,0 @@
---<changelist name="Uncommitted_changes_before_Update_at_21-02-2024_12_19_[Changes]1" date="1708498154679" recycled="true" deleted="true">
---  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_21-02-2024_12_19_[Changes]1/shelved.patch" />
---  <option name="DESCRIPTION" value="Uncommitted changes before Update at 21-02-2024 12:19 [Changes]" />
---</changelist>
--\ No newline at end of file
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_16_26_[Changes]1/shelved.patch
--===================================================================
--diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_16_26_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_16_26_[Changes]1/shelved.patch
--deleted file mode 100644
----- a/.idea/shelf/Uncommitted_changes_before_Update_at_23-02-2024_16_26_[Changes]1/shelved.patch	
--+++ /dev/null	
--@@ -1,138 +0,0 @@
---Index: apigateway/src/main/java/com/niit/project/apigateway/ApiGatewayApplication.java
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+>package com.niit.project.apigateway;\r\n\r\nimport org.springframework.boot.SpringApplication;\r\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\r\nimport org.springframework.context.annotation.Bean;\r\nimport org.springframework.context.annotation.Configuration;\r\n\r\n@SpringBootApplication\r\npublic class ApiGatewayApplication {\r\n\tpublic static void main(String[] args) {\r\n\t\tSpringApplication.run(ApiGatewayApplication.class, args);\r\n\t}\r\n\r\n\r\n\r\n}\r\n
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/apigateway/src/main/java/com/niit/project/apigateway/ApiGatewayApplication.java b/apigateway/src/main/java/com/niit/project/apigateway/ApiGatewayApplication.java
------ a/apigateway/src/main/java/com/niit/project/apigateway/ApiGatewayApplication.java	
---+++ b/apigateway/src/main/java/com/niit/project/apigateway/ApiGatewayApplication.java	
---@@ -6,6 +6,7 @@
--- import org.springframework.context.annotation.Configuration;
--- 
--- @SpringBootApplication
---+
--- public class ApiGatewayApplication {
--- 	public static void main(String[] args) {
--- 		SpringApplication.run(ApiGatewayApplication.class, args);
---Index: apigateway/pom.xml
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n\t<modelVersion>4.0.0</modelVersion>\r\n\t<parent>\r\n\t\t<groupId>com.niit.project</groupId>\r\n\t\t<artifactId>kanbanboard</artifactId>\r\n\t\t<version>1.0-SNAPSHOT</version>\r\n\t\t<relativePath/> <!-- lookup parent from repository -->\r\n\t</parent>\r\n\t<groupId>com.niit.project</groupId>\r\n\t<artifactId>apigateway</artifactId>\r\n\t<version>0.0.1-SNAPSHOT</version>\r\n\t<name>ApiGateway</name>\r\n\t<description>Demo project for Spring Boot</description>\r\n\t<properties>\r\n\t\t<java.version>17</java.version>\r\n\t\t<spring-cloud.version>2023.0.0</spring-cloud.version>\r\n\t</properties>\r\n\t<dependencies>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.cloud</groupId>\r\n\t\t\t<artifactId>spring-cloud-starter-gateway</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.cloud</groupId>\r\n\t\t\t<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>\r\n\t\t</dependency>\r\n\r\n\r\n\t</dependencies>\r\n\t<dependencyManagement>\r\n\t\t<dependencies>\r\n\t\t\t<dependency>\r\n\t\t\t\t<groupId>org.springframework.cloud</groupId>\r\n\t\t\t\t<artifactId>spring-cloud-dependencies</artifactId>\r\n\t\t\t\t<version>${spring-cloud.version}</version>\r\n\t\t\t\t<type>pom</type>\r\n\t\t\t\t<scope>import</scope>\r\n\t\t\t</dependency>\r\n\t\t</dependencies>\r\n\t</dependencyManagement>\r\n\r\n\t<build>\r\n\t\t<plugins>\r\n\t\t\t<plugin>\r\n\t\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\r\n\t\t\t</plugin>\r\n\t\t</plugins>\r\n\t</build>\r\n\r\n</project>\r\n
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/apigateway/pom.xml b/apigateway/pom.xml
------ a/apigateway/pom.xml	
---+++ b/apigateway/pom.xml	
---@@ -15,7 +15,7 @@
--- 	<description>Demo project for Spring Boot</description>
--- 	<properties>
--- 		<java.version>17</java.version>
----		<spring-cloud.version>2023.0.0</spring-cloud.version>
---+		<spring-cloud.version>2021.0.4</spring-cloud.version>
--- 	</properties>
--- 	<dependencies>
--- 		<dependency>
---Index: eurekaserver/pom.xml
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n\t<modelVersion>4.0.0</modelVersion>\r\n\t<parent>\r\n\t\t<groupId>com.niit.project</groupId>\r\n\t\t<artifactId>kanbanboard</artifactId>\r\n\t\t<version>1.0-SNAPSHOT</version>\r\n\t\t<relativePath/> <!-- lookup parent from repository -->\r\n\t</parent>\r\n\t<groupId>com.niit.project</groupId>\r\n\t<artifactId>eurekaserver</artifactId>\r\n\t<version>0.0.1-SNAPSHOT</version>\r\n\t<name>EurekaServer</name>\r\n\t<description>Demo project for Spring Boot</description>\r\n\t<properties>\r\n\t\t<java.version>17</java.version>\r\n\t\t<spring-cloud.version>2023.0.0</spring-cloud.version>\r\n\t</properties>\r\n\t<dependencies>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.cloud</groupId>\r\n\t\t\t<artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>\r\n\t\t</dependency>\r\n\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-test</artifactId>\r\n\t\t\t<scope>test</scope>\r\n\t\t</dependency>\r\n\t</dependencies>\r\n\t<dependencyManagement>\r\n\t\t<dependencies>\r\n\t\t\t<dependency>\r\n\t\t\t\t<groupId>org.springframework.cloud</groupId>\r\n\t\t\t\t<artifactId>spring-cloud-dependencies</artifactId>\r\n\t\t\t\t<version>${spring-cloud.version}</version>\r\n\t\t\t\t<type>pom</type>\r\n\t\t\t\t<scope>import</scope>\r\n\t\t\t</dependency>\r\n\t\t</dependencies>\r\n\t</dependencyManagement>\r\n\r\n\t<build>\r\n\t\t<plugins>\r\n\t\t\t<plugin>\r\n\t\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\r\n\t\t\t</plugin>\r\n\t\t</plugins>\r\n\t</build>\r\n\r\n</project>\r\n
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/eurekaserver/pom.xml b/eurekaserver/pom.xml
------ a/eurekaserver/pom.xml	
---+++ b/eurekaserver/pom.xml	
---@@ -15,7 +15,7 @@
--- 	<description>Demo project for Spring Boot</description>
--- 	<properties>
--- 		<java.version>17</java.version>
----		<spring-cloud.version>2023.0.0</spring-cloud.version>
---+		<spring-cloud.version>2021.0.4</spring-cloud.version>
--- 	</properties>
--- 	<dependencies>
--- 		<dependency>
---Index: boardtaskservice/src/main/java/com/niit/project/boardtaskservice/proxy/TaskProxy.java
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+>package com.niit.project.boardtaskservice.proxy;\r\n\r\n\r\nimport com.niit.project.boardtaskservice.domain.UserDetails;\r\nimport org.springframework.cloud.openfeign.FeignClient;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.RequestBody;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\n\r\n@FeignClient(name=\"userauthservice\",url=\"localhost:8081\")\r\npublic interface TaskProxy {\r\n    @RequestMapping(\"/api/v1/saveUser\")\r\n    public ResponseEntity<?> registerUser(@RequestBody UserDetails user);\r\n\r\n}\r\n
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/proxy/TaskProxy.java b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/proxy/TaskProxy.java
------ a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/proxy/TaskProxy.java	
---+++ b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/proxy/TaskProxy.java	
---@@ -7,7 +7,7 @@
--- import org.springframework.web.bind.annotation.RequestBody;
--- import org.springframework.web.bind.annotation.RequestMapping;
--- 
----@FeignClient(name="userauthservice",url="localhost:8081")
---+@FeignClient(name="user-auth-service",url="localhost:8081")
--- public interface TaskProxy {
---     @RequestMapping("/api/v1/saveUser")
---     public ResponseEntity<?> registerUser(@RequestBody UserDetails user);
---Index: apigateway/src/main/java/com/niit/project/apigateway/configuration/Config.java
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+>package com.niit.project.apigateway.configuration;\r\n\r\nimport org.springframework.context.annotation.Bean;\r\nimport org.springframework.context.annotation.Configuration;\r\nimport org.springframework.cloud.gateway.route.RouteLocator;\r\nimport org.springframework.cloud.gateway.route.builder.RouteLocatorBuilder;\r\n\r\n@Configuration\r\npublic class Config {\r\n    @Bean\r\n    public RouteLocator myRoutes(RouteLocatorBuilder builder){\r\n        return builder.routes().route(p -> p.path(\"/api/v1/**\").uri(\"lb://userauthservice\"))\r\n                .route(p -> p.path(\"/api/v2/**\",\"/api/v3/**\").uri(\"lb://boardtaskservice\"))\r\n                .build();\r\n    }\r\n}\r\n
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/apigateway/src/main/java/com/niit/project/apigateway/configuration/Config.java b/apigateway/src/main/java/com/niit/project/apigateway/configuration/Config.java
------ a/apigateway/src/main/java/com/niit/project/apigateway/configuration/Config.java	
---+++ b/apigateway/src/main/java/com/niit/project/apigateway/configuration/Config.java	
---@@ -6,6 +6,7 @@
--- import org.springframework.cloud.gateway.route.builder.RouteLocatorBuilder;
--- 
--- @Configuration
---+
--- public class Config {
---     @Bean
---     public RouteLocator myRoutes(RouteLocatorBuilder builder){
---Index: userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/UserAuthenticationServiceApplication.java
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+>package com.niit.project.userauthenticationservice;\r\n\r\nimport org.springframework.boot.SpringApplication;\r\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\r\n\r\n@SpringBootApplication\r\npublic class UserAuthenticationServiceApplication {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tSpringApplication.run(UserAuthenticationServiceApplication.class, args);\r\n\t}\r\n\r\n}\r\n
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/UserAuthenticationServiceApplication.java b/userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/UserAuthenticationServiceApplication.java
------ a/userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/UserAuthenticationServiceApplication.java	
---+++ b/userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/UserAuthenticationServiceApplication.java	
---@@ -2,8 +2,10 @@
--- 
--- import org.springframework.boot.SpringApplication;
--- import org.springframework.boot.autoconfigure.SpringBootApplication;
---+import org.springframework.cloud.netflix.eureka.EnableEurekaClient;
--- 
--- @SpringBootApplication
---+@EnableEurekaClient
--- public class UserAuthenticationServiceApplication {
--- 
--- 	public static void main(String[] args) {
---Index: boardtaskservice/src/main/java/com/niit/project/boardtaskservice/BoardTaskServiceApplication.java
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+>package com.niit.project.boardtaskservice;\r\n\r\nimport com.niit.project.boardtaskservice.filter.JWTFilter;\r\nimport org.springframework.boot.SpringApplication;\r\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\r\nimport org.springframework.boot.web.servlet.FilterRegistrationBean;\r\nimport org.springframework.cloud.openfeign.EnableFeignClients;\r\nimport org.springframework.context.annotation.Bean;\r\n\r\n@SpringBootApplication\r\n@EnableFeignClients\r\npublic class BoardTaskServiceApplication {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tSpringApplication.run(BoardTaskServiceApplication.class, args);\r\n\t}\r\n\t@Bean\r\n\tpublic FilterRegistrationBean jwtFilterBean(){\r\n\t\tFilterRegistrationBean filterRegistrationBean = new FilterRegistrationBean();\r\n\t\tfilterRegistrationBean.setFilter(new JWTFilter());\r\n\t\tfilterRegistrationBean.addUrlPatterns(\"/api/v2/*\");\r\n\t\treturn filterRegistrationBean;\r\n\t}\r\n\r\n}\r\n
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
---diff --git a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/BoardTaskServiceApplication.java b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/BoardTaskServiceApplication.java
------ a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/BoardTaskServiceApplication.java	
---+++ b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/BoardTaskServiceApplication.java	
---@@ -4,11 +4,13 @@
--- import org.springframework.boot.SpringApplication;
--- import org.springframework.boot.autoconfigure.SpringBootApplication;
--- import org.springframework.boot.web.servlet.FilterRegistrationBean;
---+import org.springframework.cloud.netflix.eureka.EnableEurekaClient;
--- import org.springframework.cloud.openfeign.EnableFeignClients;
--- import org.springframework.context.annotation.Bean;
--- 
--- @SpringBootApplication
--- @EnableFeignClients
---+@EnableEurekaClient
--- public class BoardTaskServiceApplication {
--- 
--- 	public static void main(String[] args) {
--Index: boardtaskservice/src/main/resources/application.properties
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>\r\nserver.port = 8087\r\nspring.data.mongodb.uri=mongodb://localhost:27017\r\nspring.data.mongodb.database=KanbanBoard_db\r\neureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka\r\neureka.client.fetchRegistry=true\r\neureka.client.registerWithEureka=true\r\n#eureka.instance.hostname=localhost\r\nspring.application.name=boardtaskservice
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/boardtaskservice/src/main/resources/application.properties b/boardtaskservice/src/main/resources/application.properties
----- a/boardtaskservice/src/main/resources/application.properties	
--+++ b/boardtaskservice/src/main/resources/application.properties	
--@@ -6,4 +6,5 @@
-- eureka.client.fetchRegistry=true
-- eureka.client.registerWithEureka=true
-- #eureka.instance.hostname=localhost
---spring.application.name=boardtaskservice
--\ No newline at end of file
--+spring.application.name=boardtaskservice
--+
--Index: boardtaskservice/src/main/java/com/niit/project/boardtaskservice/controller/UserController.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.niit.project.boardtaskservice.controller;\r\n\r\nimport com.niit.project.boardtaskservice.services.IUserService;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.GetMapping;\r\nimport org.springframework.web.bind.annotation.PathVariable;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\nimport org.springframework.web.bind.annotation.RestController;\r\n\r\n@RestController\r\n@RequestMapping(\"/api/v3\")\r\npublic class UserController {\r\n    private final IUserService userService;\r\n\r\n    @Autowired\r\n    public UserController(IUserService userService) {\r\n        this.userService = userService;\r\n    }\r\n    @GetMapping(\"/getOneTask/{taskId}\")\r\n    public ResponseEntity<?> getOneTaskById(@PathVariable int taskId, HttpServletRequest request) {\r\n        ResponseEntity responseEntity;\r\n        try {\r\n            String userId = getCustomerIdFromClaims(request);\r\n            responseEntity = new ResponseEntity<>(userService.getOneTaskById(taskId,userId), HttpStatus.ACCEPTED);\r\n        } catch (Exception e) {\r\n            responseEntity = new ResponseEntity<>(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);\r\n        }return responseEntity;\r\n    }\r\n    @GetMapping(\"/getAllTask\")\r\n    public ResponseEntity<?> getAllTaskFromUser(HttpServletRequest request) {\r\n        ResponseEntity responseEntity;\r\n        try {\r\n            String userId = getCustomerIdFromClaims(request);\r\n            responseEntity = new ResponseEntity<>(userService.getAllTaskFromUser(userId), HttpStatus.ACCEPTED);\r\n        } catch (Exception e) {\r\n            responseEntity = new ResponseEntity<>(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);\r\n        }return responseEntity;\r\n    }\r\n\r\n\r\n\r\n    private String getCustomerIdFromClaims(HttpServletRequest request) {\r\n        String userId=request.getAttribute(\"emailId\").toString();\r\n        return userId;\r\n    }\r\n\r\n}\r\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/controller/UserController.java b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/controller/UserController.java
----- a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/controller/UserController.java	
--+++ b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/controller/UserController.java	
--@@ -5,12 +5,10 @@
-- import org.springframework.beans.factory.annotation.Autowired;
-- import org.springframework.http.HttpStatus;
-- import org.springframework.http.ResponseEntity;
---import org.springframework.web.bind.annotation.GetMapping;
---import org.springframework.web.bind.annotation.PathVariable;
---import org.springframework.web.bind.annotation.RequestMapping;
---import org.springframework.web.bind.annotation.RestController;
--+import org.springframework.web.bind.annotation.*;
-- 
-- @RestController
--+
-- @RequestMapping("/api/v3")
-- public class UserController {
--     private final IUserService userService;
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_28-02-2024_00_26_[Changes]1/shelved.patch
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_28-02-2024_00_26_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_28-02-2024_00_26_[Changes]1/shelved.patch
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_28-02-2024_00_26_[Changes]1/shelved.patch	
-+++ /dev/null	
-@@ -1,174 +0,0 @@
--Index: boardtaskservice/src/main/java/com/niit/project/boardtaskservice/domain/UserDetails.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.niit.project.boardtaskservice.domain;\r\n\r\nimport org.springframework.data.annotation.Id;\r\nimport org.springframework.data.annotation.Transient;\r\nimport org.springframework.data.mongodb.core.mapping.Document;\r\n\r\nimport java.util.List;\r\n\r\n@Document\r\npublic class UserDetails {\r\n    @Id\r\n    private String emailId;\r\n    private String userName;\r\n    @Transient\r\n    private String password;\r\n    private static String role=\"user\";\r\n    List<Task> taskList;\r\n\r\n    public String getUserName() {\r\n        return userName;\r\n    }\r\n\r\n    public void setUserName(String userName) {\r\n        this.userName = userName;\r\n    }\r\n\r\n    public UserDetails() {\r\n    }\r\n\r\n    public UserDetails(String emailId, String userName, String password, String role, List<Task> taskList) {\r\n        this.emailId = emailId;\r\n        this.userName = userName;\r\n        this.password = password;\r\n        this.role = role;\r\n        this.taskList = taskList;\r\n    }\r\n\r\n    public String getEmailId() {\r\n        return emailId;\r\n    }\r\n\r\n    public void setEmailId(String emailId) {\r\n        this.emailId = emailId;\r\n    }\r\n\r\n    public String getPassword() {\r\n        return password;\r\n    }\r\n\r\n    public void setPassword(String password) {\r\n        this.password = password;\r\n    }\r\n\r\n    public String getRole() {\r\n        return role;\r\n    }\r\n\r\n    public void setRole(String role) {\r\n        this.role = role;\r\n    }\r\n\r\n    public List<Task> getTaskList() {\r\n        return taskList;\r\n    }\r\n\r\n    public void setTaskList(List<Task> taskList) {\r\n        this.taskList = taskList;\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"UserDetails{\" +\r\n                \"emailId='\" + emailId + '\\'' +\r\n                \", userName='\" + userName + '\\'' +\r\n                \", password='\" + password + '\\'' +\r\n                \", role='\" + role + '\\'' +\r\n                \", taskList=\" + taskList +\r\n                '}';\r\n    }\r\n}
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/domain/UserDetails.java b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/domain/UserDetails.java
----- a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/domain/UserDetails.java	
--+++ b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/domain/UserDetails.java	
--@@ -13,7 +13,7 @@
--     private String userName;
--     @Transient
--     private String password;
---    private static String role="user";
--+    private  String role="user";
--     List<Task> taskList;
-- 
--     public String getUserName() {
--Index: boardtaskservice/src/main/java/com/niit/project/boardtaskservice/controller/UserController.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.niit.project.boardtaskservice.controller;\r\n\r\nimport com.niit.project.boardtaskservice.services.IUserService;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.GetMapping;\r\nimport org.springframework.web.bind.annotation.PathVariable;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\nimport org.springframework.web.bind.annotation.RestController;\r\n\r\n@RestController\r\n@RequestMapping(\"/api/v3\")\r\npublic class UserController {\r\n    private final IUserService userService;\r\n    @Autowired\r\n    public UserController(IUserService userService) {\r\n        this.userService = userService;\r\n    }\r\n    @GetMapping(\"/getOneTask/{taskId}\")\r\n    public ResponseEntity<?> getOneTaskById(@PathVariable int taskId, HttpServletRequest request) {\r\n        ResponseEntity responseEntity;\r\n        try {\r\n            String userId = getCustomerIdFromClaims(request);\r\n            responseEntity = new ResponseEntity<>(userService.getOneTaskById(taskId,userId), HttpStatus.ACCEPTED);\r\n        } catch (Exception e) {\r\n            responseEntity = new ResponseEntity<>(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);\r\n        }return responseEntity;\r\n    }\r\n    @GetMapping(\"/getAllTask\")\r\n    public ResponseEntity<?> getAllTaskFromUser(HttpServletRequest request) {\r\n        ResponseEntity responseEntity;\r\n        try {\r\n            String userId = getCustomerIdFromClaims(request);\r\n            responseEntity = new ResponseEntity<>(userService.getAllTaskFromUser(userId), HttpStatus.ACCEPTED);\r\n        } catch (Exception e) {\r\n            responseEntity = new ResponseEntity<>(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);\r\n        }return responseEntity;\r\n    }\r\n\r\n\r\n\r\n    private String getCustomerIdFromClaims(HttpServletRequest request) {\r\n        String userId=request.getAttribute(\"emailId\").toString();\r\n        return userId;\r\n    }\r\n\r\n}\r\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/controller/UserController.java b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/controller/UserController.java
----- a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/controller/UserController.java	
--+++ b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/controller/UserController.java	
--@@ -14,6 +14,7 @@
-- @RequestMapping("/api/v3")
-- public class UserController {
--     private final IUserService userService;
--+
--     @Autowired
--     public UserController(IUserService userService) {
--         this.userService = userService;
--Index: boardtaskservice/src/main/java/com/niit/project/boardtaskservice/controller/AdminController.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.niit.project.boardtaskservice.controller;\r\n\r\nimport com.niit.project.boardtaskservice.domain.Task;\r\nimport com.niit.project.boardtaskservice.domain.UserDetails;\r\nimport com.niit.project.boardtaskservice.exceptions.TaskNotFoundException;\r\nimport com.niit.project.boardtaskservice.exceptions.UserAlreadyExistsException;\r\nimport com.niit.project.boardtaskservice.exceptions.UserNotFoundException;\r\nimport com.niit.project.boardtaskservice.services.IAdminService;\r\nimport com.niit.project.boardtaskservice.services.ITaskService;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.*;\r\n\r\nimport java.util.List;\r\n\r\n@RestController\r\n@RequestMapping(\"/api/v2\")\r\npublic class AdminController {\r\n    private final IAdminService adminService;\r\n    private final ITaskService taskService;\r\n\r\n\r\n    @Autowired\r\n    public AdminController(IAdminService adminService, ITaskService taskService) {\r\n        this.adminService = adminService;\r\n        this.taskService = taskService;\r\n    }\r\n\r\n    @PostMapping(\"/saveUser\")\r\n    public ResponseEntity<?> registerUser(@RequestBody UserDetails userDetails) {\r\n        ResponseEntity responseEntity;\r\n        try {\r\n            UserDetails saveduser = adminService.registerUser(userDetails);\r\n            responseEntity = new ResponseEntity<>(saveduser, HttpStatus.ACCEPTED);\r\n        } catch (UserAlreadyExistsException exception) {\r\n            responseEntity = new ResponseEntity<>(exception.getMessage(), HttpStatus.CONFLICT);\r\n        }\r\n        return responseEntity;\r\n    }\r\n    @PutMapping(\"/updateTask\")\r\n    public ResponseEntity<?> updateTaskToUser(@RequestBody Task task, HttpServletRequest request) {\r\n        ResponseEntity responseEntity;\r\n        try {\r\n            String userId = getCustomerIdFromClaims(request);\r\n            responseEntity = new ResponseEntity<>(adminService.updateTaskToUser(task, userId), HttpStatus.FOUND);\r\n        } catch (TaskNotFoundException exception) {\r\n            responseEntity = new ResponseEntity<>(exception.getMessage(), HttpStatus.CONFLICT);\r\n        }\r\n        return responseEntity;\r\n    }\r\n    @DeleteMapping(\"/deleteTask\")\r\n    public ResponseEntity<?> deleteTaskToUser(@RequestBody Task task, HttpServletRequest request) {\r\n        ResponseEntity responseEntity;\r\n        try {\r\n            String userId = getCustomerIdFromClaims(request);\r\n            responseEntity = new ResponseEntity<>(adminService.deleteTask(task, userId), HttpStatus.OK);\r\n        } catch (TaskNotFoundException exception) {\r\n            responseEntity = new ResponseEntity<>(exception.getMessage(), HttpStatus.CONFLICT);\r\n        }\r\n        return responseEntity;\r\n    }\r\n    @GetMapping(\"/userName\")\r\n    public ResponseEntity<?> getUserName(HttpServletRequest request) {\r\n        ResponseEntity responseEntity;\r\n        try {\r\n            String userId = getCustomerIdFromClaims(request);\r\n            String userName = adminService.getUserName(userId);\r\n            responseEntity = new ResponseEntity<>(userName, HttpStatus.FOUND);\r\n        } catch (Exception e) {\r\n            responseEntity = new ResponseEntity<>(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);\r\n        }\r\n        return responseEntity;\r\n    }\r\n    @GetMapping(\"/allUsers\")\r\n    public ResponseEntity<?> getAllUser(HttpServletRequest request) {\r\n        ResponseEntity responseEntity;\r\n        try {\r\n            String userId = getCustomerIdFromClaims(request);\r\n            List<UserDetails> users = adminService.getAllUser(userId);\r\n            responseEntity = new ResponseEntity<>(users, HttpStatus.FOUND);\r\n        } catch (Exception e) {\r\n            responseEntity = new ResponseEntity<>(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);\r\n        }\r\n        return responseEntity;\r\n    }\r\n    @GetMapping(\"/userRole\")\r\n    public ResponseEntity<?> getUserRole(HttpServletRequest request) {\r\n        ResponseEntity responseEntity;\r\n        try {\r\n            String userId = getCustomerIdFromClaims(request);\r\n            String userRole = adminService.getUserRole(userId);\r\n            responseEntity = new ResponseEntity<>(userRole, HttpStatus.FOUND);\r\n        } catch (Exception e) {\r\n            responseEntity = new ResponseEntity<>(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);\r\n        }\r\n        return responseEntity;\r\n    }\r\n\r\n    @PostMapping (\"/saveTaskToUser\")\r\n    public ResponseEntity<?> saveTaskToUser(@RequestBody Task task,HttpServletRequest request){\r\n        ResponseEntity responseEntity;\r\n        try{\r\n            String userId = getCustomerIdFromClaims(request);\r\n            responseEntity=new ResponseEntity<>(taskService.saveTaskToUser(task,userId),HttpStatus.FOUND);\r\n        }\r\n        catch(TaskNotFoundException exception){\r\n            responseEntity=new ResponseEntity<>(exception.getMessage(),HttpStatus.CONFLICT);\r\n        }\r\n        return responseEntity;\r\n    }\r\n    @DeleteMapping(\"/deleteUser\")\r\n    public ResponseEntity<?> deleteUser(HttpServletRequest request) {\r\n        ResponseEntity responseEntity;\r\n        try {\r\n            String userId = getCustomerIdFromClaims(request);\r\n            responseEntity = new ResponseEntity<>(taskService.deleteUser(userId), HttpStatus.OK);\r\n        } catch (UserNotFoundException exception) {\r\n            responseEntity = new ResponseEntity<>(exception.getMessage(), HttpStatus.CONFLICT);\r\n        }\r\n        return responseEntity;\r\n    }\r\n    private String getCustomerIdFromClaims(HttpServletRequest request) {\r\n        String userId=request.getAttribute(\"emailId\").toString();\r\n        return userId;\r\n    }\r\n}\r\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/controller/AdminController.java b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/controller/AdminController.java
----- a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/controller/AdminController.java	
--+++ b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/controller/AdminController.java	
--@@ -103,7 +103,7 @@
--         ResponseEntity responseEntity;
--         try{
--             String userId = getCustomerIdFromClaims(request);
---            responseEntity=new ResponseEntity<>(taskService.saveTaskToUser(task,userId),HttpStatus.FOUND);
--+            responseEntity=new ResponseEntity<>(adminService.saveTaskToUser(task,userId),HttpStatus.FOUND);
--         }
--         catch(TaskNotFoundException exception){
--             responseEntity=new ResponseEntity<>(exception.getMessage(),HttpStatus.CONFLICT);
--@@ -115,7 +115,7 @@
--         ResponseEntity responseEntity;
--         try {
--             String userId = getCustomerIdFromClaims(request);
---            responseEntity = new ResponseEntity<>(taskService.deleteUser(userId), HttpStatus.OK);
--+            responseEntity = new ResponseEntity<>(adminService.deleteUser(userId), HttpStatus.OK);
--         } catch (UserNotFoundException exception) {
--             responseEntity = new ResponseEntity<>(exception.getMessage(), HttpStatus.CONFLICT);
--         }
--Index: boardtaskservice/src/main/java/com/niit/project/boardtaskservice/BoardTaskServiceApplication.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.niit.project.boardtaskservice;\r\n\r\nimport com.niit.project.boardtaskservice.filter.JWTFilter;\r\nimport org.springframework.boot.SpringApplication;\r\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\r\nimport org.springframework.boot.web.servlet.FilterRegistrationBean;\r\n\r\nimport org.springframework.cloud.client.discovery.EnableDiscoveryClient;\r\nimport org.springframework.cloud.openfeign.EnableFeignClients;\r\nimport org.springframework.context.annotation.Bean;\r\n\r\n@SpringBootApplication\r\n@EnableFeignClients\r\n@EnableDiscoveryClient\r\n\r\npublic class BoardTaskServiceApplication {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tSpringApplication.run(BoardTaskServiceApplication.class, args);\r\n\t}\r\n\t@Bean\r\n\tpublic FilterRegistrationBean jwtFilterBean(){\r\n\t\tFilterRegistrationBean filterRegistrationBean = new FilterRegistrationBean();\r\n\r\n\t\tfilterRegistrationBean.addUrlPatterns(\"/api/v2/*\");\r\n\t\tfilterRegistrationBean.setFilter(new JWTFilter());\r\n\t\treturn filterRegistrationBean;\r\n\t}\r\n\r\n}\r\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/BoardTaskServiceApplication.java b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/BoardTaskServiceApplication.java
----- a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/BoardTaskServiceApplication.java	
--+++ b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/BoardTaskServiceApplication.java	
--@@ -22,7 +22,7 @@
-- 	public FilterRegistrationBean jwtFilterBean(){
-- 		FilterRegistrationBean filterRegistrationBean = new FilterRegistrationBean();
-- 
---		filterRegistrationBean.addUrlPatterns("/api/v2/*");
--+		filterRegistrationBean.addUrlPatterns("/api/v2/*","/api/v3/*");
-- 		filterRegistrationBean.setFilter(new JWTFilter());
-- 		return filterRegistrationBean;
-- 	}
--Index: apigateway/src/main/java/com/niit/project/apigateway/configuration/Config.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.niit.project.apigateway.configuration;\r\n\r\nimport org.springframework.context.annotation.Bean;\r\nimport org.springframework.context.annotation.Configuration;\r\nimport org.springframework.cloud.gateway.route.RouteLocator;\r\nimport org.springframework.cloud.gateway.route.builder.RouteLocatorBuilder;\r\n\r\n@Configuration\r\n\r\npublic class Config {\r\n    @Bean\r\n    public RouteLocator myRoutes(RouteLocatorBuilder routeLocatorBuilder) {\r\n        return routeLocatorBuilder.routes()\r\n                .route(p->p.path(\"/api/v1/*\").uri(\"lb://userauthentication\"))\r\n                .route(p->p.path(\"/api/v2/**\", \"/api/v3/*\").uri(\"lb://boardtaskservice\"))\r\n                .build();\r\n    }\r\n}\r\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/apigateway/src/main/java/com/niit/project/apigateway/configuration/Config.java b/apigateway/src/main/java/com/niit/project/apigateway/configuration/Config.java
----- a/apigateway/src/main/java/com/niit/project/apigateway/configuration/Config.java	
--+++ b/apigateway/src/main/java/com/niit/project/apigateway/configuration/Config.java	
--@@ -12,7 +12,7 @@
--     public RouteLocator myRoutes(RouteLocatorBuilder routeLocatorBuilder) {
--         return routeLocatorBuilder.routes()
--                 .route(p->p.path("/api/v1/*").uri("lb://userauthentication"))
---                .route(p->p.path("/api/v2/**", "/api/v3/*").uri("lb://boardtaskservice"))
--+                .route(p->p.path("/api/v2/**", "/api/v3/**").uri("lb://boardtaskservice"))
--                 .build();
--     }
-- }
--Index: boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/UserServiceImpl.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.niit.project.boardtaskservice.services;\r\n\r\nimport com.niit.project.boardtaskservice.domain.Task;\r\nimport com.niit.project.boardtaskservice.domain.UserDetails;\r\nimport com.niit.project.boardtaskservice.exceptions.TaskNotFoundException;\r\nimport com.niit.project.boardtaskservice.exceptions.UserNotFoundException;\r\nimport com.niit.project.boardtaskservice.repository.ITaskRepository;\r\n\r\nimport java.util.List;\r\nimport java.util.Optional;\r\n\r\npublic class UserServiceImpl implements IUserService {\r\n    private final ITaskRepository taskRepository;\r\n\r\n    public UserServiceImpl(ITaskRepository taskRepository) {\r\n        this.taskRepository = taskRepository;\r\n    }\r\n\r\n    @Override\r\n    public List<Task> getAllTaskFromUser(String emailId)throws TaskNotFoundException, UserNotFoundException {\r\n        Optional<UserDetails> userOptional=taskRepository.findById(emailId);\r\n        if(userOptional.isPresent()){\r\n            UserDetails fetchedUser=userOptional.get();\r\n            List<Task> taskList=fetchedUser.getTaskList();\r\n            if(taskList==null || taskList.isEmpty() ) {\r\n                throw new TaskNotFoundException(\"TaskList with Specified Id is not Found  \");\r\n            }\r\n            else{\r\n                return taskList;\r\n\r\n            }\r\n        }\r\n        else {\r\n            throw new UserNotFoundException(\"user with the specified Id not found\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public Task getOneTaskById(int taskId, String emailId) throws TaskNotFoundException,UserNotFoundException{\r\n        Optional<UserDetails >userOptional=taskRepository.findById(emailId);\r\n        if (userOptional.isPresent()) {\r\n            UserDetails fetchedUser=userOptional.get();\r\n            List<Task> taskList=fetchedUser.getTaskList();\r\n            if(taskList==null || taskList.isEmpty() ) {\r\n                throw new TaskNotFoundException(\"TaskList with Specified Id is not Found  \");\r\n            }\r\n            else{\r\n                for(Task onetask:taskList){\r\n                    if(onetask.getTaskId()==taskId){\r\n                        return onetask;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        throw new UserNotFoundException(\"user with the specified Id not found\");\r\n    }\r\n}\r\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/UserServiceImpl.java b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/UserServiceImpl.java
----- a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/UserServiceImpl.java	
--+++ b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/UserServiceImpl.java	
--@@ -5,13 +5,15 @@
-- import com.niit.project.boardtaskservice.exceptions.TaskNotFoundException;
-- import com.niit.project.boardtaskservice.exceptions.UserNotFoundException;
-- import com.niit.project.boardtaskservice.repository.ITaskRepository;
--+import org.springframework.beans.factory.annotation.Autowired;
--+import org.springframework.stereotype.Service;
-- 
-- import java.util.List;
-- import java.util.Optional;
---
--+@Service
-- public class UserServiceImpl implements IUserService {
--     private final ITaskRepository taskRepository;
---
--+@Autowired
--     public UserServiceImpl(ITaskRepository taskRepository) {
--         this.taskRepository = taskRepository;
--     }
--Index: userauthenticationservice/src/main/resources/application.properties
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>server.port = 8081\r\nspring.datasource.url = jdbc:mysql://localhost:3306/kanbanBoardTask?createDatabaseIfNotExist=true\r\nspring.datasource.username = root\r\nspring.datasource.password = 27a05b2000A@K\r\nspring.jpa.hibernate.ddl-auto = update\r\nspring.jpa.show-sql = true\r\neureka.client.serviceUrl.defaultZone = http://localhost:8761/eureka\r\neureka.client.fetch-registry = true\r\neureka.client.register-with-eureka = true\r\nspring.application.name = userauthentication\r\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/userauthenticationservice/src/main/resources/application.properties b/userauthenticationservice/src/main/resources/application.properties
----- a/userauthenticationservice/src/main/resources/application.properties	
--+++ b/userauthenticationservice/src/main/resources/application.properties	
--@@ -1,7 +1,7 @@
-- server.port = 8081
-- spring.datasource.url = jdbc:mysql://localhost:3306/kanbanBoardTask?createDatabaseIfNotExist=true
-- spring.datasource.username = root
---spring.datasource.password = 27a05b2000A@K
--+spring.datasource.password = 124751
-- spring.jpa.hibernate.ddl-auto = update
-- spring.jpa.show-sql = true
-- eureka.client.serviceUrl.defaultZone = http://localhost:8761/eureka
--Index: boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/AdminServiceImpl.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.niit.project.boardtaskservice.services;\r\n\r\nimport com.niit.project.boardtaskservice.domain.Task;\r\nimport com.niit.project.boardtaskservice.domain.UserDetails;\r\nimport com.niit.project.boardtaskservice.exceptions.TaskAlreadyExistsException;\r\nimport com.niit.project.boardtaskservice.exceptions.TaskNotFoundException;\r\nimport com.niit.project.boardtaskservice.exceptions.UserAlreadyExistsException;\r\nimport com.niit.project.boardtaskservice.exceptions.UserNotFoundException;\r\nimport com.niit.project.boardtaskservice.proxy.TaskProxy;\r\nimport com.niit.project.boardtaskservice.repository.ITaskRepository;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\n\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\nimport java.util.Optional;\r\n\r\npublic class AdminServiceImpl implements IAdminService{\r\n    private final ITaskRepository taskRepository;\r\n    private final TaskProxy taskProxy;\r\n    @Autowired\r\n    public AdminServiceImpl(ITaskRepository taskRepository, TaskProxy taskProxy) {\r\n        this.taskRepository = taskRepository;\r\n        this.taskProxy = taskProxy;\r\n    }\r\n    @Override\r\n    public UserDetails registerUser(UserDetails userdetails)throws UserAlreadyExistsException {\r\n        if(taskRepository.findById(userdetails.getEmailId()).isPresent()){\r\n            throw new UserAlreadyExistsException(\"UserAlreadyExists\");\r\n        }\r\n        else{\r\n            UserDetails insertedUser=taskRepository.save(userdetails);\r\n            taskProxy.registerUser(insertedUser);\r\n            return insertedUser;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public UserDetails saveTaskToUser(Task task, String userEmail) throws TaskAlreadyExistsException, UserAlreadyExistsException {\r\n        Optional<UserDetails> userOptional = taskRepository.findById(userEmail);\r\n        if (userOptional.isPresent()) {\r\n            UserDetails fetchedUser = userOptional.get();\r\n            List<Task> taskList = fetchedUser.getTaskList();\r\n            if (taskList == null) {\r\n                fetchedUser.setTaskList(Arrays.asList(task));\r\n            } else {\r\n                boolean taskPresent = false;\r\n                for (Task searchTask : taskList) {\r\n                    if (searchTask.getTaskName().equals(task.getTaskName())) {\r\n                        taskPresent = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (taskPresent) {\r\n                    throw new TaskAlreadyExistsException(\"Task already present for the given email ID\");\r\n                } else {\r\n                    taskList.add(task);\r\n                    fetchedUser.setTaskList(taskList);\r\n                }\r\n            }\r\n            return taskRepository.save(fetchedUser);\r\n        } else {\r\n            throw new UserAlreadyExistsException(\"User does not exist for the given email ID\");\r\n        }\r\n    }\r\n\r\n\r\n    @Override\r\n    public UserDetails updateTaskToUser(Task task, String userEmail) throws TaskNotFoundException,UserNotFoundException {\r\n        Optional<UserDetails> userOptional=taskRepository.findById(userEmail);\r\n        if(userOptional.isPresent()){\r\n            UserDetails fetchedUser=userOptional.get();\r\n            List<Task> taskList=fetchedUser.getTaskList();\r\n            if(taskList==null || taskList.isEmpty() ) {\r\n                throw new TaskNotFoundException(\"TaskList with Specified Id is not Found  \");\r\n            }\r\n            else{\r\n                boolean taskPresent=false;\r\n                for(Task updateTask:taskList) {\r\n                    if (updateTask.getTaskId() == task.getTaskId()) {\r\n                        int index = 0;\r\n                        updateTask.setTaskName(task.getTaskName());\r\n                        updateTask.setTaskDescription(task.getTaskDescription());\r\n                        updateTask.setAssignTo(task.getAssignTo());\r\n                        updateTask.setDueDate(task.getDueDate());\r\n                        updateTask.setStatus(task.getStatus());\r\n                        index = taskList.indexOf(updateTask);\r\n                        fetchedUser.setTaskList(taskList);\r\n                        taskPresent = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if(taskPresent==false){\r\n                    throw new TaskNotFoundException(\"Task with Specified Id is not Found \");\r\n\r\n                }\r\n            }\r\n            return taskRepository.save(fetchedUser);\r\n        }\r\n        else {\r\n            throw new UserNotFoundException(\"user with the specified Id not found\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public UserDetails deleteUser(String emailId) throws UserNotFoundException {\r\n        Optional<UserDetails> userOptional = taskRepository.findById(emailId);\r\n        if (userOptional.isPresent()) {\r\n            UserDetails userToDelete = userOptional.get();\r\n            taskRepository.delete(userToDelete);\r\n            return userToDelete;\r\n        } else {\r\n            throw new UserNotFoundException(\"User with the specified ID not found\");\r\n        }\r\n    }\r\n    @Override\r\n    public UserDetails deleteTask(Task task, String emailId) throws TaskNotFoundException{\r\n        Optional<UserDetails> userOptional=taskRepository.findById(emailId);\r\n        if(userOptional.isPresent()){\r\n            UserDetails fetchedUser=userOptional.get();\r\n            List<Task> taskList=fetchedUser.getTaskList();\r\n            if(taskList==null || taskList.isEmpty() ) {\r\n                throw new TaskNotFoundException(\"TaskList with Specified Id is not Found\");\r\n            }\r\n            else{\r\n                boolean taskPresent=false;\r\n                for(Task existingTask:taskList) {\r\n                    if (existingTask.getTaskId() == task.getTaskId()) {\r\n                        taskList.remove(existingTask);\r\n                        fetchedUser.setTaskList(taskList);\r\n                        taskPresent = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if(taskPresent==false){\r\n                    throw new TaskNotFoundException(\"Task with Specified Id is not Found \");\r\n\r\n                }\r\n            }\r\n            return taskRepository.save(fetchedUser);\r\n        }\r\n        else {\r\n            throw new UserNotFoundException(\"user with the specified Id not found\");\r\n        }\r\n    }\r\n    @Override\r\n    public String getUserName(String emailID)throws UserNotFoundException {\r\n        Optional<UserDetails >fetchedUser=taskRepository.findById(emailID);\r\n        if (fetchedUser.isEmpty()) {\r\n            throw new UserNotFoundException(\"user with the specified Id not found\");\r\n        }\r\n        return fetchedUser.get().getUserName();\r\n    }\r\n    @Override\r\n    public List<UserDetails> getAllUser(String emailId) throws UserNotFoundException{\r\n        Optional<UserDetails >fetchedUser=taskRepository.findById(emailId);\r\n        if (fetchedUser.isEmpty()) {\r\n            throw new UserNotFoundException(\"user with the specified Id not found\");\r\n        }\r\n        return taskRepository.findAll();\r\n    }\r\n\r\n    @Override\r\n    public String getUserRole(String emailId)throws UserNotFoundException {\r\n        if (taskRepository.findById(emailId).isEmpty()) {\r\n            throw new UserNotFoundException(\"user with the specified Id not found\");\r\n        }\r\n        return taskRepository.findById(emailId).get().getRole();\r\n    }\r\n\r\n\r\n}\r\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/AdminServiceImpl.java b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/AdminServiceImpl.java
----- a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/AdminServiceImpl.java	
--+++ b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/AdminServiceImpl.java	
--@@ -9,11 +9,12 @@
-- import com.niit.project.boardtaskservice.proxy.TaskProxy;
-- import com.niit.project.boardtaskservice.repository.ITaskRepository;
-- import org.springframework.beans.factory.annotation.Autowired;
--+import org.springframework.stereotype.Service;
-- 
-- import java.util.Arrays;
-- import java.util.List;
-- import java.util.Optional;
---
--+@Service
-- public class AdminServiceImpl implements IAdminService{
--     private final ITaskRepository taskRepository;
--     private final TaskProxy taskProxy;
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_27-02-2024_22_26_[Changes]1/shelved.patch
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_27-02-2024_22_26_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_27-02-2024_22_26_[Changes]1/shelved.patch
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_27-02-2024_22_26_[Changes]1/shelved.patch	
-+++ /dev/null	
-@@ -1,375 +0,0 @@
--Index: boardtaskservice/src/main/java/com/niit/project/boardtaskservice/filter/JWTFilter.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.niit.project.boardtaskservice.filter;\r\n\r\nimport com.niit.project.boardtaskservice.domain.UserDetails;\r\nimport io.jsonwebtoken.Jwts;\r\nimport jakarta.servlet.*;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport jakarta.servlet.http.HttpServletResponse;\r\nimport org.springframework.web.filter.GenericFilterBean;\r\n\r\nimport java.io.IOException;\r\n\r\npublic class JWTFilter extends GenericFilterBean {\r\n\r\n    public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)throws IOException, ServletException {\r\n        HttpServletRequest httpServletRequest=(HttpServletRequest) servletRequest;\r\n        HttpServletResponse httpServletResponse=(HttpServletResponse) servletResponse;\r\n         String authHeader=httpServletRequest.getHeader(\"authorization\");\r\n         if(authHeader==null){\r\n             httpServletResponse.setStatus(HttpServletResponse.SC_UNAUTHORIZED);\r\n             ServletOutputStream outputStream=httpServletResponse.getOutputStream();\r\n             outputStream.println(\"Token Missing\");\r\n         }\r\n         else{\r\n             String jwtToken=authHeader.substring(7);\r\n             String userDetail= Jwts.parser().setSigningKey(\"SecretKey\").parseClaimsJws(jwtToken).getBody().getSubject();\r\n             httpServletRequest.setAttribute(\"emailId\",userDetail);\r\n             filterChain.doFilter(servletRequest,servletResponse);\r\n\r\n         }\r\n\r\n    }\r\n\r\n}\r\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/filter/JWTFilter.java b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/filter/JWTFilter.java
----- a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/filter/JWTFilter.java	
--+++ b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/filter/JWTFilter.java	
--@@ -10,24 +10,31 @@
-- import java.io.IOException;
-- 
-- public class JWTFilter extends GenericFilterBean {
---
---    public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)throws IOException, ServletException {
---        HttpServletRequest httpServletRequest=(HttpServletRequest) servletRequest;
---        HttpServletResponse httpServletResponse=(HttpServletResponse) servletResponse;
---         String authHeader=httpServletRequest.getHeader("authorization");
---         if(authHeader==null){
---             httpServletResponse.setStatus(HttpServletResponse.SC_UNAUTHORIZED);
---             ServletOutputStream outputStream=httpServletResponse.getOutputStream();
---             outputStream.println("Token Missing");
---         }
---         else{
---             String jwtToken=authHeader.substring(7);
---             String userDetail= Jwts.parser().setSigningKey("SecretKey").parseClaimsJws(jwtToken).getBody().getSubject();
---             httpServletRequest.setAttribute("emailId",userDetail);
---             filterChain.doFilter(servletRequest,servletResponse);
---
---         }
---
--+    private String secretKey;
--+    @Override
--+    public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)
--+            throws IOException, ServletException {
--+        HttpServletRequest httpServletRequest = (HttpServletRequest) servletRequest;
--+        HttpServletResponse httpServletResponse = (HttpServletResponse) servletResponse;
--+        String authHeader = httpServletRequest.getHeader("Authorization");
--+
--+        if (authHeader == null || !authHeader.startsWith("Bearer ")) {
--+            httpServletResponse.setStatus(HttpServletResponse.SC_UNAUTHORIZED);
--+            ServletOutputStream outputStream = httpServletResponse.getOutputStream();
--+            outputStream.println("Token Missing");
--+            return;
--+        }
--+
--+        String jwtToken = authHeader.substring(7);
--+        String userDetail = Jwts.parser().setSigningKey(secretKey).parseClaimsJws(jwtToken).getBody().getSubject();
--+        // Extract role information from the token payload
--+        String userRole = Jwts.parser().setSigningKey(secretKey).parseClaimsJws(jwtToken).getBody().get("role", String.class);
--+
--+        // Pass user details and role information to the request attributes
--+        servletRequest.setAttribute("emailId", userDetail);
--+        servletRequest.setAttribute("role", userRole);
--+
--+        filterChain.doFilter(servletRequest, servletResponse);
--     }
-- 
-- }
--Index: boardtaskservice/src/main/java/com/niit/project/boardtaskservice/exceptions/AccessDeniedException.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/exceptions/AccessDeniedException.java b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/exceptions/AccessDeniedException.java
--new file mode 100644
----- /dev/null	
--+++ b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/exceptions/AccessDeniedException.java	
--@@ -0,0 +1,7 @@
--+package com.niit.project.boardtaskservice.exceptions;
--+
--+public class AccessDeniedException extends RuntimeException{
--+    public AccessDeniedException(String message){
--+        super(message);
--+    }
--+}
--Index: boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/IAdminService.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/IAdminService.java b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/IAdminService.java
--new file mode 100644
----- /dev/null	
--+++ b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/IAdminService.java	
--@@ -0,0 +1,15 @@
--+package com.niit.project.boardtaskservice.services;
--+
--+import com.niit.project.boardtaskservice.domain.Task;
--+import com.niit.project.boardtaskservice.domain.UserDetails;
--+import com.niit.project.boardtaskservice.exceptions.TaskAlreadyExistsException;
--+import com.niit.project.boardtaskservice.exceptions.TaskNotFoundException;
--+import com.niit.project.boardtaskservice.exceptions.UserAlreadyExistsException;
--+import com.niit.project.boardtaskservice.exceptions.UserNotFoundException;
--+
--+public interface IAdminService {
--+    UserDetails registerUser (UserDetails userdetails)throws UserAlreadyExistsException;
--+    UserDetails deleteUser(String emailId)throws UserNotFoundException;
--+    UserDetails saveTaskToUser(Task task, String userEmail) throws TaskAlreadyExistsException,UserAlreadyExistsException;
--+    UserDetails updateTaskToUser(Task task, String userEmail)throws TaskNotFoundException, UserNotFoundException;
--+}
--Index: boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/AdminServiceImpl.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/AdminServiceImpl.java b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/AdminServiceImpl.java
--new file mode 100644
----- /dev/null	
--+++ b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/AdminServiceImpl.java	
--@@ -0,0 +1,116 @@
--+package com.niit.project.boardtaskservice.services;
--+
--+import com.niit.project.boardtaskservice.domain.Task;
--+import com.niit.project.boardtaskservice.domain.UserDetails;
--+import com.niit.project.boardtaskservice.exceptions.TaskAlreadyExistsException;
--+import com.niit.project.boardtaskservice.exceptions.TaskNotFoundException;
--+import com.niit.project.boardtaskservice.exceptions.UserAlreadyExistsException;
--+import com.niit.project.boardtaskservice.exceptions.UserNotFoundException;
--+import com.niit.project.boardtaskservice.proxy.TaskProxy;
--+import com.niit.project.boardtaskservice.repository.ITaskRepository;
--+import org.springframework.beans.factory.annotation.Autowired;
--+
--+import java.util.Arrays;
--+import java.util.List;
--+import java.util.Optional;
--+
--+public class AdminServiceImpl implements IAdminService{
--+    private final ITaskRepository taskRepository;
--+    private final TaskProxy taskProxy;
--+    @Autowired
--+    public AdminServiceImpl(ITaskRepository taskRepository, TaskProxy taskProxy) {
--+        this.taskRepository = taskRepository;
--+        this.taskProxy = taskProxy;
--+    }
--+    @Override
--+    public UserDetails registerUser(UserDetails userdetails)throws UserAlreadyExistsException {
--+        if(taskRepository.findById(userdetails.getEmailId()).isPresent()){
--+            throw new UserAlreadyExistsException("UserAlreadyExists");
--+        }
--+        else{
--+            UserDetails insertedUser=taskRepository.save(userdetails);
--+            taskProxy.registerUser(insertedUser);
--+            return insertedUser;
--+        }
--+    }
--+
--+    @Override
--+    public UserDetails saveTaskToUser(Task task, String userEmail) throws TaskAlreadyExistsException, UserAlreadyExistsException {
--+        Optional<UserDetails> userOptional = taskRepository.findById(userEmail);
--+        if (userOptional.isPresent()) {
--+            UserDetails fetchedUser = userOptional.get();
--+            List<Task> taskList = fetchedUser.getTaskList();
--+            if (taskList == null) {
--+                fetchedUser.setTaskList(Arrays.asList(task));
--+            } else {
--+                boolean taskPresent = false;
--+                for (Task searchTask : taskList) {
--+                    if (searchTask.getTaskName().equals(task.getTaskName())) {
--+                        taskPresent = true;
--+                        break;
--+                    }
--+                }
--+                if (taskPresent) {
--+                    throw new TaskAlreadyExistsException("Task already present for the given email ID");
--+                } else {
--+                    taskList.add(task);
--+                    fetchedUser.setTaskList(taskList);
--+                }
--+            }
--+            return taskRepository.save(fetchedUser);
--+        } else {
--+            throw new UserAlreadyExistsException("User does not exist for the given email ID");
--+        }
--+    }
--+
--+
--+    @Override
--+    public UserDetails updateTaskToUser(Task task, String userEmail) throws TaskNotFoundException,UserNotFoundException {
--+        Optional<UserDetails> userOptional=taskRepository.findById(userEmail);
--+        if(userOptional.isPresent()){
--+            UserDetails fetchedUser=userOptional.get();
--+            List<Task> taskList=fetchedUser.getTaskList();
--+            if(taskList==null || taskList.isEmpty() ) {
--+                throw new TaskNotFoundException("TaskList with Specified Id is not Found  ");
--+            }
--+            else{
--+                boolean taskPresent=false;
--+                for(Task updateTask:taskList) {
--+                    if (updateTask.getTaskId() == task.getTaskId()) {
--+                        int index = 0;
--+                        updateTask.setTaskName(task.getTaskName());
--+                        updateTask.setTaskDescription(task.getTaskDescription());
--+                        updateTask.setAssignTo(task.getAssignTo());
--+                        updateTask.setDueDate(task.getDueDate());
--+                        updateTask.setStatus(task.getStatus());
--+                        index = taskList.indexOf(updateTask);
--+                        fetchedUser.setTaskList(taskList);
--+                        taskPresent = true;
--+                        break;
--+                    }
--+                }
--+                if(taskPresent==false){
--+                    throw new TaskNotFoundException("Task with Specified Id is not Found ");
--+
--+                }
--+            }
--+            return taskRepository.save(fetchedUser);
--+        }
--+        else {
--+            throw new UserNotFoundException("user with the specified Id not found");
--+        }
--+    }
--+
--+    @Override
--+    public UserDetails deleteUser(String emailId) throws UserNotFoundException {
--+        Optional<UserDetails> userOptional = taskRepository.findById(emailId);
--+        if (userOptional.isPresent()) {
--+            UserDetails userToDelete = userOptional.get();
--+            taskRepository.delete(userToDelete);
--+            return userToDelete;
--+        } else {
--+            throw new UserNotFoundException("User with the specified ID not found");
--+        }
--+    }
--+
--+}
--Index: boardtaskservice/src/test/java/com/niit/project/boardtaskservice/service/TaskServiceTest.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>import com.niit.project.boardtaskservice.domain.Task;\r\nimport com.niit.project.boardtaskservice.domain.UserDetails;\r\nimport com.niit.project.boardtaskservice.exceptions.TaskAlreadyExistsException;\r\nimport com.niit.project.boardtaskservice.exceptions.TaskNotFoundException;\r\nimport com.niit.project.boardtaskservice.exceptions.UserAlreadyExistsException;\r\nimport com.niit.project.boardtaskservice.exceptions.UserNotFoundException;\r\nimport com.niit.project.boardtaskservice.repository.ITaskRepository;\r\nimport com.niit.project.boardtaskservice.proxy.TaskProxy;\r\nimport com.niit.project.boardtaskservice.services.TaskServiceImpl;\r\nimport org.junit.jupiter.api.*;\r\nimport org.junit.jupiter.api.extension.ExtendWith;\r\nimport org.mockito.InjectMocks;\r\nimport org.mockito.Mock;\r\nimport org.mockito.junit.jupiter.MockitoExtension;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\nimport java.util.Optional;\r\nimport static org.junit.jupiter.api.Assertions.*;\r\nimport static org.mockito.Mockito.*;\r\n@ExtendWith(MockitoExtension.class)\r\nclass TaskServiceTest {\r\n    @Mock\r\n    private ITaskRepository taskRepository;\r\n    @Mock\r\n    private TaskProxy taskProxy;\r\n    @InjectMocks\r\n    private TaskServiceImpl taskService;\r\n    private UserDetails user;\r\n    private Task task1,task2;\r\n    @BeforeEach\r\n    void setUp() {\r\n        user = new UserDetails(\"shubham@gmail.com\", \"User\", \"password\", \"user\", new ArrayList<>());\r\n        task1 = new Task(1, \"Project\", \"Creating\", \"2024-02-22\", \"shubham\", \"In Progress\");\r\n        task2 = new Task(2, \"Project2\", \"Creating2\", \"2024-02-23\", \"shubham\", \"In Progress\");\r\n        user.setTaskList(Arrays.asList(task1, task2));\r\n    }\r\n    @Test\r\n    void registerUser_Success() throws UserAlreadyExistsException {\r\n        when(taskRepository.findById(user.getEmailId())).thenReturn(Optional.empty());\r\n        when(taskRepository.save(user)).thenReturn(user);\r\n\r\n        UserDetails savedUser = taskService.registerUser(user);\r\n\r\n        assertNotNull(savedUser);\r\n        assertEquals(user, savedUser);\r\n        verify(taskProxy, times(1)).registerUser(user);\r\n    }\r\n    @Test\r\n    void registerUser_UserAlreadyExists() {\r\n        when(taskRepository.findById(user.getEmailId())).thenReturn(Optional.of(user));\r\n\r\n        assertThrows(UserAlreadyExistsException.class, () -> taskService.registerUser(user));\r\n\r\n        verify(taskRepository, never()).save(any());\r\n        verify(taskProxy, never()).registerUser(any());\r\n    }\r\n    @Test\r\n    void saveTaskToUser_Success() throws TaskAlreadyExistsException, UserAlreadyExistsException {\r\n        UserDetails mockedUser = mock(UserDetails.class);\r\n\r\n        List<Task> taskList = new ArrayList<>();\r\n        when(mockedUser.getTaskList()).thenReturn(taskList);\r\n        when(taskRepository.findById(anyString())).thenReturn(Optional.of(mockedUser));\r\n\r\n        UserDetails updatedUser = taskService.saveTaskToUser(task1, \"anyEmailId\");\r\n    }\r\n    @Test\r\n    void updateTaskToUser_Success() throws TaskNotFoundException, UserNotFoundException {\r\n        when(taskRepository.findById(user.getEmailId())).thenReturn(Optional.of(user));\r\n        when(taskRepository.save(any())).thenReturn(user);\r\n\r\n        UserDetails updatedUser = taskService.updateTaskToUser(task1, user.getEmailId());\r\n\r\n        assertNotNull(updatedUser);\r\n        assertTrue(updatedUser.getTaskList().contains(task1));\r\n        verify(taskRepository, times(1)).save(user);\r\n    }\r\n    @Test\r\n    void deleteTask_Success() throws TaskNotFoundException, UserNotFoundException {\r\n        UserDetails mockedUser = mock(UserDetails.class);\r\n        Task taskToDelete = new Task(1, \"TaskToDelete\", \"Description\", \"2024-02-22\", \"AssignTo\", \"Status\");\r\n        List<Task> taskList = new ArrayList<>();\r\n        taskList.add(taskToDelete);\r\n        when(taskRepository.findById(anyString())).thenReturn(Optional.of(mockedUser));\r\n        when(mockedUser.getTaskList()).thenReturn(taskList);\r\n        when(taskRepository.save(any())).thenReturn(mockedUser);\r\n        UserDetails updatedUser = taskService.deleteTask(taskToDelete, \"anyEmailId\");\r\n        verify(taskRepository, times(1)).findById(\"anyEmailId\");\r\n        verify(taskRepository, times(1)).save(mockedUser);\r\n        assertNotNull(updatedUser);\r\n        assertEquals(mockedUser, updatedUser);\r\n        assertFalse(updatedUser.getTaskList().contains(taskToDelete));\r\n    }\r\n}\r\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/boardtaskservice/src/test/java/com/niit/project/boardtaskservice/service/TaskServiceTest.java b/boardtaskservice/src/test/java/com/niit/project/boardtaskservice/service/TaskServiceTest.java
----- a/boardtaskservice/src/test/java/com/niit/project/boardtaskservice/service/TaskServiceTest.java	
--+++ b/boardtaskservice/src/test/java/com/niit/project/boardtaskservice/service/TaskServiceTest.java	
--@@ -92,4 +92,136 @@
--         assertEquals(mockedUser, updatedUser);
--         assertFalse(updatedUser.getTaskList().contains(taskToDelete));
--     }
--+    @Test
--+    void getAllTaskFromUser_UserExistsWithTasks_ReturnsTaskList() throws TaskNotFoundException, UserNotFoundException {
--+        String emailId = "hinata@gmail.com.com";
--+        List<Task> expectedTaskList = new ArrayList<>();
--+        expectedTaskList.add(new Task());
--+        expectedTaskList.add(new Task());
--+        UserDetails userWithTasks = new UserDetails();
--+        userWithTasks.setEmailId(emailId);
--+        userWithTasks.setTaskList(expectedTaskList);
--+        when(taskRepository.findById(emailId)).thenReturn(Optional.of(userWithTasks));
--+
--+        List<Task> actualTaskList = taskService.getAllTaskFromUser(emailId);
--+
--+        verify(taskRepository, times(1)).findById(emailId);
--+
--+        assertEquals(expectedTaskList, actualTaskList);
--+    }
--+    @Test
--+    void getAllTaskFromUser_UserExistsWithoutTasks_ThrowsTaskNotFoundException() {
--+        String emailId = "sharath@gmail.com";
--+        UserDetails userWithoutTasks = new UserDetails();
--+        userWithoutTasks.setEmailId(emailId);
--+        when(taskRepository.findById(emailId)).thenReturn(Optional.of(userWithoutTasks));
--+
--+        assertThrows(TaskNotFoundException.class, () -> taskService.getAllTaskFromUser(emailId));
--+
--+        verify(taskRepository, times(1)).findById(emailId);
--+    }
--+    @Test
--+    void getAllTaskFromUser_UserNotFound_ThrowsUserNotFoundException() {
--+        String emailId = "Nami@gmail.com";
--+        when(taskRepository.findById(emailId)).thenReturn(Optional.empty());
--+
--+        assertThrows(UserNotFoundException.class, () -> taskService.getAllTaskFromUser(emailId));
--+
--+        verify(taskRepository, times(1)).findById(emailId);
--+    }
--+    @Test
--+    void getOneTaskById_TaskFound_ReturnsTask() throws TaskNotFoundException, UserNotFoundException {
--+        String emailId = "test@example.com";
--+        int taskId = 123;
--+        Task expectedTask = new Task();
--+        expectedTask.setTaskId(taskId);
--+        UserDetails userWithTasks = new UserDetails();
--+        userWithTasks.setEmailId(emailId);
--+        List<Task> taskList = new ArrayList<>();
--+        taskList.add(expectedTask);
--+        userWithTasks.setTaskList(taskList);
--+        when(taskRepository.findById(emailId)).thenReturn(Optional.of(userWithTasks));
--+        Task actualTask = taskService.getOneTaskById(taskId, emailId);
--+        verify(taskRepository, times(1)).findById(emailId);
--+        assertEquals(expectedTask, actualTask);
--+    }
--+    @Test
--+    void getOneTaskById_TaskNotFound_ThrowsTaskNotFoundException() {
--+        String emailId = "shubham@gmail.com";
--+        int taskId = 123;
--+        UserDetails userWithTasks = new UserDetails();
--+        userWithTasks.setEmailId(emailId);
--+        List<Task> taskList = new ArrayList<>();
--+        userWithTasks.setTaskList(taskList);
--+        when(taskRepository.findById(emailId)).thenReturn(Optional.of(userWithTasks));
--+        assertThrows(TaskNotFoundException.class, () -> taskService.getOneTaskById(taskId, emailId));
--+        verify(taskRepository, times(1)).findById(emailId);
--+    }
--+    @Test
--+    void getOneTaskById_UserNotFound_ThrowsUserNotFoundException() {
--+        String emailId = "robin@gmail.com";
--+        int taskId = 123;
--+        when(taskRepository.findById(emailId)).thenReturn(Optional.empty());
--+        assertThrows(UserNotFoundException.class, () -> taskService.getOneTaskById(taskId, emailId));
--+        verify(taskRepository, times(1)).findById(emailId);
--+    }
--+    @Test
--+    void getUserName_UserFound_ReturnsUserName() throws UserNotFoundException {
--+        String emailId = "shubham@gmail.com";
--+        String expectedUserName = "Test User";
--+        UserDetails userDetails = new UserDetails();
--+        userDetails.setEmailId(emailId);
--+        userDetails.setUserName(expectedUserName);
--+        when(taskRepository.findById(emailId)).thenReturn(Optional.of(userDetails));
--+        String actualUserName = taskService.getUserName(emailId);
--+        verify(taskRepository, times(1)).findById(emailId);
--+        assertEquals(expectedUserName, actualUserName);
--+    }
--+    @Test
--+    void getUserName_UserNotFound_ThrowsUserNotFoundException() {
--+        String emailId = "robin@gmial.com";
--+        when(taskRepository.findById(emailId)).thenReturn(Optional.empty());
--+        assertThrows(UserNotFoundException.class, () -> taskService.getUserName(emailId));
--+        verify(taskRepository, times(1)).findById(emailId);
--+    }
--+    @Test
--+    void getAllUser_UserFound_ReturnsAllUsers() throws UserNotFoundException {
--+        String emailId = "shubham@gmail.com";
--+        UserDetails userDetails = new UserDetails();
--+        List<UserDetails> userList = new ArrayList<>();
--+        userList.add(userDetails);
--+        when(taskRepository.findById(emailId)).thenReturn(Optional.of(userDetails));
--+        when(taskRepository.findAll()).thenReturn(userList);
--+        List<UserDetails> actualUsers = taskService.getAllUser(emailId);
--+        verify(taskRepository, times(1)).findById(emailId);
--+        verify(taskRepository, times(1)).findAll();
--+        assertEquals(userList, actualUsers);
--+    }
--+    @Test
--+    void getAllUser_UserNotFound_ThrowsUserNotFoundException() {
--+        String emailId = "robin@gmail.com";
--+        when(taskRepository.findById(emailId)).thenReturn(Optional.empty());
--+        assertThrows(UserNotFoundException.class, () -> taskService.getAllUser(emailId));
--+        verify(taskRepository, times(1)).findById(emailId);
--+        verify(taskRepository, never()).findAll();
--+    }
--+    @Test
--+    void getUserRole_UserFound_ReturnsRole() throws UserNotFoundException {
--+        // Mock data
--+        String emailId = "shubham@gmail.com";
--+        String role = "admin";
--+        UserDetails userDetails = new UserDetails();
--+        userDetails.setRole(role);
--+        when(taskRepository.findById(emailId)).thenReturn(Optional.of(userDetails));
--+        String actualRole = taskService.getUserRole(emailId);
--+        verify(taskRepository, times(2)).findById(emailId);
--+        assertEquals(role, actualRole);
--+    }
--+    @Test
--+    void getUserRole_UserNotFound_ThrowsUserNotFoundException() {
--+        String emailId = "nonexistent@example.com";
--+        when(taskRepository.findById(emailId)).thenReturn(Optional.empty());
--+        assertThrows(UserNotFoundException.class, () -> taskService.getUserRole(emailId));
--+        verify(taskRepository, times(1)).findById(emailId);
--+    }
-- }
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_28-02-2024_00_26__Changes_1.xml
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_28-02-2024_00_26__Changes_1.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_28-02-2024_00_26__Changes_1.xml
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_28-02-2024_00_26__Changes_1.xml	
-+++ /dev/null	
-@@ -1,4 +0,0 @@
--<changelist name="Uncommitted_changes_before_Update_at_28-02-2024_00_26_[Changes]1" date="1709060215748" recycled="true" deleted="true">
--  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_28-02-2024_00_26_[Changes]1/shelved.patch" />
--  <option name="DESCRIPTION" value="Uncommitted changes before Update at 28-02-2024 00:26 [Changes]" />
--</changelist>
-\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_27-02-2024_22_26__Changes_1.xml
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_27-02-2024_22_26__Changes_1.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_27-02-2024_22_26__Changes_1.xml
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_27-02-2024_22_26__Changes_1.xml	
-+++ /dev/null	
-@@ -1,4 +0,0 @@
--<changelist name="Uncommitted_changes_before_Update_at_27-02-2024_22_26_[Changes]1" date="1709052983793" recycled="true" deleted="true">
--  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_27-02-2024_22_26_[Changes]1/shelved.patch" />
--  <option name="DESCRIPTION" value="Uncommitted changes before Update at 27-02-2024 22:26 [Changes]" />
--</changelist>
-\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_24-02-2024_19_24__Changes_1.xml
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_24-02-2024_19_24__Changes_1.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_24-02-2024_19_24__Changes_1.xml
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_24-02-2024_19_24__Changes_1.xml	
-+++ /dev/null	
-@@ -1,4 +0,0 @@
--<changelist name="Uncommitted_changes_before_Update_at_24-02-2024_19_24_[Changes]1" date="1708782872612" recycled="true" deleted="true">
--  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_24-02-2024_19_24_[Changes]1/shelved.patch" />
--  <option name="DESCRIPTION" value="Uncommitted changes before Update at 24-02-2024 19:24 [Changes]" />
--</changelist>
-\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_24-02-2024_19_24_[Changes]1/shelved.patch
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_24-02-2024_19_24_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_24-02-2024_19_24_[Changes]1/shelved.patch
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_24-02-2024_19_24_[Changes]1/shelved.patch	
-+++ /dev/null	
-@@ -1,104 +0,0 @@
--Index: boardtaskservice/src/main/java/com/niit/project/boardtaskservice/controller/TaskController.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.niit.project.boardtaskservice.controller;\r\n\r\nimport com.niit.project.boardtaskservice.domain.Task;\r\nimport com.niit.project.boardtaskservice.domain.UserDetails;\r\nimport com.niit.project.boardtaskservice.exceptions.TaskAlreadyExistsException;\r\nimport com.niit.project.boardtaskservice.exceptions.TaskNotFoundException;\r\nimport com.niit.project.boardtaskservice.services.ITaskService;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.*;\r\n\r\nimport java.util.List;\r\n\r\n@RestController\r\n@RequestMapping(\"/api/v2\")\r\npublic class TaskController {\r\n    private final ITaskService taskService;\r\n@Autowired\r\n    public TaskController(ITaskService taskService) {\r\n        this.taskService = taskService;\r\n    }\r\n\r\n    @PutMapping (\"updateTask/{emailId}\")\r\n    public ResponseEntity<?> updateTaskToUser(@PathVariable String emailId,@RequestBody Task task){\r\n        ResponseEntity responseEntity;\r\n        try{\r\n            responseEntity=new ResponseEntity<>(taskService.updateTaskToUser(task,emailId),HttpStatus.FOUND);\r\n        }\r\n        catch(TaskNotFoundException exception){\r\n            responseEntity=new ResponseEntity<>(exception.getMessage(),HttpStatus.CONFLICT);\r\n        }\r\n        return responseEntity;\r\n    }\r\n    @DeleteMapping (\"deleteTask/{emailId}\")\r\n    public ResponseEntity<?> deleteTaskToUser(@PathVariable String emailId,@RequestBody Task task){\r\n        ResponseEntity responseEntity;\r\n        try{\r\n            responseEntity=new ResponseEntity<>(taskService.deleteTask(task,emailId),HttpStatus.OK);\r\n        }\r\n        catch(TaskNotFoundException exception){\r\n            responseEntity=new ResponseEntity<>(exception.getMessage(),HttpStatus.CONFLICT);\r\n        }\r\n        return responseEntity;\r\n    }\r\n    @GetMapping(\"/userName\")\r\n    public ResponseEntity<?> getUserName(HttpServletRequest request) {\r\n        ResponseEntity responseEntity;\r\n        try {\r\n            String userId = getCustomerIdFromClaims(request);\r\n            String userName = taskService.getUserName(userId);\r\n            responseEntity= new ResponseEntity<>(userName, HttpStatus.FOUND);\r\n        } catch (Exception e) {\r\n            responseEntity= new ResponseEntity<>(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);\r\n        }return responseEntity;\r\n    }\r\n    @GetMapping(\"/allUsers\")\r\n    public ResponseEntity<?> getAllUser(HttpServletRequest request) {\r\n        ResponseEntity responseEntity;\r\n        try {\r\n            String userId = getCustomerIdFromClaims(request);\r\n            List<UserDetails> users = taskService.getAllUser(userId);\r\n            responseEntity= new ResponseEntity<>( users, HttpStatus.FOUND);\r\n        } catch (Exception e) {\r\n            responseEntity= new ResponseEntity<>(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);\r\n        }return responseEntity;\r\n    }\r\n    @GetMapping(\"/userRole\")\r\n    public ResponseEntity<?> getUserRole(HttpServletRequest request) {\r\n        ResponseEntity responseEntity;\r\n        try {\r\n            String userId = getCustomerIdFromClaims(request);\r\n            String userRole = taskService.getUserRole(userId);\r\n            responseEntity= new ResponseEntity<>(userRole, HttpStatus.FOUND);\r\n        } catch (Exception e) {\r\n            responseEntity= new ResponseEntity<>(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);\r\n        }return responseEntity;\r\n    }\r\n\r\n    private String getCustomerIdFromClaims(HttpServletRequest request) {\r\n        String userId=request.getAttribute(\"emailId\").toString();\r\n        return userId;\r\n    }\r\n}\r\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/controller/TaskController.java b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/controller/TaskController.java
----- a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/controller/TaskController.java	
--+++ b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/controller/TaskController.java	
--@@ -22,6 +22,7 @@
--         this.taskService = taskService;
--     }
-- 
--+
--     @PutMapping ("updateTask/{emailId}")
--     public ResponseEntity<?> updateTaskToUser(@PathVariable String emailId,@RequestBody Task task){
--         ResponseEntity responseEntity;
--@@ -77,6 +78,19 @@
--             responseEntity= new ResponseEntity<>(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);
--         }return responseEntity;
--     }
--+    @GetMapping("/getAllTasks/{emailId}")
--+    public ResponseEntity<?> getAllTasksFromUser(HttpServletRequest request) {
--+    ResponseEntity responseEntity;
--+        try {
--+            String userId =getCustomerIdFromClaims(request);
--+            List<Task> tasks = taskService.getAllTaskFromUser(userId);
--+            responseEntity= new ResponseEntity<>(tasks, HttpStatus.FOUND);
--+        } catch (Exception e) {
--+            responseEntity= new ResponseEntity<>(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);
--+        }
--+        return responseEntity;
--+    }
--+
-- 
--     private String getCustomerIdFromClaims(HttpServletRequest request) {
--         String userId=request.getAttribute("emailId").toString();
--Index: boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/TaskServiceImpl.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.niit.project.boardtaskservice.services;\r\n\r\nimport com.niit.project.boardtaskservice.domain.Task;\r\nimport com.niit.project.boardtaskservice.domain.UserDetails;\r\nimport com.niit.project.boardtaskservice.exceptions.TaskAlreadyExistsException;\r\nimport com.niit.project.boardtaskservice.exceptions.TaskNotFoundException;\r\nimport com.niit.project.boardtaskservice.exceptions.UserAlreadyExistsException;\r\nimport com.niit.project.boardtaskservice.exceptions.UserNotFoundException;\r\nimport com.niit.project.boardtaskservice.proxy.TaskProxy;\r\nimport com.niit.project.boardtaskservice.repository.ITaskRepository;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.cloud.openfeign.EnableFeignClients;\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\nimport java.util.Optional;\r\n\r\n@Service\r\npublic class TaskServiceImpl implements ITaskService{\r\n    private final ITaskRepository taskRepository;\r\n    private final TaskProxy taskProxy;\r\n@Autowired\r\n    public TaskServiceImpl(ITaskRepository taskRepository, TaskProxy taskProxy) {\r\n        this.taskRepository = taskRepository;\r\n        this.taskProxy = taskProxy;\r\n    }\r\n    @Override\r\n    public UserDetails registerUser(UserDetails userdetails)throws UserAlreadyExistsException {\r\n        if(taskRepository.findById(userdetails.getEmailId()).isPresent()){\r\n            throw new UserAlreadyExistsException(\"UserAlreadyExists\");\r\n        }\r\n        else{\r\n            UserDetails insertedUser=taskRepository.save(userdetails);\r\n            taskProxy.registerUser(insertedUser);\r\n            return insertedUser;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public UserDetails saveTaskToUser(Task task, String userEmail) throws TaskAlreadyExistsException,UserAlreadyExistsException {\r\n        Optional<UserDetails> userOptional=taskRepository.findById(userEmail);\r\n        if(userOptional.isPresent()){\r\n            UserDetails fetchedUser=userOptional.get();\r\n            List<Task> taskList=fetchedUser.getTaskList();\r\n            if(taskList==null){\r\n                fetchedUser.setTaskList(Arrays.asList(task));\r\n            }\r\n            else{\r\n                boolean taskpresent=false;\r\n                for(Task searchTask:taskList){\r\n                    if(searchTask.getTaskName().equals(task.getTaskName())){\r\n                        taskpresent=true;\r\n                        break;\r\n                    }\r\n                }\r\n                if(taskpresent){\r\n                    throw new TaskAlreadyExistsException(\"Task already present in given emailid\");\r\n                }\r\n                else{\r\n                    taskList.add(task);\r\n                    fetchedUser.setTaskList(taskList);\r\n                }\r\n            }\r\n            return  taskRepository.save(fetchedUser);\r\n\r\n        }\r\n        else{\r\n            throw new UserAlreadyExistsException(\"user already exist in given emailid\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public UserDetails updateTaskToUser(Task task, String userEmail) throws TaskNotFoundException,UserNotFoundException {\r\n        Optional<UserDetails> userOptional=taskRepository.findById(userEmail);\r\n        if(userOptional.isPresent()){\r\n            UserDetails fetchedUser=userOptional.get();\r\n            List<Task> taskList=fetchedUser.getTaskList();\r\n            if(taskList==null || taskList.isEmpty() ) {\r\n                throw new TaskNotFoundException(\"TaskList with Specified Id is not Found  \");\r\n            }\r\n            else{\r\n                boolean taskPresent=false;\r\n                for(Task updateTask:taskList) {\r\n                    if (updateTask.getTaskId() == task.getTaskId()) {\r\n                        int index = 0;\r\n                        updateTask.setTaskName(task.getTaskName());\r\n                        updateTask.setTaskDescription(task.getTaskDescription());\r\n                        updateTask.setAssignTo(task.getAssignTo());\r\n                        updateTask.setDueDate(task.getDueDate());\r\n                        updateTask.setStatus(task.getStatus());\r\n                        index = taskList.indexOf(updateTask);\r\n                        fetchedUser.setTaskList(taskList);\r\n                        taskPresent = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if(taskPresent==false){\r\n                    throw new TaskNotFoundException(\"Task with Specified Id is not Found \");\r\n\r\n                }\r\n            }\r\n            return taskRepository.save(fetchedUser);\r\n        }\r\n        else {\r\n            throw new UserNotFoundException(\"user with the specified Id not found\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public UserDetails deleteTask(Task task, String emailId) throws TaskNotFoundException{\r\n        Optional<UserDetails> userOptional=taskRepository.findById(emailId);\r\n        if(userOptional.isPresent()){\r\n            UserDetails fetchedUser=userOptional.get();\r\n            List<Task> taskList=fetchedUser.getTaskList();\r\n            if(taskList==null || taskList.isEmpty() ) {\r\n                throw new TaskNotFoundException(\"TaskList with Specified Id is not Found\");\r\n            }\r\n            else{\r\n                boolean taskPresent=false;\r\n                for(Task existingTask:taskList) {\r\n                    if (existingTask.getTaskId() == task.getTaskId()) {\r\n                        taskList.remove(existingTask);\r\n                        fetchedUser.setTaskList(taskList);\r\n                        taskPresent = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if(taskPresent==false){\r\n                    throw new TaskNotFoundException(\"Task with Specified Id is not Found \");\r\n\r\n                }\r\n            }\r\n            return taskRepository.save(fetchedUser);\r\n        }\r\n        else {\r\n            throw new UserNotFoundException(\"user with the specified Id not found\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public List<Task> getAllTaskFromUser(String emailId)throws TaskNotFoundException,UserNotFoundException {\r\n        Optional<UserDetails> userOptional=taskRepository.findById(emailId);\r\n        if(userOptional.isPresent()){\r\n            UserDetails fetchedUser=userOptional.get();\r\n            List<Task> taskList=fetchedUser.getTaskList();\r\n            if(taskList==null || taskList.isEmpty() ) {\r\n                throw new TaskNotFoundException(\"TaskList with Specified Id is not Found  \");\r\n            }\r\n            else{\r\n                return taskList;\r\n\r\n            }\r\n        }\r\n        else {\r\n            throw new UserNotFoundException(\"user with the specified Id not found\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public Task getOneTaskById(Task task, String emailId) throws TaskNotFoundException,UserNotFoundException{\r\n        Optional<UserDetails >userOptional=taskRepository.findById(emailId);\r\n        if (userOptional.isPresent()) {\r\n            UserDetails fetchedUser=userOptional.get();\r\n            List<Task> taskList=fetchedUser.getTaskList();\r\n            if(taskList==null || taskList.isEmpty() ) {\r\n                throw new TaskNotFoundException(\"TaskList with Specified Id is not Found  \");\r\n            }\r\n            else{\r\n                for(Task onetask:taskList){\r\n                    if(onetask.getTaskName().equals(task.getTaskName())){\r\n                        return onetask;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        throw new UserNotFoundException(\"user with the specified Id not found\");\r\n    }\r\n\r\n    @Override\r\n    public String getUserName(String emailID)throws UserNotFoundException {\r\n        Optional<UserDetails >fetchedUser=taskRepository.findById(emailID);\r\n        if (fetchedUser.isEmpty()) {\r\n            throw new UserNotFoundException(\"user with the specified Id not found\");\r\n        }\r\n        return fetchedUser.get().getUserName();\r\n    }\r\n    @Override\r\n    public List<UserDetails> getAllUser(String emailId) throws UserNotFoundException{\r\n        Optional<UserDetails >fetchedUser=taskRepository.findById(emailId);\r\n        if (fetchedUser.isEmpty()) {\r\n            throw new UserNotFoundException(\"user with the specified Id not found\");\r\n        }\r\n        return taskRepository.findAll();\r\n    }\r\n\r\n    @Override\r\n    public String getUserRole(String emailId)throws UserNotFoundException {\r\n        if (taskRepository.findById(emailId).isEmpty()) {\r\n            throw new UserNotFoundException(\"user with the specified Id not found\");\r\n        }\r\n        return taskRepository.findById(emailId).get().getRole();\r\n    }\r\n}\r\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/TaskServiceImpl.java b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/TaskServiceImpl.java
----- a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/TaskServiceImpl.java	
--+++ b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/TaskServiceImpl.java	
--@@ -38,37 +38,34 @@
--     }
-- 
--     @Override
---    public UserDetails saveTaskToUser(Task task, String userEmail) throws TaskAlreadyExistsException,UserAlreadyExistsException {
---        Optional<UserDetails> userOptional=taskRepository.findById(userEmail);
---        if(userOptional.isPresent()){
---            UserDetails fetchedUser=userOptional.get();
---            List<Task> taskList=fetchedUser.getTaskList();
---            if(taskList==null){
--+    public UserDetails saveTaskToUser(Task task, String userEmail) throws TaskAlreadyExistsException, UserAlreadyExistsException {
--+        Optional<UserDetails> userOptional = taskRepository.findById(userEmail);
--+        if (userOptional.isPresent()) {
--+            UserDetails fetchedUser = userOptional.get();
--+            List<Task> taskList = fetchedUser.getTaskList();
--+            if (taskList == null) {
--                 fetchedUser.setTaskList(Arrays.asList(task));
---            }
---            else{
---                boolean taskpresent=false;
---                for(Task searchTask:taskList){
---                    if(searchTask.getTaskName().equals(task.getTaskName())){
---                        taskpresent=true;
--+            } else {
--+                boolean taskPresent = false;
--+                for (Task searchTask : taskList) {
--+                    if (searchTask.getTaskName().equals(task.getTaskName())) {
--+                        taskPresent = true;
--                         break;
--                     }
--                 }
---                if(taskpresent){
---                    throw new TaskAlreadyExistsException("Task already present in given emailid");
---                }
---                else{
--+                if (taskPresent) {
--+                    throw new TaskAlreadyExistsException("Task already present for the given email ID");
--+                } else {
--                     taskList.add(task);
--                     fetchedUser.setTaskList(taskList);
--                 }
--             }
---            return  taskRepository.save(fetchedUser);
---
--+            return taskRepository.save(fetchedUser);
--+        } else {
--+            throw new UserAlreadyExistsException("User does not exist for the given email ID");
--         }
---        else{
---            throw new UserAlreadyExistsException("user already exist in given emailid");
---        }
--     }
--+
-- 
--     @Override
--     public UserDetails updateTaskToUser(Task task, String userEmail) throws TaskNotFoundException,UserNotFoundException {
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_27-02-2024_23_08_[Changes]1/shelved.patch
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_27-02-2024_23_08_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_27-02-2024_23_08_[Changes]1/shelved.patch
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_27-02-2024_23_08_[Changes]1/shelved.patch	
-+++ /dev/null	
-@@ -1,66 +0,0 @@
--Index: boardtaskservice/src/main/java/com/niit/project/boardtaskservice/controller/AdminController.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.niit.project.boardtaskservice.controller;\r\n\r\nimport com.niit.project.boardtaskservice.domain.Task;\r\nimport com.niit.project.boardtaskservice.domain.UserDetails;\r\nimport com.niit.project.boardtaskservice.exceptions.TaskNotFoundException;\r\nimport com.niit.project.boardtaskservice.exceptions.UserAlreadyExistsException;\r\nimport com.niit.project.boardtaskservice.exceptions.UserNotFoundException;\r\nimport com.niit.project.boardtaskservice.services.ITaskService;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.*;\r\n\r\nimport java.util.List;\r\n\r\n@RestController\r\n@RequestMapping(\"/api/v2\")\r\npublic class AdminController {\r\n    private final ITaskService taskService;\r\n\r\n\r\n    @Autowired\r\n    public AdminController(ITaskService taskService) {\r\n        this.taskService = taskService;\r\n    }\r\n\r\n    @PostMapping(\"/saveUser\")\r\n    public ResponseEntity<?> registerUser(@RequestBody UserDetails userDetails) {\r\n        ResponseEntity responseEntity;\r\n        try {\r\n            UserDetails saveduser = taskService.registerUser(userDetails);\r\n            responseEntity = new ResponseEntity<>(saveduser, HttpStatus.ACCEPTED);\r\n        } catch (UserAlreadyExistsException exception) {\r\n            responseEntity = new ResponseEntity<>(exception.getMessage(), HttpStatus.CONFLICT);\r\n        }\r\n        return responseEntity;\r\n    }\r\n    @PutMapping(\"/updateTask\")\r\n    public ResponseEntity<?> updateTaskToUser(@RequestBody Task task, HttpServletRequest request) {\r\n        ResponseEntity responseEntity;\r\n        try {\r\n            String userId = getCustomerIdFromClaims(request);\r\n            responseEntity = new ResponseEntity<>(taskService.updateTaskToUser(task, userId), HttpStatus.FOUND);\r\n        } catch (TaskNotFoundException exception) {\r\n            responseEntity = new ResponseEntity<>(exception.getMessage(), HttpStatus.CONFLICT);\r\n        }\r\n        return responseEntity;\r\n    }\r\n    @DeleteMapping(\"/deleteTask\")\r\n    public ResponseEntity<?> deleteTaskToUser(@RequestBody Task task, HttpServletRequest request) {\r\n        ResponseEntity responseEntity;\r\n        try {\r\n            String userId = getCustomerIdFromClaims(request);\r\n            responseEntity = new ResponseEntity<>(taskService.deleteTask(task, userId), HttpStatus.OK);\r\n        } catch (TaskNotFoundException exception) {\r\n            responseEntity = new ResponseEntity<>(exception.getMessage(), HttpStatus.CONFLICT);\r\n        }\r\n        return responseEntity;\r\n    }\r\n    @GetMapping(\"/userName\")\r\n    public ResponseEntity<?> getUserName(HttpServletRequest request) {\r\n        ResponseEntity responseEntity;\r\n        try {\r\n            String userId = getCustomerIdFromClaims(request);\r\n            String userName = taskService.getUserName(userId);\r\n            responseEntity = new ResponseEntity<>(userName, HttpStatus.FOUND);\r\n        } catch (Exception e) {\r\n            responseEntity = new ResponseEntity<>(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);\r\n        }\r\n        return responseEntity;\r\n    }\r\n    @GetMapping(\"/allUsers\")\r\n    public ResponseEntity<?> getAllUser(HttpServletRequest request) {\r\n        ResponseEntity responseEntity;\r\n        try {\r\n            String userId = getCustomerIdFromClaims(request);\r\n            List<UserDetails> users = taskService.getAllUser(userId);\r\n            responseEntity = new ResponseEntity<>(users, HttpStatus.FOUND);\r\n        } catch (Exception e) {\r\n            responseEntity = new ResponseEntity<>(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);\r\n        }\r\n        return responseEntity;\r\n    }\r\n    @GetMapping(\"/userRole\")\r\n    public ResponseEntity<?> getUserRole(HttpServletRequest request) {\r\n        ResponseEntity responseEntity;\r\n        try {\r\n            String userId = getCustomerIdFromClaims(request);\r\n            String userRole = taskService.getUserRole(userId);\r\n            responseEntity = new ResponseEntity<>(userRole, HttpStatus.FOUND);\r\n        } catch (Exception e) {\r\n            responseEntity = new ResponseEntity<>(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);\r\n        }\r\n        return responseEntity;\r\n    }\r\n    @GetMapping(\"/getOneTask/{taskId}\")\r\n    public ResponseEntity<?> getOneTaskById(@PathVariable int taskId,HttpServletRequest request) {\r\n        ResponseEntity responseEntity;\r\n        try {\r\n            String userId = getCustomerIdFromClaims(request);\r\n            responseEntity = new ResponseEntity<>(taskService.getOneTaskById(taskId,userId), HttpStatus.ACCEPTED);\r\n        } catch (Exception e) {\r\n            responseEntity = new ResponseEntity<>(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);\r\n        }return responseEntity;\r\n    }\r\n    @GetMapping(\"/getAllTask\")\r\n    public ResponseEntity<?> getAllTaskFromUser(HttpServletRequest request) {\r\n        ResponseEntity responseEntity;\r\n        try {\r\n            String userId = getCustomerIdFromClaims(request);\r\n            responseEntity = new ResponseEntity<>(taskService.getAllTaskFromUser(userId), HttpStatus.ACCEPTED);\r\n        } catch (Exception e) {\r\n            responseEntity = new ResponseEntity<>(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);\r\n        }return responseEntity;\r\n    }\r\n    @PostMapping (\"/saveTaskToUser\")\r\n    public ResponseEntity<?> saveTaskToUser(@RequestBody Task task,HttpServletRequest request){\r\n        ResponseEntity responseEntity;\r\n        try{\r\n            String userId = getCustomerIdFromClaims(request);\r\n            responseEntity=new ResponseEntity<>(taskService.saveTaskToUser(task,userId),HttpStatus.FOUND);\r\n        }\r\n        catch(TaskNotFoundException exception){\r\n            responseEntity=new ResponseEntity<>(exception.getMessage(),HttpStatus.CONFLICT);\r\n        }\r\n        return responseEntity;\r\n    }\r\n    @DeleteMapping(\"/deleteUser\")\r\n    public ResponseEntity<?> deleteUser(HttpServletRequest request) {\r\n        ResponseEntity responseEntity;\r\n        try {\r\n            String userId = getCustomerIdFromClaims(request);\r\n            responseEntity = new ResponseEntity<>(taskService.deleteUser(userId), HttpStatus.OK);\r\n        } catch (UserNotFoundException exception) {\r\n            responseEntity = new ResponseEntity<>(exception.getMessage(), HttpStatus.CONFLICT);\r\n        }\r\n        return responseEntity;\r\n    }\r\n    private String getCustomerIdFromClaims(HttpServletRequest request) {\r\n        String userId=request.getAttribute(\"emailId\").toString();\r\n        return userId;\r\n    }\r\n}\r\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/controller/AdminController.java b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/controller/AdminController.java
----- a/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/controller/AdminController.java	
--+++ b/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/controller/AdminController.java	
--@@ -24,7 +24,26 @@
--     public AdminController(ITaskService taskService) {
--         this.taskService = taskService;
--     }
---
--+    @GetMapping("/getOneTask/{taskId}")
--+    public ResponseEntity<?> getOneTaskById(@PathVariable int taskId, HttpServletRequest request) {
--+        ResponseEntity responseEntity;
--+        try {
--+            String userId = getCustomerIdFromClaims(request);
--+            responseEntity = new ResponseEntity<>(taskService.getOneTaskById(taskId,userId), HttpStatus.ACCEPTED);
--+        } catch (Exception e) {
--+            responseEntity = new ResponseEntity<>(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);
--+        }return responseEntity;
--+    }
--+    @GetMapping("/getAllTask")
--+    public ResponseEntity<?> getAllTaskFromUser(HttpServletRequest request) {
--+        ResponseEntity responseEntity;
--+        try {
--+            String userId = getCustomerIdFromClaims(request);
--+            responseEntity = new ResponseEntity<>(taskService.getAllTaskFromUser(userId), HttpStatus.ACCEPTED);
--+        } catch (Exception e) {
--+            responseEntity = new ResponseEntity<>(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);
--+        }return responseEntity;
--+    }
--     @PostMapping("/saveUser")
--     public ResponseEntity<?> registerUser(@RequestBody UserDetails userDetails) {
--         ResponseEntity responseEntity;
--@@ -94,26 +113,7 @@
--         }
--         return responseEntity;
--     }
---    @GetMapping("/getOneTask/{taskId}")
---    public ResponseEntity<?> getOneTaskById(@PathVariable int taskId,HttpServletRequest request) {
---        ResponseEntity responseEntity;
---        try {
---            String userId = getCustomerIdFromClaims(request);
---            responseEntity = new ResponseEntity<>(taskService.getOneTaskById(taskId,userId), HttpStatus.ACCEPTED);
---        } catch (Exception e) {
---            responseEntity = new ResponseEntity<>(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);
---        }return responseEntity;
---    }
---    @GetMapping("/getAllTask")
---    public ResponseEntity<?> getAllTaskFromUser(HttpServletRequest request) {
---        ResponseEntity responseEntity;
---        try {
---            String userId = getCustomerIdFromClaims(request);
---            responseEntity = new ResponseEntity<>(taskService.getAllTaskFromUser(userId), HttpStatus.ACCEPTED);
---        } catch (Exception e) {
---            responseEntity = new ResponseEntity<>(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);
---        }return responseEntity;
---    }
--+
--     @PostMapping ("/saveTaskToUser")
--     public ResponseEntity<?> saveTaskToUser(@RequestBody Task task,HttpServletRequest request){
--         ResponseEntity responseEntity;
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"3accaff2-95c0-4f5b-bacb-4249d94e92aa\" name=\"Changes\" comment=\"admin controller and service test cases completed\">\r\n      <change afterPath=\"$PROJECT_DIR$/MailService/src/main/java/com/niit/project/MailService/controller/MailController.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/MailService/src/main/java/com/niit/project/MailService/domain/EmailDetails.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/MailService/src/main/java/com/niit/project/MailService/service/MailService.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/exceptions/InvalidStatusChangeException.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/exceptions/UserAlreadyHasMoreTaskException.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/encodings.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/encodings.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_01-03-2024_22_16_[Changes]1/shelved.patch\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_01-03-2024_22_16__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_01-03-2024_22_16__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_01-03-2024_22_16__Changes_1.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_24-02-2024_19_24_[Changes]1/shelved.patch\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_24-02-2024_19_24__Changes_1.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_25-02-2024_23_04_[Changes]/shelved.patch\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_25-02-2024_23_04__Changes_.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_27-02-2024_22_26_[Changes]1/shelved.patch\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_27-02-2024_22_26__Changes_1.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_27-02-2024_22_29__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_27-02-2024_22_29__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_27-02-2024_22_45__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_27-02-2024_22_45__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_27-02-2024_22_53__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_27-02-2024_22_53__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_27-02-2024_23_08_[Changes]1/shelved.patch\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_27-02-2024_23_08__Changes_1.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_28-02-2024_00_26_[Changes]1/shelved.patch\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_28-02-2024_00_26__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_28-02-2024_00_26__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_28-02-2024_00_26__Changes_1.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2_25_2024_11_00_PM_[Changes]1/shelved.patch\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2_25_2024_11_00_PM__Changes_1.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/apigateway/src/main/java/com/niit/project/apigateway/configuration/Config.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/apigateway/src/main/java/com/niit/project/apigateway/configuration/Config.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/apigateway/src/main/resources/application.properties\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/apigateway/src/main/resources/application.properties\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/controller/AdminController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/controller/AdminController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/controller/UserController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/controller/UserController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/domain/Task.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/domain/Task.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/repository/ITaskRepository.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/repository/ITaskRepository.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/AdminServiceImpl.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/AdminServiceImpl.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/IAdminService.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/IAdminService.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/IUserService.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/IUserService.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/UserServiceImpl.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/UserServiceImpl.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/boardtaskservice/src/main/resources/application.properties\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/boardtaskservice/src/main/resources/application.properties\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/boardtaskservice/src/test/java/com/niit/project/boardtaskservice/service/AdminServiceTest.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/boardtaskservice/src/test/java/com/niit/project/boardtaskservice/service/AdminServiceTest.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/pom.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/pom.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/controller/UserController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/controller/UserController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/userauthenticationservice/src/main/resources/application.properties\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/userauthenticationservice/src/main/resources/application.properties\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"file://$PROJECT_DIR$/eurekaserver/pom.xml\" root0=\"SKIP_INSPECTION\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 4\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2cdYqHUix98h8sfJfDmmjGw5Lw0\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <OptionsSetting value=\"false\" id=\"Update\" />\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;jdk.selected.JAVA_MODULE&quot;: &quot;corretto-17&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/NIIT/Final Major Project/Major Project&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.lookFeel&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CreateClassDialog.RecentsKey\">\r\n      <recent name=\"com.niit.project.boardtaskservice.exceptions\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.BoardTaskServiceApplication\">\r\n    <configuration name=\"ApiGatewayApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.niit.project.apigateway.ApiGatewayApplication\" />\r\n      <module name=\"apigateway\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.niit.project.apigateway.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"BoardTaskServiceApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.niit.project.boardtaskservice.BoardTaskServiceApplication\" />\r\n      <module name=\"boardtaskservice\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.niit.project.boardtaskservice.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"EurekaServerApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.niit.project.eurekaserver.EurekaServerApplication\" />\r\n      <module name=\"eurekaserver\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.niit.project.eurekaserver.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"MailServiceApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.niit.project.MailService.MailServiceApplication\" />\r\n      <module name=\"MailService\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.niit.project.MailService.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserAuthenticationServiceApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.niit.project.userauthenticationservice.UserAuthenticationServiceApplication\" />\r\n      <module name=\"userauthenticationservice\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.niit.project.userauthenticationservice.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"JetRunConfigurationType\">\r\n      <module name=\"Kanban Board\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"KotlinStandaloneScriptRunConfigurationType\">\r\n      <module name=\"Kanban Board\" />\r\n      <option name=\"filePath\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.BoardTaskServiceApplication\" />\r\n        <item itemvalue=\"Application.UserAuthenticationServiceApplication\" />\r\n        <item itemvalue=\"Application.MailServiceApplication\" />\r\n        <item itemvalue=\"Application.ApiGatewayApplication\" />\r\n        <item itemvalue=\"Application.EurekaServerApplication\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"3accaff2-95c0-4f5b-bacb-4249d94e92aa\" name=\"Changes\" comment=\"\" />\r\n      <created>1708420669437</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1708420669437</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"started\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708421271711</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708421271711</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"started\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708423070225</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708423070225</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"updated UserService\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708443467339</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708443467339</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"security is created\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708495653761</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708495653761</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"security checking\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708495846412</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708495846412</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"security package is created\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708495897559</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708495897559</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"jwt security updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708498293469</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708498293469</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Application properties updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708498937269</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708498937269</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"jwt token security updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708500192558</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708500192558</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"IRepository updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708603781826</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708603781826</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"ITaskService And Proxy updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708609359280</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708609359280</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"register,savetask,updated task implemented\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708621466516</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708621466516</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"testing service layer login success and fail are updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708625633406</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708625633406</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"getUserName,getAllUser,getUserRole methods are updated in taskservice\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708626050836</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708626050836</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"userauth repository test case is updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708626533067</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708626533067</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"service interface changes are updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708668428842</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708668428842</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"JWTFilter updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708670581884</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708670581884</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"usercontroller layer updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708672581325</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708672581325</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"taskcontroller layer updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708673655848</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708673655848</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"taskcontroller layer methods updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708679464725</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708679464725</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"apigateway updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708680759507</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708680759507</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"apigateway updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708681307335</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708681307335</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"apigateway updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708681837287</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708681837287</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\"updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708685745360</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708685745360</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00025\" summary=\"Annotations and Application.properties updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708705904757</created>\r\n      <option name=\"number\" value=\"00025\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708705904757</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00026\" summary=\"controller for (save task to user,get one task,get all task) service testing\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708871376856</created>\r\n      <option name=\"number\" value=\"00026\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708871376856</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00027\" summary=\"controller for (save task to user,get one task,get all task) service testing\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708871413309</created>\r\n      <option name=\"number\" value=\"00027\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708871413309</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00028\" summary=\"delete user is updated inn= service and controller\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708877706216</created>\r\n      <option name=\"number\" value=\"00028\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708877706216</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00029\" summary=\"controller updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708881214067</created>\r\n      <option name=\"number\" value=\"00029\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00029\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708881214067</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00030\" summary=\"api gateway is updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708881820173</created>\r\n      <option name=\"number\" value=\"00030\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00030\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708881820174</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00031\" summary=\"role hard code is updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708965437314</created>\r\n      <option name=\"number\" value=\"00031\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00031\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708965437314</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00032\" summary=\"jwt  updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1709052898373</created>\r\n      <option name=\"number\" value=\"00032\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00032\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1709052898373</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00033\" summary=\"updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1709053308076</created>\r\n      <option name=\"number\" value=\"00033\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00033\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1709053308076</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00034\" summary=\"updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1709053338723</created>\r\n      <option name=\"number\" value=\"00034\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00034\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1709053338723</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00035\" summary=\"admin impl and IAdminservice are updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1709054050888</created>\r\n      <option name=\"number\" value=\"00035\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00035\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1709054050888</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00036\" summary=\"aboardTaskService(UserController) updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1709055085222</created>\r\n      <option name=\"number\" value=\"00036\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00036\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1709055085222</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00037\" summary=\"User controller updated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1709055592684</created>\r\n      <option name=\"number\" value=\"00037\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00037\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1709055592684</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"38\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"IRepository updated\" />\r\n    <MESSAGE value=\"IRepository AND PROXY updated\" />\r\n    <MESSAGE value=\"ITaskService And Proxy updated\" />\r\n    <MESSAGE value=\"register,savetask,updated task implemented\" />\r\n    <MESSAGE value=\"testing service layer login success and fail are updated\" />\r\n    <MESSAGE value=\"getUserName,getAllUser,getUserRole methods are updated in taskservice\" />\r\n    <MESSAGE value=\"userauth repository test case is updated\" />\r\n    <MESSAGE value=\"service interface changes are updated\" />\r\n    <MESSAGE value=\"JWTFilter updated\" />\r\n    <MESSAGE value=\"usercontroller layer updated\" />\r\n    <MESSAGE value=\"taskcontroller layer updated\" />\r\n    <MESSAGE value=\"taskcontroller layer methods updated\" />\r\n    <MESSAGE value=\"apigateway updated\" />\r\n    <MESSAGE value=\"an\" />\r\n    <MESSAGE value=\"Annotations and Application.properties updated\" />\r\n    <MESSAGE value=\"controller for (save task to user,get one task,get all task) service testing\" />\r\n    <MESSAGE value=\"delete user is updated inn= service and controller\" />\r\n    <MESSAGE value=\"controller updated\" />\r\n    <MESSAGE value=\"api gateway is updated\" />\r\n    <MESSAGE value=\"role hard code is updated\" />\r\n    <MESSAGE value=\"jwt  updated\" />\r\n    <MESSAGE value=\"updated\" />\r\n    <MESSAGE value=\"admin impl and IAdminservice are updated\" />\r\n    <MESSAGE value=\"aboardTaskService(UserController) updated\" />\r\n    <MESSAGE value=\"User controller updated\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"User controller updated\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision b69f49a111fee2115c6c717c8827c23af62d88ab)
+++ b/.idea/workspace.xml	(date 1711435839960)
@@ -5,48 +5,11 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="3accaff2-95c0-4f5b-bacb-4249d94e92aa" name="Changes" comment="admin controller and service test cases completed">
-      <change afterPath="$PROJECT_DIR$/MailService/src/main/java/com/niit/project/MailService/controller/MailController.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/MailService/src/main/java/com/niit/project/MailService/domain/EmailDetails.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/MailService/src/main/java/com/niit/project/MailService/service/MailService.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/exceptions/InvalidStatusChangeException.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/exceptions/UserAlreadyHasMoreTaskException.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/encodings.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/encodings.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_01-03-2024_22_16_[Changes]1/shelved.patch" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_01-03-2024_22_16__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_01-03-2024_22_16__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_01-03-2024_22_16__Changes_1.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_24-02-2024_19_24_[Changes]1/shelved.patch" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_24-02-2024_19_24__Changes_1.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_25-02-2024_23_04_[Changes]/shelved.patch" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_25-02-2024_23_04__Changes_.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_27-02-2024_22_26_[Changes]1/shelved.patch" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_27-02-2024_22_26__Changes_1.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_27-02-2024_22_29__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_27-02-2024_22_29__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_27-02-2024_22_45__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_27-02-2024_22_45__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_27-02-2024_22_53__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_27-02-2024_22_53__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_27-02-2024_23_08_[Changes]1/shelved.patch" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_27-02-2024_23_08__Changes_1.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_28-02-2024_00_26_[Changes]1/shelved.patch" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_28-02-2024_00_26__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_28-02-2024_00_26__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_28-02-2024_00_26__Changes_1.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2_25_2024_11_00_PM_[Changes]1/shelved.patch" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2_25_2024_11_00_PM__Changes_1.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26-03-2024_12_11__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26-03-2024_12_11__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26-03-2024_12_11__Changes_1.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26-03-2024_12_11__Changes_1.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_1_2024_10_18_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_1_2024_10_18_PM__Changes_.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/apigateway/src/main/java/com/niit/project/apigateway/configuration/Config.java" beforeDir="false" afterPath="$PROJECT_DIR$/apigateway/src/main/java/com/niit/project/apigateway/configuration/Config.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/apigateway/src/main/resources/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/apigateway/src/main/resources/application.properties" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/controller/AdminController.java" beforeDir="false" afterPath="$PROJECT_DIR$/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/controller/AdminController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/controller/UserController.java" beforeDir="false" afterPath="$PROJECT_DIR$/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/controller/UserController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/domain/Task.java" beforeDir="false" afterPath="$PROJECT_DIR$/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/domain/Task.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/repository/ITaskRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/repository/ITaskRepository.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/AdminServiceImpl.java" beforeDir="false" afterPath="$PROJECT_DIR$/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/AdminServiceImpl.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/IAdminService.java" beforeDir="false" afterPath="$PROJECT_DIR$/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/IAdminService.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/IUserService.java" beforeDir="false" afterPath="$PROJECT_DIR$/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/IUserService.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/UserServiceImpl.java" beforeDir="false" afterPath="$PROJECT_DIR$/boardtaskservice/src/main/java/com/niit/project/boardtaskservice/services/UserServiceImpl.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/boardtaskservice/src/main/resources/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/boardtaskservice/src/main/resources/application.properties" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/boardtaskservice/src/test/java/com/niit/project/boardtaskservice/service/AdminServiceTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/boardtaskservice/src/test/java/com/niit/project/boardtaskservice/service/AdminServiceTest.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/controller/UserController.java" beforeDir="false" afterPath="$PROJECT_DIR$/userauthenticationservice/src/main/java/com/niit/project/userauthenticationservice/controller/UserController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/userauthenticationservice/src/main/resources/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/userauthenticationservice/src/main/resources/application.properties" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -62,6 +25,7 @@
     </option>
   </component>
   <component name="Git.Settings">
+    <option name="PUSH_AUTO_UPDATE" value="true" />
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
   <component name="HighlightingSettingsPerFile">
@@ -496,11 +460,26 @@
       <option name="project" value="LOCAL" />
       <updated>1709055592684</updated>
     </task>
-    <option name="localTasksCounter" value="38" />
+    <task id="LOCAL-00038" summary="admin controller and service test cases completed">
+      <option name="closed" value="true" />
+      <created>1711435165887</created>
+      <option name="number" value="00038" />
+      <option name="presentableId" value="LOCAL-00038" />
+      <option name="project" value="LOCAL" />
+      <updated>1711435165887</updated>
+    </task>
+    <task id="LOCAL-00039" summary="admin controller and service test cases completed">
+      <option name="closed" value="true" />
+      <created>1711435178757</created>
+      <option name="number" value="00039" />
+      <option name="presentableId" value="LOCAL-00039" />
+      <option name="project" value="LOCAL" />
+      <updated>1711435178757</updated>
+    </task>
+    <option name="localTasksCounter" value="40" />
     <servers />
   </component>
   <component name="VcsManagerConfiguration">
-    <MESSAGE value="IRepository updated" />
     <MESSAGE value="IRepository AND PROXY updated" />
     <MESSAGE value="ITaskService And Proxy updated" />
     <MESSAGE value="register,savetask,updated task implemented" />
@@ -525,6 +504,7 @@
     <MESSAGE value="admin impl and IAdminservice are updated" />
     <MESSAGE value="aboardTaskService(UserController) updated" />
     <MESSAGE value="User controller updated" />
-    <option name="LAST_COMMIT_MESSAGE" value="User controller updated" />
+    <MESSAGE value="admin controller and service test cases completed" />
+    <option name="LAST_COMMIT_MESSAGE" value="admin controller and service test cases completed" />
   </component>
 </project>
\ No newline at end of file
Index: boardtaskservice/src/test/java/com/niit/project/boardtaskservice/service/AdminServiceTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import com.niit.project.boardtaskservice.domain.Task;\r\nimport com.niit.project.boardtaskservice.domain.UserDetails;\r\nimport com.niit.project.boardtaskservice.exceptions.TaskAlreadyExistsException;\r\nimport com.niit.project.boardtaskservice.exceptions.TaskNotFoundException;\r\nimport com.niit.project.boardtaskservice.exceptions.UserAlreadyExistsException;\r\nimport com.niit.project.boardtaskservice.exceptions.UserNotFoundException;\r\nimport com.niit.project.boardtaskservice.repository.ITaskRepository;\r\nimport com.niit.project.boardtaskservice.proxy.TaskProxy;\r\nimport com.niit.project.boardtaskservice.services.AdminServiceImpl;\r\nimport org.junit.jupiter.api.*;\r\nimport org.junit.jupiter.api.extension.ExtendWith;\r\nimport org.mockito.InjectMocks;\r\nimport org.mockito.Mock;\r\nimport org.mockito.junit.jupiter.MockitoExtension;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\nimport java.util.Optional;\r\nimport static org.junit.jupiter.api.Assertions.*;\r\nimport static org.mockito.Mockito.*;\r\n@ExtendWith(MockitoExtension.class)\r\nclass AdminServiceTest {\r\n    @Mock\r\n    private ITaskRepository taskRepository;\r\n    @Mock\r\n    private TaskProxy taskProxy;\r\n    @InjectMocks\r\n    private AdminServiceImpl adminService;\r\n    private UserDetails user;\r\n    private Task task1,task2;\r\n//    @BeforeEach\r\n//    void setUp() {\r\n//        user = new UserDetails(\"shubham@gmail.com\", \"User\", \"password\", \"user\", new ArrayList<>());\r\n//        task1 = new Task(1, \"Project\", \"Creating\", \"2024-02-22\", \"shubham\", \"In Progress\");\r\n//        task2 = new Task(2, \"Project2\", \"Creating2\", \"2024-02-23\", \"shubham\", \"In Progress\");\r\n//        user.setTaskList(Arrays.asList(task1, task2));\r\n//    }\r\n//\r\n//    @Test\r\n//    void deleteTask_Success() throws TaskNotFoundException, UserNotFoundException {\r\n//        UserDetails mockedUser = mock(UserDetails.class);\r\n//        Task taskToDelete = new Task(1, \"TaskToDelete\", \"Description\", \"2024-02-22\", \"AssignTo\", \"Status\");\r\n//        List<Task> taskList = new ArrayList<>();\r\n//        taskList.add(taskToDelete);\r\n//        when(taskRepository.findById(anyString())).thenReturn(Optional.of(mockedUser));\r\n//        when(mockedUser.getTaskList()).thenReturn(taskList);\r\n//        when(taskRepository.save(any())).thenReturn(mockedUser);\r\n//        UserDetails updatedUser = adminService.deleteTask(taskToDelete, \"anyEmailId\");\r\n//        verify(taskRepository, times(1)).findById(\"anyEmailId\");\r\n//        verify(taskRepository, times(1)).save(mockedUser);\r\n//        assertNotNull(updatedUser);\r\n//        assertEquals(mockedUser, updatedUser);\r\n//        assertFalse(updatedUser.getTaskList().contains(taskToDelete));\r\n//    }\r\n//\r\n//\r\n//\r\n//    @Test\r\n//    void getUserName_UserFound_ReturnsUserName() throws UserNotFoundException {\r\n//        String emailId = \"shubham@gmail.com\";\r\n//        String expectedUserName = \"Test User\";\r\n//        UserDetails userDetails = new UserDetails();\r\n//        userDetails.setEmailId(emailId);\r\n//        userDetails.setUserName(expectedUserName);\r\n//        when(taskRepository.findById(emailId)).thenReturn(Optional.of(userDetails));\r\n//        String actualUserName = adminService.getUserName(emailId);\r\n//        verify(taskRepository, times(1)).findById(emailId);\r\n//        assertEquals(expectedUserName, actualUserName);\r\n//    }\r\n//    @Test\r\n//    void getUserName_UserNotFound_ThrowsUserNotFoundException() {\r\n//        String emailId = \"robin@gmial.com\";\r\n//        when(taskRepository.findById(emailId)).thenReturn(Optional.empty());\r\n//        assertThrows(UserNotFoundException.class, () -> adminService.getUserName(emailId));\r\n//        verify(taskRepository, times(1)).findById(emailId);\r\n//    }\r\n//\r\n//    @Test\r\n//    void registerUser_Success() throws UserAlreadyExistsException {\r\n//        when(taskRepository.findById(user.getEmailId())).thenReturn(Optional.empty());\r\n//        when(taskRepository.save(user)).thenReturn(user);\r\n//\r\n//        UserDetails savedUser = adminService.registerUser(user);\r\n//\r\n//        assertNotNull(savedUser);\r\n//        assertEquals(user, savedUser);\r\n//        verify(taskProxy, times(1)).registerUser(user);\r\n//    }\r\n//    @Test\r\n//    void registerUser_UserAlreadyExists() {\r\n//        when(taskRepository.findById(user.getEmailId())).thenReturn(Optional.of(user));\r\n//\r\n//        assertThrows(UserAlreadyExistsException.class, () -> adminService.registerUser(user));\r\n//\r\n//        verify(taskRepository, never()).save(any());\r\n//        verify(taskProxy, never()).registerUser(any());\r\n//    }\r\n//    @Test\r\n//    void saveTaskToUser_Success() throws TaskAlreadyExistsException, UserAlreadyExistsException {\r\n//        UserDetails mockedUser = mock(UserDetails.class);\r\n//\r\n//        List<Task> taskList = new ArrayList<>();\r\n//        when(mockedUser.getTaskList()).thenReturn(taskList);\r\n//        when(taskRepository.findById(anyString())).thenReturn(Optional.of(mockedUser));\r\n//\r\n//        UserDetails updatedUser = adminService.saveTaskToUser(task1, \"anyEmailId\");\r\n//    }\r\n//    @Test\r\n//    void updateTaskToUser_Success() throws TaskNotFoundException, UserNotFoundException {\r\n//        when(taskRepository.findById(user.getEmailId())).thenReturn(Optional.of(user));\r\n//        when(taskRepository.save(any())).thenReturn(user);\r\n//\r\n//        UserDetails updatedUser = adminService.updateTaskToUser(task1, user.getEmailId());\r\n//\r\n//        assertNotNull(updatedUser);\r\n//        assertTrue(updatedUser.getTaskList().contains(task1));\r\n//        verify(taskRepository, times(1)).save(user);\r\n//    }\r\n//    @Test\r\n//    void getUserRole_UserFound_ReturnsRole() throws UserNotFoundException {\r\n//        // Mock data\r\n//        String emailId = \"sharath@gmail.com\";\r\n//        String role = \"admin\";\r\n//        UserDetails userDetails = new UserDetails();\r\n//        userDetails.setRole(role);\r\n//        when(taskRepository.findById(emailId)).thenReturn(Optional.of(userDetails));\r\n//        String actualRole = adminService.getUserRole(emailId);\r\n//        verify(taskRepository, times(2)).findById(emailId);\r\n//        assertEquals(role, actualRole);\r\n//    }\r\n//\r\n//\r\n//\r\n//\r\n//    @Test\r\n//    void getUserRole_UserNotFound_ThrowsUserNotFoundException() {\r\n//        String emailId = \"nonexistent@example.com\";\r\n//        when(taskRepository.findById(emailId)).thenReturn(Optional.empty());\r\n//        assertThrows(UserNotFoundException.class, () -> adminService.getUserRole(emailId));\r\n//        verify(taskRepository, times(1)).findById(emailId);\r\n//    }\r\n//    @Test\r\n//    void getAllUser_UserFound_ReturnsAllUsers() throws UserNotFoundException {\r\n//        String emailId = \"sharath@gmail.com\";\r\n//        UserDetails userDetails = new UserDetails();\r\n//        List<UserDetails> userList = new ArrayList<>();\r\n//        userList.add(userDetails);\r\n//        when(taskRepository.findById(emailId)).thenReturn(Optional.of(userDetails));\r\n//        when(taskRepository.findAll()).thenReturn(userList);\r\n//        List<UserDetails> actualUsers = adminService.getAllUser(emailId);\r\n//        verify(taskRepository, times(1)).findById(emailId);\r\n//        verify(taskRepository, times(1)).findAll();\r\n//        assertEquals(userList, actualUsers);\r\n//    }\r\n//    @Test\r\n//    void getAllUser_UserNotFound_ThrowsUserNotFoundException() {\r\n//        String emailId = \"king@gmail.com\";\r\n//        when(taskRepository.findById(emailId)).thenReturn(Optional.empty());\r\n//        assertThrows(UserNotFoundException.class, () -> adminService.getAllUser(emailId));\r\n//        verify(taskRepository, times(1)).findById(emailId);\r\n//        verify(taskRepository, never()).findAll();\r\n//    }\r\n//}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/boardtaskservice/src/test/java/com/niit/project/boardtaskservice/service/AdminServiceTest.java b/boardtaskservice/src/test/java/com/niit/project/boardtaskservice/service/AdminServiceTest.java
--- a/boardtaskservice/src/test/java/com/niit/project/boardtaskservice/service/AdminServiceTest.java	(revision b69f49a111fee2115c6c717c8827c23af62d88ab)
+++ b/boardtaskservice/src/test/java/com/niit/project/boardtaskservice/service/AdminServiceTest.java	(date 1711435549460)
@@ -18,16 +18,9 @@
 import java.util.Optional;
 import static org.junit.jupiter.api.Assertions.*;
 import static org.mockito.Mockito.*;
-@ExtendWith(MockitoExtension.class)
-class AdminServiceTest {
-    @Mock
-    private ITaskRepository taskRepository;
-    @Mock
-    private TaskProxy taskProxy;
-    @InjectMocks
-    private AdminServiceImpl adminService;
-    private UserDetails user;
-    private Task task1,task2;
+//@ExtendWith(MockitoExtension.class)
+//class AdminServiceTest {
+   // private Task task1,task2;
 //    @BeforeEach
 //    void setUp() {
 //        user = new UserDetails("shubham@gmail.com", "User", "password", "user", new ArrayList<>());
